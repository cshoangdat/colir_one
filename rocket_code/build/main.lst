ARM GAS  /tmp/cc0rXBD8.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_SDIO_SD_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_SDIO_SD_Init:
  27              	.LFB148:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "fatfs.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "NRF24L01.h"
  26:Core/Src/main.c **** #include "bno055_stm32.h"
  27:Core/Src/main.c **** #include "nmea_parse.h"
  28:Core/Src/main.c **** #include "pca9685.h"
  29:Core/Src/main.c **** #include "colir_one.h"
  30:Core/Src/main.c **** #include "bmp581.h"
  31:Core/Src/main.c **** 
ARM GAS  /tmp/cc0rXBD8.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** #define RxBuffer_SIZE 64  //configure uart receive buffer size
  42:Core/Src/main.c **** #define DataBuffer_SIZE 512 //gather a few rxBuffer frames before parsing
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** SD_HandleTypeDef hsd;
  54:Core/Src/main.c **** DMA_HandleTypeDef hdma_sdio_rx;
  55:Core/Src/main.c **** DMA_HandleTypeDef hdma_sdio_tx;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  58:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** UART_HandleTypeDef huart2;
  61:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_rx;
  62:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_tx;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PV */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  69:Core/Src/main.c **** void SystemClock_Config(void);
  70:Core/Src/main.c **** static void MX_GPIO_Init(void);
  71:Core/Src/main.c **** static void MX_DMA_Init(void);
  72:Core/Src/main.c **** static void MX_I2C2_Init(void);
  73:Core/Src/main.c **** static void MX_SPI3_Init(void);
  74:Core/Src/main.c **** static void MX_SDIO_SD_Init(void);
  75:Core/Src/main.c **** static void MX_SPI1_Init(void);
  76:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  77:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE END PFP */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  82:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  83:Core/Src/main.c **** uint8_t TxAddress[] = {0xEE,0xDD,0xCC,0xBB,0xAA};
  84:Core/Src/main.c **** uint8_t RxAddress[] = {0xAA,0xDD,0xCC,0xBB,0xAA};
  85:Core/Src/main.c **** char TxData[32]; // Max message length 32 bytes
  86:Core/Src/main.c **** uint8_t RxData[32];
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** char cmdSymbol;
ARM GAS  /tmp/cc0rXBD8.s 			page 3


  89:Core/Src/main.c **** char cmdParams[5][6];
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** uint32_t value_adc;
  92:Core/Src/main.c **** uint8_t write_logs = 0;
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** // Functions for UART receiving, based on the DMA receive function, implementations may vary
  95:Core/Src/main.c **** uint16_t oldPos = 0;
  96:Core/Src/main.c **** uint16_t newPos = 0;
  97:Core/Src/main.c **** uint8_t RxBuffer[RxBuffer_SIZE];
  98:Core/Src/main.c **** uint8_t DataBuffer[DataBuffer_SIZE];
  99:Core/Src/main.c **** //create a GPS data structure
 100:Core/Src/main.c **** GPS myData;
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** float zeroAltitude = 0;
 103:Core/Src/main.c **** struct bmp5_sensor_data bmpData = {0,0};
 104:Core/Src/main.c **** float apogee = 0;
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** colir_one_rocket_state rState;
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** void FigherLighter(uint8_t lighterNumber){
 109:Core/Src/main.c **** 	uint16_t pinNumber = 0 | (1<<(6+lighterNumber));
 110:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOE, pinNumber, GPIO_PIN_SET);
 111:Core/Src/main.c **** 	HAL_Delay(15);
 112:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOE, pinNumber, GPIO_PIN_RESET);
 113:Core/Src/main.c **** }
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** void LogData(char data[]){
 116:Core/Src/main.c **** 	if(write_logs == 1)
 117:Core/Src/main.c **** 		log_data(data);
 118:Core/Src/main.c **** }
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** void ParseReceivedCommand(char cmd[], uint8_t payloadSize)
 122:Core/Src/main.c **** {
 123:Core/Src/main.c **** 	if(cmd[0] == '\0')
 124:Core/Src/main.c **** 		return;
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** 	cmdSymbol = cmd[0];
 127:Core/Src/main.c **** 	int cmdCounter = 0;
 128:Core/Src/main.c **** 	int cmdParamCounter = 0;
 129:Core/Src/main.c **** 	for(uint8_t i = 2; i < payloadSize; i++){
 130:Core/Src/main.c **** 		if(cmd[i] == ' '){
 131:Core/Src/main.c **** 			cmdCounter++;
 132:Core/Src/main.c **** 			cmdParamCounter = 0;
 133:Core/Src/main.c **** 		}
 134:Core/Src/main.c **** 		else{
 135:Core/Src/main.c **** 			cmdParams[cmdCounter][cmdParamCounter] = cmd[i];
 136:Core/Src/main.c **** 			cmdParamCounter++;
 137:Core/Src/main.c **** 		}
 138:Core/Src/main.c **** 	}
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** 	if(cmdSymbol == 's'){ //format like "s {servoNumber} {servoAngle} {servoNumber} {servoAngle}"
 141:Core/Src/main.c **** 		int servoNumber = atoi(cmdParams[0]);
 142:Core/Src/main.c **** 		int servoAngle = atoi(cmdParams[1]);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** 		HAL_I2C_DeInit(&hi2c2);
 145:Core/Src/main.c **** 		MX_I2C2_Init();
ARM GAS  /tmp/cc0rXBD8.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** 		  PCA9685_Init(&hi2c2);
 148:Core/Src/main.c **** 		  PCA9685_SetPwmFrequency(50);
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** 		PCA9685_STATUS servoAngleStatus = PCA9685_SetServoAngle(servoNumber - 1, servoAngle);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** 		/*if(cmdParams[2] != 0){
 153:Core/Src/main.c **** 			servoNumber = atoi(cmdParams[2]);
 154:Core/Src/main.c **** 			servoAngle = atoi(cmdParams[3]);
 155:Core/Src/main.c **** 			PCA9685_SetServoAngle(servoNumber - 1, servoAngle);
 156:Core/Src/main.c **** 		}*/
 157:Core/Src/main.c **** 	}
 158:Core/Src/main.c **** 	else if(cmdSymbol == 'l'){ //format like "s {servoNumber} {servoAngle}"
 159:Core/Src/main.c **** 		int lighterNumber = atoi(cmdParams[0]);
 160:Core/Src/main.c **** 		write_logs = 1;
 161:Core/Src/main.c **** 		rState = COLIRONE_CRUISE;
 162:Core/Src/main.c **** 		FigherLighter(lighterNumber);
 163:Core/Src/main.c **** 	}
 164:Core/Src/main.c **** 	else if(cmdSymbol == 'w' && cmdParams[0][0] == 'e'){
 165:Core/Src/main.c **** 		write_logs= 1;
 166:Core/Src/main.c **** 	}
 167:Core/Src/main.c **** 	else if(cmdSymbol == 'w' && cmdParams[0][0] == 'd'){
 168:Core/Src/main.c **** 		write_logs= 0;
 169:Core/Src/main.c **** 	}
 170:Core/Src/main.c **** 	else if(cmdSymbol == 'w' && cmdParams[0][0] == 's'){
 171:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 172:Core/Src/main.c **** 		read_logs_to_sd();
 173:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
 174:Core/Src/main.c **** 	}
 175:Core/Src/main.c **** 	else if(cmdSymbol == 'r' && cmdParams[0][0] == 'a'){
 176:Core/Src/main.c **** 		HAL_SPI_Init(&hspi1);
 177:Core/Src/main.c **** 		int8_t err = getSensorData(&bmpData);
 178:Core/Src/main.c **** 		zeroAltitude = calcAltitude(bmpData.pressure);
 179:Core/Src/main.c **** 		apogee = 0;
 180:Core/Src/main.c **** 		HAL_SPI_DeInit(&hspi1);
 181:Core/Src/main.c **** 	}
 182:Core/Src/main.c **** 	else if(cmdSymbol == 'r' && cmdParams[0][0] == 'l'){
 183:Core/Src/main.c **** 		HAL_SPI_Init(&hspi1);
 184:Core/Src/main.c **** 		reset_logs();
 185:Core/Src/main.c **** 		HAL_SPI_DeInit(&hspi1);
 186:Core/Src/main.c **** 	}
 187:Core/Src/main.c **** 	LogData(cmd);
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /*
 191:Core/Src/main.c ****  * UART buffer handler based on the DMA receive function, every implementation is valid,
 192:Core/Src/main.c ****  * as long as you pass a sufficiently long receive buffer to the library.
 193:Core/Src/main.c ****  * */
 194:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
 195:Core/Src/main.c **** {
 196:Core/Src/main.c ****     oldPos = newPos; //keep track of the last position in the buffer
 197:Core/Src/main.c ****     if(oldPos + Size > DataBuffer_SIZE){ //if the buffer is full, parse it, then reset the buffer
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****         uint16_t datatocopy = DataBuffer_SIZE-oldPos;  // find out how much space is left in the ma
 200:Core/Src/main.c ****         memcpy ((uint8_t *)DataBuffer+oldPos, RxBuffer, datatocopy);  // copy data in that remainin
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****         oldPos = 0;  // point to the start of the buffer
ARM GAS  /tmp/cc0rXBD8.s 			page 5


 203:Core/Src/main.c ****         memcpy ((uint8_t *)DataBuffer, (uint8_t *)RxBuffer+datatocopy, (Size-datatocopy));  // copy
 204:Core/Src/main.c ****         newPos = (Size-datatocopy);  // update the position
 205:Core/Src/main.c ****     }
 206:Core/Src/main.c ****     else{
 207:Core/Src/main.c ****         memcpy((uint8_t *)DataBuffer+oldPos, RxBuffer, Size); //copy received data to the buffer
 208:Core/Src/main.c ****         newPos = Size+oldPos; //update buffer position
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****     }
 211:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_DMA(&huart2, (uint8_t *)RxBuffer, RxBuffer_SIZE); //re-enable the DMA 
 212:Core/Src/main.c ****     __HAL_DMA_DISABLE_IT(&hdma_usart2_rx, DMA_IT_HT); //disable the half transfer interrupt
 213:Core/Src/main.c **** }
 214:Core/Src/main.c **** /* USER CODE END 0 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** /**
 217:Core/Src/main.c ****   * @brief  The application entry point.
 218:Core/Src/main.c ****   * @retval int
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c **** int main(void)
 221:Core/Src/main.c **** {
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END 1 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 230:Core/Src/main.c ****   HAL_Init();
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END Init */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* Configure the system clock */
 237:Core/Src/main.c ****   SystemClock_Config();
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE END SysInit */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* Initialize all configured peripherals */
 244:Core/Src/main.c ****   MX_GPIO_Init();
 245:Core/Src/main.c ****   MX_DMA_Init();
 246:Core/Src/main.c ****   MX_I2C2_Init();
 247:Core/Src/main.c ****   MX_SPI3_Init();
 248:Core/Src/main.c ****   MX_SDIO_SD_Init();
 249:Core/Src/main.c ****   MX_FATFS_Init();
 250:Core/Src/main.c ****   MX_SPI1_Init();
 251:Core/Src/main.c ****   MX_USART2_UART_Init();
 252:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 253:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_DMA(&huart2, (uint8_t *)RxBuffer, RxBuffer_SIZE);
 254:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_usart2_rx, DMA_IT_HT);
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   //HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 259:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_SET);
ARM GAS  /tmp/cc0rXBD8.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   colir_one_init(&hspi1);
 262:Core/Src/main.c ****   HAL_Delay(100);
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   read_logs_to_sd();
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   NRF24_Init();
 267:Core/Src/main.c ****   NRF24_TxRxMode(TxAddress, RxAddress, 76);
 268:Core/Src/main.c ****   NRF24_RxMode();
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   bno055_assignI2C(&hi2c2);
 271:Core/Src/main.c ****   bno055_setup();
 272:Core/Src/main.c ****   bno055_setOperationModeNDOF();
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   PCA9685_Init(&hi2c2);
 275:Core/Src/main.c ****   PCA9685_SetPwmFrequency(50);
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   //PCA9685_SetServoAngle(0, 90);
 278:Core/Src/main.c ****   //PCA9685_SetServoAngle(1, 87);
 279:Core/Src/main.c ****   //PCA9685_SetServoAngle(2, 83);
 280:Core/Src/main.c ****   //PCA9685_SetServoAngle(3, 84);
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   //PCA9685_SetServoAngle(7, 90);
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   HAL_SPI_Init(&hspi1);
 285:Core/Src/main.c ****   while(beginSPI() != BMP5_OK)
 286:Core/Src/main.c ****   {
 287:Core/Src/main.c ****     // Wait a bit to see if connection is established
 288:Core/Src/main.c ****     HAL_Delay(1000);
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c ****   HAL_Delay(1000);
 291:Core/Src/main.c ****   int8_t err = getSensorData(&bmpData);
 292:Core/Src/main.c ****   zeroAltitude = calcAltitude(bmpData.pressure);
 293:Core/Src/main.c ****   HAL_SPI_DeInit(&hspi1);
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   rState = COLIRONE_READY_TO_LAUNCH;
 296:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   uint32_t lastRxMode = HAL_GetTick();
 299:Core/Src/main.c ****   uint32_t lastTimestamp = HAL_GetTick();
 300:Core/Src/main.c ****   bool rxMode = false;
 301:Core/Src/main.c ****   float VBatt;
 302:Core/Src/main.c ****   float lastAltitude = 0;
 303:Core/Src/main.c ****   float verticalVelocity = 0;
 304:Core/Src/main.c ****   float altitude = 0;
 305:Core/Src/main.c ****   flash_config* logsConfig = get_logs_config();
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   double latitude = 0, longitude = 0;
 308:Core/Src/main.c ****   /* USER CODE END 2 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* Infinite loop */
 311:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 312:Core/Src/main.c ****   while (1)
 313:Core/Src/main.c ****   {
 314:Core/Src/main.c ****     /* USER CODE END WHILE */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
ARM GAS  /tmp/cc0rXBD8.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** 	uint32_t timestamp = HAL_GetTick();
 319:Core/Src/main.c **** 	bno055_vector_t orientation = bno055_getVectorEuler();
 320:Core/Src/main.c **** 	bno055_vector_t linearAccel = bno055_getVectorLinearAccel();
 321:Core/Src/main.c **** 	bno055_vector_t quaternion = bno055_getVectorQuaternion();
 322:Core/Src/main.c **** 	bno055_vector_t gyro = bno055_getVectorGyroscope();
 323:Core/Src/main.c **** 	logsConfig = get_logs_config();
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** 	HAL_SPI_Init(&hspi1);
 326:Core/Src/main.c **** 	int8_t err = getSensorData(&bmpData);
 327:Core/Src/main.c **** 	HAL_SPI_DeInit(&hspi1);
 328:Core/Src/main.c **** 	if(bmpData.pressure > 10000){
 329:Core/Src/main.c **** 		altitude = calcAltitude(bmpData.pressure) - zeroAltitude;
 330:Core/Src/main.c **** 		if(altitude > apogee)
 331:Core/Src/main.c **** 			apogee = altitude;
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** 		float deltaT = timestamp - lastTimestamp;
 334:Core/Src/main.c **** 		if(deltaT != 0)
 335:Core/Src/main.c **** 			verticalVelocity = (altitude - lastAltitude) / (deltaT / 1000);
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** 		lastAltitude = altitude;
 338:Core/Src/main.c **** 		lastTimestamp = timestamp;
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** 		if(verticalVelocity < -3 && altitude > 5 && altitude < 150 && (rState == COLIRONE_CRUISE || rStat
 341:Core/Src/main.c **** 			rState = COLIRONE_SHUTES_DEPLOYED;
 342:Core/Src/main.c **** 			ParseReceivedCommand("s 8 90", 32);
 343:Core/Src/main.c **** 		}
 344:Core/Src/main.c **** 	}
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** 	VBatt = (value_adc * 2 / 4095) * 7.4;
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** 	nmea_parse(&myData, DataBuffer);
 349:Core/Src/main.c **** 	latitude = myData.latitude;
 350:Core/Src/main.c **** 	longitude = myData.longitude;
 351:Core/Src/main.c **** 	if(longitude > 1000)
 352:Core/Src/main.c **** 		longitude = longitude / 1000;
 353:Core/Src/main.c **** 	if(myData.lonSide == 'W')
 354:Core/Src/main.c **** 		longitude = -longitude;
 355:Core/Src/main.c **** 	if(myData.latSide == 'S')
 356:Core/Src/main.c **** 		latitude = -latitude;
 357:Core/Src/main.c **** 	//ParseReceivedCommand("s 8 90", 32);
 358:Core/Src/main.c **** 	HAL_Delay(10);
 359:Core/Src/main.c **** 	if(!rxMode){
 360:Core/Src/main.c **** 		NRF24_TxMode();
 361:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 362:Core/Src/main.c **** 		sprintf(TxData, "p %d %f %f %d", timestamp, latitude, longitude, myData.satelliteCount);
 363:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 364:Core/Src/main.c **** 		LogData(TxData);
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** 		HAL_Delay(15);
 367:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 368:Core/Src/main.c **** 		sprintf(TxData, "h %d %.2f", timestamp, altitude);
 369:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 370:Core/Src/main.c **** 		LogData(TxData);
 371:Core/Src/main.c **** 
 372:Core/Src/main.c **** 		HAL_Delay(15);
 373:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
ARM GAS  /tmp/cc0rXBD8.s 			page 8


 374:Core/Src/main.c **** 		sprintf(TxData, "v %d %.2f", timestamp, verticalVelocity);
 375:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 376:Core/Src/main.c **** 		LogData(TxData);
 377:Core/Src/main.c **** 
 378:Core/Src/main.c **** 		HAL_Delay(15);
 379:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 380:Core/Src/main.c **** 		sprintf(TxData, "o %d %.2f %.2f %.2f", timestamp, -orientation.x, -orientation.y, -orientation.z)
 381:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 382:Core/Src/main.c **** 		LogData(TxData);
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** 		HAL_Delay(15);
 385:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 386:Core/Src/main.c **** 		sprintf(TxData, "g %d %.2f %.2f %.2f", timestamp, gyro.x, gyro.y, gyro.z);
 387:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 388:Core/Src/main.c **** 		LogData(TxData);
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** 		HAL_Delay(15);
 391:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 392:Core/Src/main.c **** 		sprintf(TxData, "a %d %.2f %.2f %.2f", timestamp, linearAccel.x, linearAccel.y, linearAccel.z);
 393:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 394:Core/Src/main.c **** 		LogData(TxData);
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** 		HAL_Delay(15);
 397:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 398:Core/Src/main.c **** 		sprintf(TxData, "q %d %.2f %.2f %.2f %.2f", timestamp, quaternion.x, quaternion.y, quaternion.z, 
 399:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 400:Core/Src/main.c **** 		LogData(TxData);
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** 		HAL_Delay(15);
 403:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 404:Core/Src/main.c **** 		sprintf(TxData, "s %d %d %d %d", timestamp, write_logs, rState, logsConfig->last_log);
 405:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 406:Core/Src/main.c **** 		LogData(TxData);
 407:Core/Src/main.c **** 
 408:Core/Src/main.c **** 		HAL_Delay(15);
 409:Core/Src/main.c **** 		if(timestamp - lastRxMode > 500){
 410:Core/Src/main.c **** 			memset(&TxData, 0, sizeof(TxData));
 411:Core/Src/main.c **** 			sprintf(TxData, "c");
 412:Core/Src/main.c **** 			NRF24_Transmit((uint8_t*)TxData);
 413:Core/Src/main.c **** 			rxMode = true;
 414:Core/Src/main.c **** 			NRF24_RxMode();
 415:Core/Src/main.c **** 			lastRxMode = HAL_GetTick();
 416:Core/Src/main.c **** 		}
 417:Core/Src/main.c **** 	}
 418:Core/Src/main.c **** 	else{
 419:Core/Src/main.c **** 		if (isDataAvailable() == 1)
 420:Core/Src/main.c **** 		{
 421:Core/Src/main.c **** 			memset(&RxData, 0, sizeof(RxData));
 422:Core/Src/main.c **** 			NRF24_Receive(RxData);
 423:Core/Src/main.c **** 			rxMode = false;
 424:Core/Src/main.c **** 			lastRxMode = HAL_GetTick();
 425:Core/Src/main.c **** 			ParseReceivedCommand((char*)RxData, sizeof(RxData));
 426:Core/Src/main.c **** 		}
 427:Core/Src/main.c **** 		else if(timestamp - lastRxMode > 250){
 428:Core/Src/main.c **** 			rxMode = false;
 429:Core/Src/main.c **** 			lastRxMode = HAL_GetTick();
 430:Core/Src/main.c **** 		}
ARM GAS  /tmp/cc0rXBD8.s 			page 9


 431:Core/Src/main.c **** 	}
 432:Core/Src/main.c **** 
 433:Core/Src/main.c **** 	HAL_Delay(70);
 434:Core/Src/main.c ****   }
 435:Core/Src/main.c ****   /* USER CODE END 3 */
 436:Core/Src/main.c **** }
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** /**
 439:Core/Src/main.c ****   * @brief System Clock Configuration
 440:Core/Src/main.c ****   * @retval None
 441:Core/Src/main.c ****   */
 442:Core/Src/main.c **** void SystemClock_Config(void)
 443:Core/Src/main.c **** {
 444:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 445:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 446:Core/Src/main.c **** 
 447:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 448:Core/Src/main.c ****   */
 449:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 450:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 453:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 454:Core/Src/main.c ****   */
 455:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 456:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 457:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 458:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 459:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 460:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 461:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 80;
 462:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 463:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 464:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 465:Core/Src/main.c ****   {
 466:Core/Src/main.c ****     Error_Handler();
 467:Core/Src/main.c ****   }
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 470:Core/Src/main.c ****   */
 471:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 472:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 473:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 474:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 475:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 476:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 477:Core/Src/main.c **** 
 478:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 479:Core/Src/main.c ****   {
 480:Core/Src/main.c ****     Error_Handler();
 481:Core/Src/main.c ****   }
 482:Core/Src/main.c **** }
 483:Core/Src/main.c **** 
 484:Core/Src/main.c **** /**
 485:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 486:Core/Src/main.c ****   * @param None
 487:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/cc0rXBD8.s 			page 10


 488:Core/Src/main.c ****   */
 489:Core/Src/main.c **** static void MX_I2C2_Init(void)
 490:Core/Src/main.c **** {
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 499:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 500:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 501:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 502:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 503:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 504:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 505:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 506:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 507:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 508:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 509:Core/Src/main.c ****   {
 510:Core/Src/main.c ****     Error_Handler();
 511:Core/Src/main.c ****   }
 512:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** }
 517:Core/Src/main.c **** 
 518:Core/Src/main.c **** /**
 519:Core/Src/main.c ****   * @brief SDIO Initialization Function
 520:Core/Src/main.c ****   * @param None
 521:Core/Src/main.c ****   * @retval None
 522:Core/Src/main.c ****   */
 523:Core/Src/main.c **** static void MX_SDIO_SD_Init(void)
 524:Core/Src/main.c **** {
  28              		.loc 1 524 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 0 */
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   /* USER CODE END SDIO_Init 0 */
 529:Core/Src/main.c **** 
 530:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 1 */
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****   /* USER CODE END SDIO_Init 1 */
 533:Core/Src/main.c ****   hsd.Instance = SDIO;
  33              		.loc 1 533 3 view .LVU1
  34              		.loc 1 533 16 is_stmt 0 view .LVU2
  35 0000 054B     		ldr	r3, .L2
  36 0002 064A     		ldr	r2, .L2+4
  37 0004 1A60     		str	r2, [r3]
 534:Core/Src/main.c ****   hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
ARM GAS  /tmp/cc0rXBD8.s 			page 11


  38              		.loc 1 534 3 is_stmt 1 view .LVU3
  39              		.loc 1 534 22 is_stmt 0 view .LVU4
  40 0006 0022     		movs	r2, #0
  41 0008 5A60     		str	r2, [r3, #4]
 535:Core/Src/main.c ****   hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
  42              		.loc 1 535 3 is_stmt 1 view .LVU5
  43              		.loc 1 535 24 is_stmt 0 view .LVU6
  44 000a 9A60     		str	r2, [r3, #8]
 536:Core/Src/main.c ****   hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
  45              		.loc 1 536 3 is_stmt 1 view .LVU7
  46              		.loc 1 536 27 is_stmt 0 view .LVU8
  47 000c DA60     		str	r2, [r3, #12]
 537:Core/Src/main.c ****   hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
  48              		.loc 1 537 3 is_stmt 1 view .LVU9
  49              		.loc 1 537 20 is_stmt 0 view .LVU10
  50 000e 1A61     		str	r2, [r3, #16]
 538:Core/Src/main.c ****   hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
  51              		.loc 1 538 3 is_stmt 1 view .LVU11
  52              		.loc 1 538 32 is_stmt 0 view .LVU12
  53 0010 5A61     		str	r2, [r3, #20]
 539:Core/Src/main.c ****   hsd.Init.ClockDiv = 4;
  54              		.loc 1 539 3 is_stmt 1 view .LVU13
  55              		.loc 1 539 21 is_stmt 0 view .LVU14
  56 0012 0422     		movs	r2, #4
  57 0014 9A61     		str	r2, [r3, #24]
 540:Core/Src/main.c ****   /* USER CODE BEGIN SDIO_Init 2 */
 541:Core/Src/main.c **** 
 542:Core/Src/main.c ****   /* USER CODE END SDIO_Init 2 */
 543:Core/Src/main.c **** 
 544:Core/Src/main.c **** }
  58              		.loc 1 544 1 view .LVU15
  59 0016 7047     		bx	lr
  60              	.L3:
  61              		.align	2
  62              	.L2:
  63 0018 00000000 		.word	hsd
  64 001c 002C0140 		.word	1073818624
  65              		.cfi_endproc
  66              	.LFE148:
  68              		.section	.text.MX_GPIO_Init,"ax",%progbits
  69              		.align	1
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	MX_GPIO_Init:
  75              	.LFB153:
 545:Core/Src/main.c **** 
 546:Core/Src/main.c **** /**
 547:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 548:Core/Src/main.c ****   * @param None
 549:Core/Src/main.c ****   * @retval None
 550:Core/Src/main.c ****   */
 551:Core/Src/main.c **** static void MX_SPI1_Init(void)
 552:Core/Src/main.c **** {
 553:Core/Src/main.c **** 
 554:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 555:Core/Src/main.c **** 
ARM GAS  /tmp/cc0rXBD8.s 			page 12


 556:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 559:Core/Src/main.c **** 
 560:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 561:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 562:Core/Src/main.c ****   hspi1.Instance = SPI1;
 563:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 564:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 565:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 566:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 567:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 568:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 569:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 570:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 571:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 572:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 573:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 574:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 575:Core/Src/main.c ****   {
 576:Core/Src/main.c ****     Error_Handler();
 577:Core/Src/main.c ****   }
 578:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 581:Core/Src/main.c **** 
 582:Core/Src/main.c **** }
 583:Core/Src/main.c **** 
 584:Core/Src/main.c **** /**
 585:Core/Src/main.c ****   * @brief SPI3 Initialization Function
 586:Core/Src/main.c ****   * @param None
 587:Core/Src/main.c ****   * @retval None
 588:Core/Src/main.c ****   */
 589:Core/Src/main.c **** static void MX_SPI3_Init(void)
 590:Core/Src/main.c **** {
 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
 593:Core/Src/main.c **** 
 594:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
 595:Core/Src/main.c **** 
 596:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
 599:Core/Src/main.c ****   /* SPI3 parameter configuration*/
 600:Core/Src/main.c ****   hspi3.Instance = SPI3;
 601:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 602:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 603:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 604:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 605:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 606:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 607:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 608:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 609:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 610:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 611:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 612:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
ARM GAS  /tmp/cc0rXBD8.s 			page 13


 613:Core/Src/main.c ****   {
 614:Core/Src/main.c ****     Error_Handler();
 615:Core/Src/main.c ****   }
 616:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
 619:Core/Src/main.c **** 
 620:Core/Src/main.c **** }
 621:Core/Src/main.c **** 
 622:Core/Src/main.c **** /**
 623:Core/Src/main.c ****   * @brief USART2 Initialization Function
 624:Core/Src/main.c ****   * @param None
 625:Core/Src/main.c ****   * @retval None
 626:Core/Src/main.c ****   */
 627:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 628:Core/Src/main.c **** {
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 633:Core/Src/main.c **** 
 634:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 635:Core/Src/main.c **** 
 636:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 637:Core/Src/main.c ****   huart2.Instance = USART2;
 638:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 639:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 640:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 641:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 642:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 643:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 644:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 645:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 646:Core/Src/main.c ****   {
 647:Core/Src/main.c ****     Error_Handler();
 648:Core/Src/main.c ****   }
 649:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 650:Core/Src/main.c **** 
 651:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 652:Core/Src/main.c **** 
 653:Core/Src/main.c **** }
 654:Core/Src/main.c **** 
 655:Core/Src/main.c **** /**
 656:Core/Src/main.c ****   * Enable DMA controller clock
 657:Core/Src/main.c ****   */
 658:Core/Src/main.c **** static void MX_DMA_Init(void)
 659:Core/Src/main.c **** {
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****   /* DMA controller clock enable */
 662:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 663:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 664:Core/Src/main.c **** 
 665:Core/Src/main.c ****   /* DMA interrupt init */
 666:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 667:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 668:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 669:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
ARM GAS  /tmp/cc0rXBD8.s 			page 14


 670:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 671:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 672:Core/Src/main.c ****   /* DMA2_Stream3_IRQn interrupt configuration */
 673:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 0, 0);
 674:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 675:Core/Src/main.c ****   /* DMA2_Stream6_IRQn interrupt configuration */
 676:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 0, 0);
 677:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 678:Core/Src/main.c **** 
 679:Core/Src/main.c **** }
 680:Core/Src/main.c **** 
 681:Core/Src/main.c **** /**
 682:Core/Src/main.c ****   * @brief GPIO Initialization Function
 683:Core/Src/main.c ****   * @param None
 684:Core/Src/main.c ****   * @retval None
 685:Core/Src/main.c ****   */
 686:Core/Src/main.c **** static void MX_GPIO_Init(void)
 687:Core/Src/main.c **** {
  76              		.loc 1 687 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 48
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 28
  83              		.cfi_offset 4, -28
  84              		.cfi_offset 5, -24
  85              		.cfi_offset 6, -20
  86              		.cfi_offset 7, -16
  87              		.cfi_offset 8, -12
  88              		.cfi_offset 9, -8
  89              		.cfi_offset 14, -4
  90 0004 8DB0     		sub	sp, sp, #52
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 80
 688:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  93              		.loc 1 688 3 view .LVU17
  94              		.loc 1 688 20 is_stmt 0 view .LVU18
  95 0006 0024     		movs	r4, #0
  96 0008 0794     		str	r4, [sp, #28]
  97 000a 0894     		str	r4, [sp, #32]
  98 000c 0994     		str	r4, [sp, #36]
  99 000e 0A94     		str	r4, [sp, #40]
 100 0010 0B94     		str	r4, [sp, #44]
 689:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 690:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 691:Core/Src/main.c **** 
 692:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 693:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 101              		.loc 1 693 3 is_stmt 1 view .LVU19
 102              	.LBB4:
 103              		.loc 1 693 3 view .LVU20
 104 0012 0194     		str	r4, [sp, #4]
 105              		.loc 1 693 3 view .LVU21
 106 0014 4A4B     		ldr	r3, .L6
 107 0016 1A6B     		ldr	r2, [r3, #48]
 108 0018 42F01002 		orr	r2, r2, #16
ARM GAS  /tmp/cc0rXBD8.s 			page 15


 109 001c 1A63     		str	r2, [r3, #48]
 110              		.loc 1 693 3 view .LVU22
 111 001e 1A6B     		ldr	r2, [r3, #48]
 112 0020 02F01002 		and	r2, r2, #16
 113 0024 0192     		str	r2, [sp, #4]
 114              		.loc 1 693 3 view .LVU23
 115 0026 019A     		ldr	r2, [sp, #4]
 116              	.LBE4:
 117              		.loc 1 693 3 view .LVU24
 694:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 118              		.loc 1 694 3 view .LVU25
 119              	.LBB5:
 120              		.loc 1 694 3 view .LVU26
 121 0028 0294     		str	r4, [sp, #8]
 122              		.loc 1 694 3 view .LVU27
 123 002a 1A6B     		ldr	r2, [r3, #48]
 124 002c 42F08002 		orr	r2, r2, #128
 125 0030 1A63     		str	r2, [r3, #48]
 126              		.loc 1 694 3 view .LVU28
 127 0032 1A6B     		ldr	r2, [r3, #48]
 128 0034 02F08002 		and	r2, r2, #128
 129 0038 0292     		str	r2, [sp, #8]
 130              		.loc 1 694 3 view .LVU29
 131 003a 029A     		ldr	r2, [sp, #8]
 132              	.LBE5:
 133              		.loc 1 694 3 view .LVU30
 695:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 134              		.loc 1 695 3 view .LVU31
 135              	.LBB6:
 136              		.loc 1 695 3 view .LVU32
 137 003c 0394     		str	r4, [sp, #12]
 138              		.loc 1 695 3 view .LVU33
 139 003e 1A6B     		ldr	r2, [r3, #48]
 140 0040 42F00102 		orr	r2, r2, #1
 141 0044 1A63     		str	r2, [r3, #48]
 142              		.loc 1 695 3 view .LVU34
 143 0046 1A6B     		ldr	r2, [r3, #48]
 144 0048 02F00102 		and	r2, r2, #1
 145 004c 0392     		str	r2, [sp, #12]
 146              		.loc 1 695 3 view .LVU35
 147 004e 039A     		ldr	r2, [sp, #12]
 148              	.LBE6:
 149              		.loc 1 695 3 view .LVU36
 696:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 150              		.loc 1 696 3 view .LVU37
 151              	.LBB7:
 152              		.loc 1 696 3 view .LVU38
 153 0050 0494     		str	r4, [sp, #16]
 154              		.loc 1 696 3 view .LVU39
 155 0052 1A6B     		ldr	r2, [r3, #48]
 156 0054 42F00402 		orr	r2, r2, #4
 157 0058 1A63     		str	r2, [r3, #48]
 158              		.loc 1 696 3 view .LVU40
 159 005a 1A6B     		ldr	r2, [r3, #48]
 160 005c 02F00402 		and	r2, r2, #4
 161 0060 0492     		str	r2, [sp, #16]
 162              		.loc 1 696 3 view .LVU41
ARM GAS  /tmp/cc0rXBD8.s 			page 16


 163 0062 049A     		ldr	r2, [sp, #16]
 164              	.LBE7:
 165              		.loc 1 696 3 view .LVU42
 697:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 166              		.loc 1 697 3 view .LVU43
 167              	.LBB8:
 168              		.loc 1 697 3 view .LVU44
 169 0064 0594     		str	r4, [sp, #20]
 170              		.loc 1 697 3 view .LVU45
 171 0066 1A6B     		ldr	r2, [r3, #48]
 172 0068 42F00202 		orr	r2, r2, #2
 173 006c 1A63     		str	r2, [r3, #48]
 174              		.loc 1 697 3 view .LVU46
 175 006e 1A6B     		ldr	r2, [r3, #48]
 176 0070 02F00202 		and	r2, r2, #2
 177 0074 0592     		str	r2, [sp, #20]
 178              		.loc 1 697 3 view .LVU47
 179 0076 059A     		ldr	r2, [sp, #20]
 180              	.LBE8:
 181              		.loc 1 697 3 view .LVU48
 698:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 182              		.loc 1 698 3 view .LVU49
 183              	.LBB9:
 184              		.loc 1 698 3 view .LVU50
 185 0078 0694     		str	r4, [sp, #24]
 186              		.loc 1 698 3 view .LVU51
 187 007a 1A6B     		ldr	r2, [r3, #48]
 188 007c 42F00802 		orr	r2, r2, #8
 189 0080 1A63     		str	r2, [r3, #48]
 190              		.loc 1 698 3 view .LVU52
 191 0082 1B6B     		ldr	r3, [r3, #48]
 192 0084 03F00803 		and	r3, r3, #8
 193 0088 0693     		str	r3, [sp, #24]
 194              		.loc 1 698 3 view .LVU53
 195 008a 069B     		ldr	r3, [sp, #24]
 196              	.LBE9:
 197              		.loc 1 698 3 view .LVU54
 699:Core/Src/main.c **** 
 700:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 701:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_7|GPIO_PIN_8
 198              		.loc 1 701 3 view .LVU55
 199 008c DFF8BC90 		ldr	r9, .L6+12
 200 0090 2246     		mov	r2, r4
 201 0092 41F68C71 		movw	r1, #8076
 202 0096 4846     		mov	r0, r9
 203 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 204              	.LVL0:
 702:Core/Src/main.c ****                           |GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12, GPIO_PIN_RESET);
 703:Core/Src/main.c **** 
 704:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 705:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_RESET);
 205              		.loc 1 705 3 view .LVU56
 206 009c 294F     		ldr	r7, .L6+4
 207 009e 2246     		mov	r2, r4
 208 00a0 1021     		movs	r1, #16
 209 00a2 3846     		mov	r0, r7
 210 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cc0rXBD8.s 			page 17


 211              	.LVL1:
 706:Core/Src/main.c **** 
 707:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 708:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, GPIO_PIN_SET);
 212              		.loc 1 708 3 view .LVU57
 213 00a8 274E     		ldr	r6, .L6+8
 214 00aa 0122     		movs	r2, #1
 215 00ac 8021     		movs	r1, #128
 216 00ae 3046     		mov	r0, r6
 217 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 218              	.LVL2:
 709:Core/Src/main.c **** 
 710:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 711:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, NRF_CE_Pin|NRF_CSN_Pin, GPIO_PIN_RESET);
 219              		.loc 1 711 3 view .LVU58
 220 00b4 DFF89880 		ldr	r8, .L6+16
 221 00b8 2246     		mov	r2, r4
 222 00ba C021     		movs	r1, #192
 223 00bc 4046     		mov	r0, r8
 224 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 225              	.LVL3:
 712:Core/Src/main.c **** 
 713:Core/Src/main.c ****   /*Configure GPIO pins : PE2 PE3 PE7 PE8
 714:Core/Src/main.c ****                            PE9 PE10 PE11 PE12 */
 715:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_7|GPIO_PIN_8
 226              		.loc 1 715 3 view .LVU59
 227              		.loc 1 715 23 is_stmt 0 view .LVU60
 228 00c2 41F68C73 		movw	r3, #8076
 229 00c6 0793     		str	r3, [sp, #28]
 716:Core/Src/main.c ****                           |GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 717:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 230              		.loc 1 717 3 is_stmt 1 view .LVU61
 231              		.loc 1 717 24 is_stmt 0 view .LVU62
 232 00c8 0125     		movs	r5, #1
 233 00ca 0895     		str	r5, [sp, #32]
 718:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 234              		.loc 1 718 3 is_stmt 1 view .LVU63
 235              		.loc 1 718 24 is_stmt 0 view .LVU64
 236 00cc 0994     		str	r4, [sp, #36]
 719:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 237              		.loc 1 719 3 is_stmt 1 view .LVU65
 238              		.loc 1 719 25 is_stmt 0 view .LVU66
 239 00ce 0A94     		str	r4, [sp, #40]
 720:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 240              		.loc 1 720 3 is_stmt 1 view .LVU67
 241 00d0 07A9     		add	r1, sp, #28
 242 00d2 4846     		mov	r0, r9
 243 00d4 FFF7FEFF 		bl	HAL_GPIO_Init
 244              	.LVL4:
 721:Core/Src/main.c **** 
 722:Core/Src/main.c ****   /*Configure GPIO pin : PC4 */
 723:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 245              		.loc 1 723 3 view .LVU68
 246              		.loc 1 723 23 is_stmt 0 view .LVU69
 247 00d8 1023     		movs	r3, #16
 248 00da 0793     		str	r3, [sp, #28]
 724:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/cc0rXBD8.s 			page 18


 249              		.loc 1 724 3 is_stmt 1 view .LVU70
 250              		.loc 1 724 24 is_stmt 0 view .LVU71
 251 00dc 0895     		str	r5, [sp, #32]
 725:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 252              		.loc 1 725 3 is_stmt 1 view .LVU72
 253              		.loc 1 725 24 is_stmt 0 view .LVU73
 254 00de 0994     		str	r4, [sp, #36]
 726:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 255              		.loc 1 726 3 is_stmt 1 view .LVU74
 256              		.loc 1 726 25 is_stmt 0 view .LVU75
 257 00e0 0A94     		str	r4, [sp, #40]
 727:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 258              		.loc 1 727 3 is_stmt 1 view .LVU76
 259 00e2 07A9     		add	r1, sp, #28
 260 00e4 3846     		mov	r0, r7
 261 00e6 FFF7FEFF 		bl	HAL_GPIO_Init
 262              	.LVL5:
 728:Core/Src/main.c **** 
 729:Core/Src/main.c ****   /*Configure GPIO pin : PD15 */
 730:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 263              		.loc 1 730 3 view .LVU77
 264              		.loc 1 730 23 is_stmt 0 view .LVU78
 265 00ea 4FF40043 		mov	r3, #32768
 266 00ee 0793     		str	r3, [sp, #28]
 731:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 267              		.loc 1 731 3 is_stmt 1 view .LVU79
 268              		.loc 1 731 24 is_stmt 0 view .LVU80
 269 00f0 4FF48813 		mov	r3, #1114112
 270 00f4 0893     		str	r3, [sp, #32]
 732:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 271              		.loc 1 732 3 is_stmt 1 view .LVU81
 272              		.loc 1 732 24 is_stmt 0 view .LVU82
 273 00f6 0994     		str	r4, [sp, #36]
 733:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 274              		.loc 1 733 3 is_stmt 1 view .LVU83
 275 00f8 07A9     		add	r1, sp, #28
 276 00fa 3046     		mov	r0, r6
 277 00fc FFF7FEFF 		bl	HAL_GPIO_Init
 278              	.LVL6:
 734:Core/Src/main.c **** 
 735:Core/Src/main.c ****   /*Configure GPIO pin : PC7 */
 736:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 279              		.loc 1 736 3 view .LVU84
 280              		.loc 1 736 23 is_stmt 0 view .LVU85
 281 0100 4FF08009 		mov	r9, #128
 282 0104 CDF81C90 		str	r9, [sp, #28]
 737:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 283              		.loc 1 737 3 is_stmt 1 view .LVU86
 284              		.loc 1 737 24 is_stmt 0 view .LVU87
 285 0108 0894     		str	r4, [sp, #32]
 738:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 286              		.loc 1 738 3 is_stmt 1 view .LVU88
 287              		.loc 1 738 24 is_stmt 0 view .LVU89
 288 010a 0223     		movs	r3, #2
 289 010c 0993     		str	r3, [sp, #36]
 739:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 290              		.loc 1 739 3 is_stmt 1 view .LVU90
ARM GAS  /tmp/cc0rXBD8.s 			page 19


 291 010e 07A9     		add	r1, sp, #28
 292 0110 3846     		mov	r0, r7
 293 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 294              	.LVL7:
 740:Core/Src/main.c **** 
 741:Core/Src/main.c ****   /*Configure GPIO pin : PD7 */
 742:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 295              		.loc 1 742 3 view .LVU91
 296              		.loc 1 742 23 is_stmt 0 view .LVU92
 297 0116 CDF81C90 		str	r9, [sp, #28]
 743:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 298              		.loc 1 743 3 is_stmt 1 view .LVU93
 299              		.loc 1 743 24 is_stmt 0 view .LVU94
 300 011a 0895     		str	r5, [sp, #32]
 744:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 301              		.loc 1 744 3 is_stmt 1 view .LVU95
 302              		.loc 1 744 24 is_stmt 0 view .LVU96
 303 011c 0994     		str	r4, [sp, #36]
 745:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 304              		.loc 1 745 3 is_stmt 1 view .LVU97
 305              		.loc 1 745 25 is_stmt 0 view .LVU98
 306 011e 0A94     		str	r4, [sp, #40]
 746:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 307              		.loc 1 746 3 is_stmt 1 view .LVU99
 308 0120 07A9     		add	r1, sp, #28
 309 0122 3046     		mov	r0, r6
 310 0124 FFF7FEFF 		bl	HAL_GPIO_Init
 311              	.LVL8:
 747:Core/Src/main.c **** 
 748:Core/Src/main.c ****   /*Configure GPIO pins : NRF_CE_Pin NRF_CSN_Pin */
 749:Core/Src/main.c ****   GPIO_InitStruct.Pin = NRF_CE_Pin|NRF_CSN_Pin;
 312              		.loc 1 749 3 view .LVU100
 313              		.loc 1 749 23 is_stmt 0 view .LVU101
 314 0128 C023     		movs	r3, #192
 315 012a 0793     		str	r3, [sp, #28]
 750:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 316              		.loc 1 750 3 is_stmt 1 view .LVU102
 317              		.loc 1 750 24 is_stmt 0 view .LVU103
 318 012c 0895     		str	r5, [sp, #32]
 751:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 319              		.loc 1 751 3 is_stmt 1 view .LVU104
 320              		.loc 1 751 24 is_stmt 0 view .LVU105
 321 012e 0994     		str	r4, [sp, #36]
 752:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 322              		.loc 1 752 3 is_stmt 1 view .LVU106
 323              		.loc 1 752 25 is_stmt 0 view .LVU107
 324 0130 0A94     		str	r4, [sp, #40]
 753:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 325              		.loc 1 753 3 is_stmt 1 view .LVU108
 326 0132 07A9     		add	r1, sp, #28
 327 0134 4046     		mov	r0, r8
 328 0136 FFF7FEFF 		bl	HAL_GPIO_Init
 329              	.LVL9:
 754:Core/Src/main.c **** 
 755:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 756:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 757:Core/Src/main.c **** }
ARM GAS  /tmp/cc0rXBD8.s 			page 20


 330              		.loc 1 757 1 is_stmt 0 view .LVU109
 331 013a 0DB0     		add	sp, sp, #52
 332              	.LCFI2:
 333              		.cfi_def_cfa_offset 28
 334              		@ sp needed
 335 013c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 336              	.L7:
 337              		.align	2
 338              	.L6:
 339 0140 00380240 		.word	1073887232
 340 0144 00080240 		.word	1073874944
 341 0148 000C0240 		.word	1073875968
 342 014c 00100240 		.word	1073876992
 343 0150 00040240 		.word	1073873920
 344              		.cfi_endproc
 345              	.LFE153:
 347              		.section	.text.MX_DMA_Init,"ax",%progbits
 348              		.align	1
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 353              	MX_DMA_Init:
 354              	.LFB152:
 659:Core/Src/main.c **** 
 355              		.loc 1 659 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 8
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 10B5     		push	{r4, lr}
 360              	.LCFI3:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
 364 0002 82B0     		sub	sp, sp, #8
 365              	.LCFI4:
 366              		.cfi_def_cfa_offset 16
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 367              		.loc 1 662 3 view .LVU111
 368              	.LBB10:
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 369              		.loc 1 662 3 view .LVU112
 370 0004 0024     		movs	r4, #0
 371 0006 0094     		str	r4, [sp]
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 372              		.loc 1 662 3 view .LVU113
 373 0008 1A4B     		ldr	r3, .L10
 374 000a 1A6B     		ldr	r2, [r3, #48]
 375 000c 42F48002 		orr	r2, r2, #4194304
 376 0010 1A63     		str	r2, [r3, #48]
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 377              		.loc 1 662 3 view .LVU114
 378 0012 1A6B     		ldr	r2, [r3, #48]
 379 0014 02F48002 		and	r2, r2, #4194304
 380 0018 0092     		str	r2, [sp]
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 381              		.loc 1 662 3 view .LVU115
 382 001a 009A     		ldr	r2, [sp]
ARM GAS  /tmp/cc0rXBD8.s 			page 21


 383              	.LBE10:
 662:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 384              		.loc 1 662 3 view .LVU116
 663:Core/Src/main.c **** 
 385              		.loc 1 663 3 view .LVU117
 386              	.LBB11:
 663:Core/Src/main.c **** 
 387              		.loc 1 663 3 view .LVU118
 388 001c 0194     		str	r4, [sp, #4]
 663:Core/Src/main.c **** 
 389              		.loc 1 663 3 view .LVU119
 390 001e 1A6B     		ldr	r2, [r3, #48]
 391 0020 42F40012 		orr	r2, r2, #2097152
 392 0024 1A63     		str	r2, [r3, #48]
 663:Core/Src/main.c **** 
 393              		.loc 1 663 3 view .LVU120
 394 0026 1B6B     		ldr	r3, [r3, #48]
 395 0028 03F40013 		and	r3, r3, #2097152
 396 002c 0193     		str	r3, [sp, #4]
 663:Core/Src/main.c **** 
 397              		.loc 1 663 3 view .LVU121
 398 002e 019B     		ldr	r3, [sp, #4]
 399              	.LBE11:
 663:Core/Src/main.c **** 
 400              		.loc 1 663 3 view .LVU122
 667:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 401              		.loc 1 667 3 view .LVU123
 402 0030 2246     		mov	r2, r4
 403 0032 2146     		mov	r1, r4
 404 0034 1020     		movs	r0, #16
 405 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 406              	.LVL10:
 668:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 407              		.loc 1 668 3 view .LVU124
 408 003a 1020     		movs	r0, #16
 409 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 410              	.LVL11:
 670:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 411              		.loc 1 670 3 view .LVU125
 412 0040 2246     		mov	r2, r4
 413 0042 2146     		mov	r1, r4
 414 0044 1120     		movs	r0, #17
 415 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 416              	.LVL12:
 671:Core/Src/main.c ****   /* DMA2_Stream3_IRQn interrupt configuration */
 417              		.loc 1 671 3 view .LVU126
 418 004a 1120     		movs	r0, #17
 419 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 420              	.LVL13:
 673:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 421              		.loc 1 673 3 view .LVU127
 422 0050 2246     		mov	r2, r4
 423 0052 2146     		mov	r1, r4
 424 0054 3B20     		movs	r0, #59
 425 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 426              	.LVL14:
 674:Core/Src/main.c ****   /* DMA2_Stream6_IRQn interrupt configuration */
ARM GAS  /tmp/cc0rXBD8.s 			page 22


 427              		.loc 1 674 3 view .LVU128
 428 005a 3B20     		movs	r0, #59
 429 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 430              	.LVL15:
 676:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 431              		.loc 1 676 3 view .LVU129
 432 0060 2246     		mov	r2, r4
 433 0062 2146     		mov	r1, r4
 434 0064 4520     		movs	r0, #69
 435 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 436              	.LVL16:
 677:Core/Src/main.c **** 
 437              		.loc 1 677 3 view .LVU130
 438 006a 4520     		movs	r0, #69
 439 006c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 440              	.LVL17:
 679:Core/Src/main.c **** 
 441              		.loc 1 679 1 is_stmt 0 view .LVU131
 442 0070 02B0     		add	sp, sp, #8
 443              	.LCFI5:
 444              		.cfi_def_cfa_offset 8
 445              		@ sp needed
 446 0072 10BD     		pop	{r4, pc}
 447              	.L11:
 448              		.align	2
 449              	.L10:
 450 0074 00380240 		.word	1073887232
 451              		.cfi_endproc
 452              	.LFE152:
 454              		.section	.text.bno055_assignI2C,"ax",%progbits
 455              		.align	1
 456              		.global	bno055_assignI2C
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 461              	bno055_assignI2C:
 462              	.LVL18:
 463              	.LFB137:
 464              		.file 2 "Core/Inc/bno055_stm32.h"
   1:Core/Inc/bno055_stm32.h **** #ifndef BNO055_STM32_H_
   2:Core/Inc/bno055_stm32.h **** #define BNO055_STM32_H_
   3:Core/Inc/bno055_stm32.h **** 
   4:Core/Inc/bno055_stm32.h **** #ifdef __cplusplus
   5:Core/Inc/bno055_stm32.h ****   extern "C" {
   6:Core/Inc/bno055_stm32.h **** #endif
   7:Core/Inc/bno055_stm32.h **** 
   8:Core/Inc/bno055_stm32.h **** #ifdef FREERTOS_ENABLED
   9:Core/Inc/bno055_stm32.h **** #include "FreeRTOS.h"
  10:Core/Inc/bno055_stm32.h **** #include "task.h"
  11:Core/Inc/bno055_stm32.h **** #include "cmsis_os.h"
  12:Core/Inc/bno055_stm32.h **** #endif
  13:Core/Inc/bno055_stm32.h **** 
  14:Core/Inc/bno055_stm32.h **** #include "bno055.h"
  15:Core/Inc/bno055_stm32.h **** 
  16:Core/Inc/bno055_stm32.h **** I2C_HandleTypeDef *_bno055_i2c_port;
  17:Core/Inc/bno055_stm32.h **** 
  18:Core/Inc/bno055_stm32.h **** void bno055_assignI2C(I2C_HandleTypeDef *hi2c_device) {
ARM GAS  /tmp/cc0rXBD8.s 			page 23


 465              		.loc 2 18 55 is_stmt 1 view -0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              		@ link register save eliminated.
  19:Core/Inc/bno055_stm32.h ****   _bno055_i2c_port = hi2c_device;
 470              		.loc 2 19 3 view .LVU133
 471              		.loc 2 19 20 is_stmt 0 view .LVU134
 472 0000 014B     		ldr	r3, .L13
 473 0002 1860     		str	r0, [r3]
  20:Core/Inc/bno055_stm32.h **** }
 474              		.loc 2 20 1 view .LVU135
 475 0004 7047     		bx	lr
 476              	.L14:
 477 0006 00BF     		.align	2
 478              	.L13:
 479 0008 00000000 		.word	_bno055_i2c_port
 480              		.cfi_endproc
 481              	.LFE137:
 483              		.section	.text.bno055_delay,"ax",%progbits
 484              		.align	1
 485              		.global	bno055_delay
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 490              	bno055_delay:
 491              	.LVL19:
 492              	.LFB138:
  21:Core/Inc/bno055_stm32.h **** 
  22:Core/Inc/bno055_stm32.h **** void bno055_delay(int time) {
 493              		.loc 2 22 29 is_stmt 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		.loc 2 22 29 is_stmt 0 view .LVU137
 498 0000 08B5     		push	{r3, lr}
 499              	.LCFI6:
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 3, -8
 502              		.cfi_offset 14, -4
  23:Core/Inc/bno055_stm32.h **** #ifdef FREERTOS_ENABLED
  24:Core/Inc/bno055_stm32.h ****   osDelay(time);
  25:Core/Inc/bno055_stm32.h **** #else
  26:Core/Inc/bno055_stm32.h ****   HAL_Delay(time);
 503              		.loc 2 26 3 is_stmt 1 view .LVU138
 504 0002 FFF7FEFF 		bl	HAL_Delay
 505              	.LVL20:
  27:Core/Inc/bno055_stm32.h **** #endif
  28:Core/Inc/bno055_stm32.h **** }
 506              		.loc 2 28 1 is_stmt 0 view .LVU139
 507 0006 08BD     		pop	{r3, pc}
 508              		.cfi_endproc
 509              	.LFE138:
 511              		.section	.rodata.bno055_writeData.str1.4,"aMS",%progbits,1
 512              		.align	2
 513              	.LC0:
 514 0000 48414C5F 		.ascii	"HAL_I2C_Master_Transmit HAL_ERROR\015\000"
ARM GAS  /tmp/cc0rXBD8.s 			page 24


 514      4932435F 
 514      4D617374 
 514      65725F54 
 514      72616E73 
 515 0023 00       		.align	2
 516              	.LC1:
 517 0024 48414C5F 		.ascii	"HAL_I2C_Master_Transmit HAL_TIMEOUT\015\000"
 517      4932435F 
 517      4D617374 
 517      65725F54 
 517      72616E73 
 518 0049 000000   		.align	2
 519              	.LC2:
 520 004c 48414C5F 		.ascii	"HAL_I2C_Master_Transmit HAL_BUSY\015\000"
 520      4932435F 
 520      4D617374 
 520      65725F54 
 520      72616E73 
 521 006e 0000     		.align	2
 522              	.LC3:
 523 0070 556E6B6E 		.ascii	"Unknown status data %d\000"
 523      6F776E20 
 523      73746174 
 523      75732064 
 523      61746120 
 524 0087 00       		.align	2
 525              	.LC4:
 526 0088 48414C5F 		.ascii	"HAL_I2C_ERROR_BERR\015\000"
 526      4932435F 
 526      4552524F 
 526      525F4245 
 526      52520D00 
 527              		.align	2
 528              	.LC5:
 529 009c 48414C5F 		.ascii	"HAL_I2C_ERROR_ARLO\015\000"
 529      4932435F 
 529      4552524F 
 529      525F4152 
 529      4C4F0D00 
 530              		.align	2
 531              	.LC6:
 532 00b0 48414C5F 		.ascii	"HAL_I2C_ERROR_AF\015\000"
 532      4932435F 
 532      4552524F 
 532      525F4146 
 532      0D00
 533 00c2 0000     		.align	2
 534              	.LC7:
 535 00c4 48414C5F 		.ascii	"HAL_I2C_ERROR_OVR\015\000"
 535      4932435F 
 535      4552524F 
 535      525F4F56 
 535      520D00
 536 00d7 00       		.align	2
 537              	.LC8:
 538 00d8 48414C5F 		.ascii	"HAL_I2C_ERROR_DMA\015\000"
 538      4932435F 
ARM GAS  /tmp/cc0rXBD8.s 			page 25


 538      4552524F 
 538      525F444D 
 538      410D00
 539 00eb 00       		.align	2
 540              	.LC9:
 541 00ec 48414C5F 		.ascii	"HAL_I2C_ERROR_TIMEOUT\015\000"
 541      4932435F 
 541      4552524F 
 541      525F5449 
 541      4D454F55 
 542 0103 00       		.align	2
 543              	.LC10:
 544 0104 48414C5F 		.ascii	"HAL_I2C_STATE_RESET\015\000"
 544      4932435F 
 544      53544154 
 544      455F5245 
 544      5345540D 
 545 0119 000000   		.align	2
 546              	.LC11:
 547 011c 48414C5F 		.ascii	"HAL_I2C_STATE_BUSY\015\000"
 547      4932435F 
 547      53544154 
 547      455F4255 
 547      53590D00 
 548              		.align	2
 549              	.LC12:
 550 0130 48414C5F 		.ascii	"HAL_I2C_STATE_BUSY_TX\015\000"
 550      4932435F 
 550      53544154 
 550      455F4255 
 550      53595F54 
 551 0147 00       		.align	2
 552              	.LC13:
 553 0148 48414C5F 		.ascii	"HAL_I2C_STATE_BUSY_RX\015\000"
 553      4932435F 
 553      53544154 
 553      455F4255 
 553      53595F52 
 554 015f 00       		.align	2
 555              	.LC14:
 556 0160 48414C5F 		.ascii	"HAL_I2C_STATE_LISTEN\015\000"
 556      4932435F 
 556      53544154 
 556      455F4C49 
 556      5354454E 
 557 0176 0000     		.align	2
 558              	.LC15:
 559 0178 48414C5F 		.ascii	"HAL_I2C_STATE_BUSY_TX_LISTEN\015\000"
 559      4932435F 
 559      53544154 
 559      455F4255 
 559      53595F54 
 560 0196 0000     		.align	2
 561              	.LC16:
 562 0198 48414C5F 		.ascii	"HAL_I2C_STATE_BUSY_RX_LISTEN\015\000"
 562      4932435F 
 562      53544154 
ARM GAS  /tmp/cc0rXBD8.s 			page 26


 562      455F4255 
 562      53595F52 
 563 01b6 0000     		.align	2
 564              	.LC17:
 565 01b8 48414C5F 		.ascii	"HAL_I2C_STATE_ABORT\015\000"
 565      4932435F 
 565      53544154 
 565      455F4142 
 565      4F52540D 
 566 01cd 000000   		.align	2
 567              	.LC18:
 568 01d0 48414C5F 		.ascii	"HAL_I2C_STATE_TIMEOUT\015\000"
 568      4932435F 
 568      53544154 
 568      455F5449 
 568      4D454F55 
 569 01e7 00       		.align	2
 570              	.LC19:
 571 01e8 48414C5F 		.ascii	"HAL_I2C_STATE_ERROR\015\000"
 571      4932435F 
 571      53544154 
 571      455F4552 
 571      524F520D 
 572              		.section	.text.bno055_writeData,"ax",%progbits
 573              		.align	1
 574              		.global	bno055_writeData
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 579              	bno055_writeData:
 580              	.LVL21:
 581              	.LFB139:
  29:Core/Inc/bno055_stm32.h **** 
  30:Core/Inc/bno055_stm32.h **** void bno055_writeData(uint8_t reg, uint8_t data) {
 582              		.loc 2 30 50 is_stmt 1 view -0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 8
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              		.loc 2 30 50 is_stmt 0 view .LVU141
 587 0000 00B5     		push	{lr}
 588              	.LCFI7:
 589              		.cfi_def_cfa_offset 4
 590              		.cfi_offset 14, -4
 591 0002 85B0     		sub	sp, sp, #20
 592              	.LCFI8:
 593              		.cfi_def_cfa_offset 24
  31:Core/Inc/bno055_stm32.h ****   uint8_t txdata[2] = {reg, data};
 594              		.loc 2 31 3 is_stmt 1 view .LVU142
 595              		.loc 2 31 11 is_stmt 0 view .LVU143
 596 0004 8DF80C00 		strb	r0, [sp, #12]
 597 0008 8DF80D10 		strb	r1, [sp, #13]
  32:Core/Inc/bno055_stm32.h ****   uint8_t status;
 598              		.loc 2 32 3 is_stmt 1 view .LVU144
  33:Core/Inc/bno055_stm32.h ****   status = HAL_I2C_Master_Transmit(_bno055_i2c_port, BNO055_I2C_ADDR << 1,
 599              		.loc 2 33 3 view .LVU145
 600              		.loc 2 33 12 is_stmt 0 view .LVU146
 601 000c 0A23     		movs	r3, #10
ARM GAS  /tmp/cc0rXBD8.s 			page 27


 602 000e 0093     		str	r3, [sp]
 603 0010 0223     		movs	r3, #2
 604 0012 03AA     		add	r2, sp, #12
 605 0014 5021     		movs	r1, #80
 606              	.LVL22:
 607              		.loc 2 33 12 view .LVU147
 608 0016 4B48     		ldr	r0, .L54
 609              	.LVL23:
 610              		.loc 2 33 12 view .LVU148
 611 0018 0068     		ldr	r0, [r0]
 612 001a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 613              	.LVL24:
  34:Core/Inc/bno055_stm32.h ****                                    txdata, sizeof(txdata), 10);
  35:Core/Inc/bno055_stm32.h ****   if (status == HAL_OK) {
 614              		.loc 2 35 3 is_stmt 1 view .LVU149
 615              		.loc 2 35 6 is_stmt 0 view .LVU150
 616 001e 0028     		cmp	r0, #0
 617 0020 5FD0     		beq	.L17
 618 0022 0146     		mov	r1, r0
  36:Core/Inc/bno055_stm32.h ****     return;
  37:Core/Inc/bno055_stm32.h ****   }
  38:Core/Inc/bno055_stm32.h **** 
  39:Core/Inc/bno055_stm32.h ****   if (status == HAL_ERROR) {
 619              		.loc 2 39 3 is_stmt 1 view .LVU151
 620              		.loc 2 39 6 is_stmt 0 view .LVU152
 621 0024 0128     		cmp	r0, #1
 622 0026 21D0     		beq	.L49
  40:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_Master_Transmit HAL_ERROR\r\n");
  41:Core/Inc/bno055_stm32.h ****   } else if (status == HAL_TIMEOUT) {
 623              		.loc 2 41 10 is_stmt 1 view .LVU153
 624              		.loc 2 41 13 is_stmt 0 view .LVU154
 625 0028 0328     		cmp	r0, #3
 626 002a 23D0     		beq	.L50
  42:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_Master_Transmit HAL_TIMEOUT\r\n");
  43:Core/Inc/bno055_stm32.h ****   } else if (status == HAL_BUSY) {
 627              		.loc 2 43 10 is_stmt 1 view .LVU155
 628              		.loc 2 43 13 is_stmt 0 view .LVU156
 629 002c 0228     		cmp	r0, #2
 630 002e 25D0     		beq	.L51
  44:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_Master_Transmit HAL_BUSY\r\n");
  45:Core/Inc/bno055_stm32.h ****   } else {
  46:Core/Inc/bno055_stm32.h ****     printf("Unknown status data %d", status);
 631              		.loc 2 46 5 is_stmt 1 view .LVU157
 632 0030 4548     		ldr	r0, .L54+4
 633              	.LVL25:
 634              		.loc 2 46 5 is_stmt 0 view .LVU158
 635 0032 FFF7FEFF 		bl	printf
 636              	.LVL26:
 637              	.L20:
  47:Core/Inc/bno055_stm32.h ****   }
  48:Core/Inc/bno055_stm32.h **** 
  49:Core/Inc/bno055_stm32.h ****   uint32_t error = HAL_I2C_GetError(_bno055_i2c_port);
 638              		.loc 2 49 3 is_stmt 1 view .LVU159
 639              		.loc 2 49 20 is_stmt 0 view .LVU160
 640 0036 434B     		ldr	r3, .L54
 641 0038 1868     		ldr	r0, [r3]
 642 003a FFF7FEFF 		bl	HAL_I2C_GetError
ARM GAS  /tmp/cc0rXBD8.s 			page 28


 643              	.LVL27:
  50:Core/Inc/bno055_stm32.h ****   if (error == HAL_I2C_ERROR_NONE) {
 644              		.loc 2 50 3 is_stmt 1 view .LVU161
 645              		.loc 2 50 6 is_stmt 0 view .LVU162
 646 003e 0028     		cmp	r0, #0
 647 0040 4FD0     		beq	.L17
  51:Core/Inc/bno055_stm32.h ****     return;
  52:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_BERR) {
 648              		.loc 2 52 10 is_stmt 1 view .LVU163
 649 0042 431E     		subs	r3, r0, #1
 650 0044 1F2B     		cmp	r3, #31
 651 0046 20D8     		bhi	.L23
 652 0048 DFE803F0 		tbb	[pc, r3]
 653              	.L25:
 654 004c 1C       		.byte	(.L30-.L25)/2
 655 004d 34       		.byte	(.L29-.L25)/2
 656 004e 1F       		.byte	(.L23-.L25)/2
 657 004f 38       		.byte	(.L28-.L25)/2
 658 0050 1F       		.byte	(.L23-.L25)/2
 659 0051 1F       		.byte	(.L23-.L25)/2
 660 0052 1F       		.byte	(.L23-.L25)/2
 661 0053 3C       		.byte	(.L27-.L25)/2
 662 0054 1F       		.byte	(.L23-.L25)/2
 663 0055 1F       		.byte	(.L23-.L25)/2
 664 0056 1F       		.byte	(.L23-.L25)/2
 665 0057 1F       		.byte	(.L23-.L25)/2
 666 0058 1F       		.byte	(.L23-.L25)/2
 667 0059 1F       		.byte	(.L23-.L25)/2
 668 005a 1F       		.byte	(.L23-.L25)/2
 669 005b 40       		.byte	(.L26-.L25)/2
 670 005c 1F       		.byte	(.L23-.L25)/2
 671 005d 1F       		.byte	(.L23-.L25)/2
 672 005e 1F       		.byte	(.L23-.L25)/2
 673 005f 1F       		.byte	(.L23-.L25)/2
 674 0060 1F       		.byte	(.L23-.L25)/2
 675 0061 1F       		.byte	(.L23-.L25)/2
 676 0062 1F       		.byte	(.L23-.L25)/2
 677 0063 1F       		.byte	(.L23-.L25)/2
 678 0064 1F       		.byte	(.L23-.L25)/2
 679 0065 1F       		.byte	(.L23-.L25)/2
 680 0066 1F       		.byte	(.L23-.L25)/2
 681 0067 1F       		.byte	(.L23-.L25)/2
 682 0068 1F       		.byte	(.L23-.L25)/2
 683 0069 1F       		.byte	(.L23-.L25)/2
 684 006a 1F       		.byte	(.L23-.L25)/2
 685 006b 44       		.byte	(.L24-.L25)/2
 686              	.LVL28:
 687              		.p2align 1
 688              	.L49:
  40:Core/Inc/bno055_stm32.h ****   } else if (status == HAL_TIMEOUT) {
 689              		.loc 2 40 5 view .LVU164
 690 006c 3748     		ldr	r0, .L54+8
 691              	.LVL29:
  40:Core/Inc/bno055_stm32.h ****   } else if (status == HAL_TIMEOUT) {
 692              		.loc 2 40 5 is_stmt 0 view .LVU165
 693 006e FFF7FEFF 		bl	puts
 694              	.LVL30:
ARM GAS  /tmp/cc0rXBD8.s 			page 29


 695 0072 E0E7     		b	.L20
 696              	.LVL31:
 697              	.L50:
  42:Core/Inc/bno055_stm32.h ****   } else if (status == HAL_BUSY) {
 698              		.loc 2 42 5 is_stmt 1 view .LVU166
 699 0074 3648     		ldr	r0, .L54+12
 700              	.LVL32:
  42:Core/Inc/bno055_stm32.h ****   } else if (status == HAL_BUSY) {
 701              		.loc 2 42 5 is_stmt 0 view .LVU167
 702 0076 FFF7FEFF 		bl	puts
 703              	.LVL33:
 704 007a DCE7     		b	.L20
 705              	.LVL34:
 706              	.L51:
  44:Core/Inc/bno055_stm32.h ****   } else {
 707              		.loc 2 44 5 is_stmt 1 view .LVU168
 708 007c 3548     		ldr	r0, .L54+16
 709              	.LVL35:
  44:Core/Inc/bno055_stm32.h ****   } else {
 710              		.loc 2 44 5 is_stmt 0 view .LVU169
 711 007e FFF7FEFF 		bl	puts
 712              	.LVL36:
 713 0082 D8E7     		b	.L20
 714              	.LVL37:
 715              	.L30:
  53:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_ERROR_BERR\r\n");
 716              		.loc 2 53 5 is_stmt 1 view .LVU170
 717 0084 3448     		ldr	r0, .L54+20
 718              	.LVL38:
 719              		.loc 2 53 5 is_stmt 0 view .LVU171
 720 0086 FFF7FEFF 		bl	puts
 721              	.LVL39:
 722              	.L23:
  54:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_ARLO) {
  55:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_ERROR_ARLO\r\n");
  56:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_AF) {
  57:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_ERROR_AF\r\n");
  58:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_OVR) {
  59:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_ERROR_OVR\r\n");
  60:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_DMA) {
  61:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_ERROR_DMA\r\n");
  62:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_TIMEOUT) {
  63:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_ERROR_TIMEOUT\r\n");
  64:Core/Inc/bno055_stm32.h ****   }
  65:Core/Inc/bno055_stm32.h **** 
  66:Core/Inc/bno055_stm32.h ****   HAL_I2C_StateTypeDef state = HAL_I2C_GetState(_bno055_i2c_port);
 723              		.loc 2 66 3 is_stmt 1 view .LVU172
 724              		.loc 2 66 32 is_stmt 0 view .LVU173
 725 008a 2E4B     		ldr	r3, .L54
 726 008c 1868     		ldr	r0, [r3]
 727 008e FFF7FEFF 		bl	HAL_I2C_GetState
 728              	.LVL40:
  67:Core/Inc/bno055_stm32.h ****   if (state == HAL_I2C_STATE_RESET) {
 729              		.loc 2 67 3 is_stmt 1 view .LVU174
 730              		.loc 2 67 6 is_stmt 0 view .LVU175
 731 0092 18B3     		cbz	r0, .L52
  68:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_RESET\r\n");
ARM GAS  /tmp/cc0rXBD8.s 			page 30


  69:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_READY) {
 732              		.loc 2 69 10 is_stmt 1 view .LVU176
 733 0094 2A28     		cmp	r0, #42
 734 0096 27D8     		bhi	.L33
 735 0098 2028     		cmp	r0, #32
 736 009a 22D3     		bcc	.L17
 737 009c A0F12003 		sub	r3, r0, #32
 738 00a0 0A2B     		cmp	r3, #10
 739 00a2 1ED8     		bhi	.L17
 740 00a4 DFE803F0 		tbb	[pc, r3]
 741              	.L35:
 742 00a8 2E       		.byte	(.L41-.L35)/2
 743 00a9 36       		.byte	(.L40-.L35)/2
 744 00aa 3A       		.byte	(.L39-.L35)/2
 745 00ab 1D       		.byte	(.L17-.L35)/2
 746 00ac 32       		.byte	(.L38-.L35)/2
 747 00ad 1D       		.byte	(.L17-.L35)/2
 748 00ae 1D       		.byte	(.L17-.L35)/2
 749 00af 1D       		.byte	(.L17-.L35)/2
 750 00b0 3E       		.byte	(.L37-.L35)/2
 751 00b1 42       		.byte	(.L36-.L35)/2
 752 00b2 46       		.byte	(.L34-.L35)/2
 753              	.LVL41:
 754 00b3 00       		.p2align 1
 755              	.L29:
  55:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_AF) {
 756              		.loc 2 55 5 view .LVU177
 757 00b4 2948     		ldr	r0, .L54+24
 758              	.LVL42:
  55:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_AF) {
 759              		.loc 2 55 5 is_stmt 0 view .LVU178
 760 00b6 FFF7FEFF 		bl	puts
 761              	.LVL43:
  55:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_AF) {
 762              		.loc 2 55 5 view .LVU179
 763 00ba E6E7     		b	.L23
 764              	.LVL44:
 765              	.L28:
  57:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_OVR) {
 766              		.loc 2 57 5 is_stmt 1 view .LVU180
 767 00bc 2848     		ldr	r0, .L54+28
 768              	.LVL45:
  57:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_OVR) {
 769              		.loc 2 57 5 is_stmt 0 view .LVU181
 770 00be FFF7FEFF 		bl	puts
 771              	.LVL46:
  57:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_OVR) {
 772              		.loc 2 57 5 view .LVU182
 773 00c2 E2E7     		b	.L23
 774              	.LVL47:
 775              	.L27:
  59:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_DMA) {
 776              		.loc 2 59 5 is_stmt 1 view .LVU183
 777 00c4 2748     		ldr	r0, .L54+32
 778              	.LVL48:
  59:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_DMA) {
 779              		.loc 2 59 5 is_stmt 0 view .LVU184
ARM GAS  /tmp/cc0rXBD8.s 			page 31


 780 00c6 FFF7FEFF 		bl	puts
 781              	.LVL49:
  59:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_DMA) {
 782              		.loc 2 59 5 view .LVU185
 783 00ca DEE7     		b	.L23
 784              	.LVL50:
 785              	.L26:
  61:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_TIMEOUT) {
 786              		.loc 2 61 5 is_stmt 1 view .LVU186
 787 00cc 2648     		ldr	r0, .L54+36
 788              	.LVL51:
  61:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_TIMEOUT) {
 789              		.loc 2 61 5 is_stmt 0 view .LVU187
 790 00ce FFF7FEFF 		bl	puts
 791              	.LVL52:
  61:Core/Inc/bno055_stm32.h ****   } else if (error == HAL_I2C_ERROR_TIMEOUT) {
 792              		.loc 2 61 5 view .LVU188
 793 00d2 DAE7     		b	.L23
 794              	.LVL53:
 795              	.L24:
  63:Core/Inc/bno055_stm32.h ****   }
 796              		.loc 2 63 5 is_stmt 1 view .LVU189
 797 00d4 2548     		ldr	r0, .L54+40
 798              	.LVL54:
  63:Core/Inc/bno055_stm32.h ****   }
 799              		.loc 2 63 5 is_stmt 0 view .LVU190
 800 00d6 FFF7FEFF 		bl	puts
 801              	.LVL55:
  63:Core/Inc/bno055_stm32.h ****   }
 802              		.loc 2 63 5 view .LVU191
 803 00da D6E7     		b	.L23
 804              	.LVL56:
 805              	.L52:
  68:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_READY) {
 806              		.loc 2 68 5 is_stmt 1 view .LVU192
 807 00dc 2448     		ldr	r0, .L54+44
 808              	.LVL57:
  68:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_READY) {
 809              		.loc 2 68 5 is_stmt 0 view .LVU193
 810 00de FFF7FEFF 		bl	puts
 811              	.LVL58:
 812              	.L17:
  70:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_RESET\r\n");
  71:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY) {
  72:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_BUSY\r\n");
  73:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_TX) {
  74:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_BUSY_TX\r\n");
  75:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_RX) {
  76:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_BUSY_RX\r\n");
  77:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_LISTEN) {
  78:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_LISTEN\r\n");
  79:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_TX_LISTEN) {
  80:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_BUSY_TX_LISTEN\r\n");
  81:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_RX_LISTEN) {
  82:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_BUSY_RX_LISTEN\r\n");
  83:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_ABORT) {
  84:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_ABORT\r\n");
ARM GAS  /tmp/cc0rXBD8.s 			page 32


  85:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_TIMEOUT) {
  86:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_TIMEOUT\r\n");
  87:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_ERROR) {
  88:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_ERROR\r\n");
  89:Core/Inc/bno055_stm32.h ****   }
  90:Core/Inc/bno055_stm32.h ****   // while (HAL_I2C_GetState(_bno055_i2c_port) != HAL_I2C_STATE_READY) {}
  91:Core/Inc/bno055_stm32.h ****   // return;
  92:Core/Inc/bno055_stm32.h **** }
 813              		.loc 2 92 1 view .LVU194
 814 00e2 05B0     		add	sp, sp, #20
 815              	.LCFI9:
 816              		.cfi_remember_state
 817              		.cfi_def_cfa_offset 4
 818              		@ sp needed
 819 00e4 5DF804FB 		ldr	pc, [sp], #4
 820              	.LVL59:
 821              	.L33:
 822              	.LCFI10:
 823              		.cfi_restore_state
 824              		.loc 2 92 1 view .LVU195
 825 00e8 A028     		cmp	r0, #160
 826 00ea 27D0     		beq	.L42
 827 00ec E028     		cmp	r0, #224
 828 00ee 03D1     		bne	.L53
  88:Core/Inc/bno055_stm32.h ****   }
 829              		.loc 2 88 5 is_stmt 1 view .LVU196
 830 00f0 2048     		ldr	r0, .L54+48
 831              	.LVL60:
  88:Core/Inc/bno055_stm32.h ****   }
 832              		.loc 2 88 5 is_stmt 0 view .LVU197
 833 00f2 FFF7FEFF 		bl	puts
 834              	.LVL61:
 835 00f6 F4E7     		b	.L17
 836              	.LVL62:
 837              	.L53:
  88:Core/Inc/bno055_stm32.h ****   }
 838              		.loc 2 88 5 view .LVU198
 839 00f8 6028     		cmp	r0, #96
 840 00fa F2D1     		bne	.L17
  84:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_TIMEOUT) {
 841              		.loc 2 84 5 is_stmt 1 view .LVU199
 842 00fc 1E48     		ldr	r0, .L54+52
 843              	.LVL63:
  84:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_TIMEOUT) {
 844              		.loc 2 84 5 is_stmt 0 view .LVU200
 845 00fe FFF7FEFF 		bl	puts
 846              	.LVL64:
 847 0102 EEE7     		b	.L17
 848              	.LVL65:
 849              	.L41:
  70:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_RESET\r\n");
 850              		.loc 2 70 5 is_stmt 1 view .LVU201
 851 0104 1A48     		ldr	r0, .L54+44
 852              	.LVL66:
  70:Core/Inc/bno055_stm32.h ****     printf("HAL_I2C_STATE_RESET\r\n");
 853              		.loc 2 70 5 is_stmt 0 view .LVU202
 854 0106 FFF7FEFF 		bl	puts
ARM GAS  /tmp/cc0rXBD8.s 			page 33


 855              	.LVL67:
 856 010a EAE7     		b	.L17
 857              	.LVL68:
 858              	.L38:
  72:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_TX) {
 859              		.loc 2 72 5 is_stmt 1 view .LVU203
 860 010c 1B48     		ldr	r0, .L54+56
 861              	.LVL69:
  72:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_TX) {
 862              		.loc 2 72 5 is_stmt 0 view .LVU204
 863 010e FFF7FEFF 		bl	puts
 864              	.LVL70:
 865 0112 E6E7     		b	.L17
 866              	.LVL71:
 867              	.L40:
  74:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_RX) {
 868              		.loc 2 74 5 is_stmt 1 view .LVU205
 869 0114 1A48     		ldr	r0, .L54+60
 870              	.LVL72:
  74:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_RX) {
 871              		.loc 2 74 5 is_stmt 0 view .LVU206
 872 0116 FFF7FEFF 		bl	puts
 873              	.LVL73:
 874 011a E2E7     		b	.L17
 875              	.LVL74:
 876              	.L39:
  76:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_LISTEN) {
 877              		.loc 2 76 5 is_stmt 1 view .LVU207
 878 011c 1948     		ldr	r0, .L54+64
 879              	.LVL75:
  76:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_LISTEN) {
 880              		.loc 2 76 5 is_stmt 0 view .LVU208
 881 011e FFF7FEFF 		bl	puts
 882              	.LVL76:
 883 0122 DEE7     		b	.L17
 884              	.LVL77:
 885              	.L37:
  78:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_TX_LISTEN) {
 886              		.loc 2 78 5 is_stmt 1 view .LVU209
 887 0124 1848     		ldr	r0, .L54+68
 888              	.LVL78:
  78:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_TX_LISTEN) {
 889              		.loc 2 78 5 is_stmt 0 view .LVU210
 890 0126 FFF7FEFF 		bl	puts
 891              	.LVL79:
 892 012a DAE7     		b	.L17
 893              	.LVL80:
 894              	.L36:
  80:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_RX_LISTEN) {
 895              		.loc 2 80 5 is_stmt 1 view .LVU211
 896 012c 1748     		ldr	r0, .L54+72
 897              	.LVL81:
  80:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_BUSY_RX_LISTEN) {
 898              		.loc 2 80 5 is_stmt 0 view .LVU212
 899 012e FFF7FEFF 		bl	puts
 900              	.LVL82:
 901 0132 D6E7     		b	.L17
ARM GAS  /tmp/cc0rXBD8.s 			page 34


 902              	.LVL83:
 903              	.L34:
  82:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_ABORT) {
 904              		.loc 2 82 5 is_stmt 1 view .LVU213
 905 0134 1648     		ldr	r0, .L54+76
 906              	.LVL84:
  82:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_ABORT) {
 907              		.loc 2 82 5 is_stmt 0 view .LVU214
 908 0136 FFF7FEFF 		bl	puts
 909              	.LVL85:
 910 013a D2E7     		b	.L17
 911              	.LVL86:
 912              	.L42:
  86:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_ERROR) {
 913              		.loc 2 86 5 is_stmt 1 view .LVU215
 914 013c 1548     		ldr	r0, .L54+80
 915              	.LVL87:
  86:Core/Inc/bno055_stm32.h ****   } else if (state == HAL_I2C_STATE_ERROR) {
 916              		.loc 2 86 5 is_stmt 0 view .LVU216
 917 013e FFF7FEFF 		bl	puts
 918              	.LVL88:
 919 0142 CEE7     		b	.L17
 920              	.L55:
 921              		.align	2
 922              	.L54:
 923 0144 00000000 		.word	_bno055_i2c_port
 924 0148 70000000 		.word	.LC3
 925 014c 00000000 		.word	.LC0
 926 0150 24000000 		.word	.LC1
 927 0154 4C000000 		.word	.LC2
 928 0158 88000000 		.word	.LC4
 929 015c 9C000000 		.word	.LC5
 930 0160 B0000000 		.word	.LC6
 931 0164 C4000000 		.word	.LC7
 932 0168 D8000000 		.word	.LC8
 933 016c EC000000 		.word	.LC9
 934 0170 04010000 		.word	.LC10
 935 0174 E8010000 		.word	.LC19
 936 0178 B8010000 		.word	.LC17
 937 017c 1C010000 		.word	.LC11
 938 0180 30010000 		.word	.LC12
 939 0184 48010000 		.word	.LC13
 940 0188 60010000 		.word	.LC14
 941 018c 78010000 		.word	.LC15
 942 0190 98010000 		.word	.LC16
 943 0194 D0010000 		.word	.LC18
 944              		.cfi_endproc
 945              	.LFE139:
 947              		.section	.text.bno055_readData,"ax",%progbits
 948              		.align	1
 949              		.global	bno055_readData
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 954              	bno055_readData:
 955              	.LVL89:
 956              	.LFB140:
ARM GAS  /tmp/cc0rXBD8.s 			page 35


  93:Core/Inc/bno055_stm32.h **** 
  94:Core/Inc/bno055_stm32.h **** void bno055_readData(uint8_t reg, uint8_t *data, uint8_t len) {
 957              		.loc 2 94 63 is_stmt 1 view -0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 8
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              		.loc 2 94 63 is_stmt 0 view .LVU218
 962 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 963              	.LCFI11:
 964              		.cfi_def_cfa_offset 20
 965              		.cfi_offset 4, -20
 966              		.cfi_offset 5, -16
 967              		.cfi_offset 6, -12
 968              		.cfi_offset 7, -8
 969              		.cfi_offset 14, -4
 970 0002 85B0     		sub	sp, sp, #20
 971              	.LCFI12:
 972              		.cfi_def_cfa_offset 40
 973 0004 0C46     		mov	r4, r1
 974 0006 1546     		mov	r5, r2
 975 0008 8DF80F00 		strb	r0, [sp, #15]
  95:Core/Inc/bno055_stm32.h ****   HAL_I2C_Master_Transmit(_bno055_i2c_port, BNO055_I2C_ADDR << 1, &reg, 1,
 976              		.loc 2 95 3 is_stmt 1 view .LVU219
 977 000c 094E     		ldr	r6, .L58
 978 000e 6427     		movs	r7, #100
 979 0010 0097     		str	r7, [sp]
 980 0012 0123     		movs	r3, #1
 981 0014 0DF10F02 		add	r2, sp, #15
 982              	.LVL90:
 983              		.loc 2 95 3 is_stmt 0 view .LVU220
 984 0018 5021     		movs	r1, #80
 985              	.LVL91:
 986              		.loc 2 95 3 view .LVU221
 987 001a 3068     		ldr	r0, [r6]
 988              	.LVL92:
 989              		.loc 2 95 3 view .LVU222
 990 001c FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 991              	.LVL93:
  96:Core/Inc/bno055_stm32.h ****                           100);
  97:Core/Inc/bno055_stm32.h ****   HAL_I2C_Master_Receive(_bno055_i2c_port, BNO055_I2C_ADDR << 1, data, len,
 992              		.loc 2 97 3 is_stmt 1 view .LVU223
 993 0020 0097     		str	r7, [sp]
 994 0022 2B46     		mov	r3, r5
 995 0024 2246     		mov	r2, r4
 996 0026 5021     		movs	r1, #80
 997 0028 3068     		ldr	r0, [r6]
 998 002a FFF7FEFF 		bl	HAL_I2C_Master_Receive
 999              	.LVL94:
  98:Core/Inc/bno055_stm32.h ****                          100);
  99:Core/Inc/bno055_stm32.h ****   // HAL_I2C_Mem_Read(_bno055_i2c_port, BNO055_I2C_ADDR_LO<<1, reg,
 100:Core/Inc/bno055_stm32.h ****   // I2C_MEMADD_SIZE_8BIT, data, len, 100);
 101:Core/Inc/bno055_stm32.h **** }
 1000              		.loc 2 101 1 is_stmt 0 view .LVU224
 1001 002e 05B0     		add	sp, sp, #20
 1002              	.LCFI13:
 1003              		.cfi_def_cfa_offset 20
 1004              		@ sp needed
ARM GAS  /tmp/cc0rXBD8.s 			page 36


 1005 0030 F0BD     		pop	{r4, r5, r6, r7, pc}
 1006              	.LVL95:
 1007              	.L59:
 1008              		.loc 2 101 1 view .LVU225
 1009 0032 00BF     		.align	2
 1010              	.L58:
 1011 0034 00000000 		.word	_bno055_i2c_port
 1012              		.cfi_endproc
 1013              	.LFE140:
 1015              		.section	.text.FigherLighter,"ax",%progbits
 1016              		.align	1
 1017              		.global	FigherLighter
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1022              	FigherLighter:
 1023              	.LVL96:
 1024              	.LFB141:
 108:Core/Src/main.c **** 	uint16_t pinNumber = 0 | (1<<(6+lighterNumber));
 1025              		.loc 1 108 42 is_stmt 1 view -0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 108:Core/Src/main.c **** 	uint16_t pinNumber = 0 | (1<<(6+lighterNumber));
 1029              		.loc 1 108 42 is_stmt 0 view .LVU227
 1030 0000 38B5     		push	{r3, r4, r5, lr}
 1031              	.LCFI14:
 1032              		.cfi_def_cfa_offset 16
 1033              		.cfi_offset 3, -16
 1034              		.cfi_offset 4, -12
 1035              		.cfi_offset 5, -8
 1036              		.cfi_offset 14, -4
 109:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOE, pinNumber, GPIO_PIN_SET);
 1037              		.loc 1 109 2 is_stmt 1 view .LVU228
 109:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOE, pinNumber, GPIO_PIN_SET);
 1038              		.loc 1 109 33 is_stmt 0 view .LVU229
 1039 0002 841D     		adds	r4, r0, #6
 109:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOE, pinNumber, GPIO_PIN_SET);
 1040              		.loc 1 109 25 view .LVU230
 1041 0004 0122     		movs	r2, #1
 1042 0006 02FA04F4 		lsl	r4, r2, r4
 109:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOE, pinNumber, GPIO_PIN_SET);
 1043              		.loc 1 109 11 view .LVU231
 1044 000a A4B2     		uxth	r4, r4
 1045              	.LVL97:
 110:Core/Src/main.c **** 	HAL_Delay(15);
 1046              		.loc 1 110 2 is_stmt 1 view .LVU232
 1047 000c 064D     		ldr	r5, .L62
 1048 000e 2146     		mov	r1, r4
 1049 0010 2846     		mov	r0, r5
 1050              	.LVL98:
 110:Core/Src/main.c **** 	HAL_Delay(15);
 1051              		.loc 1 110 2 is_stmt 0 view .LVU233
 1052 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1053              	.LVL99:
 111:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOE, pinNumber, GPIO_PIN_RESET);
 1054              		.loc 1 111 2 is_stmt 1 view .LVU234
ARM GAS  /tmp/cc0rXBD8.s 			page 37


 1055 0016 0F20     		movs	r0, #15
 1056 0018 FFF7FEFF 		bl	HAL_Delay
 1057              	.LVL100:
 112:Core/Src/main.c **** }
 1058              		.loc 1 112 2 view .LVU235
 1059 001c 0022     		movs	r2, #0
 1060 001e 2146     		mov	r1, r4
 1061 0020 2846     		mov	r0, r5
 1062 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1063              	.LVL101:
 113:Core/Src/main.c **** 
 1064              		.loc 1 113 1 is_stmt 0 view .LVU236
 1065 0026 38BD     		pop	{r3, r4, r5, pc}
 1066              	.LVL102:
 1067              	.L63:
 113:Core/Src/main.c **** 
 1068              		.loc 1 113 1 view .LVU237
 1069              		.align	2
 1070              	.L62:
 1071 0028 00100240 		.word	1073876992
 1072              		.cfi_endproc
 1073              	.LFE141:
 1075              		.section	.text.LogData,"ax",%progbits
 1076              		.align	1
 1077              		.global	LogData
 1078              		.syntax unified
 1079              		.thumb
 1080              		.thumb_func
 1082              	LogData:
 1083              	.LVL103:
 1084              	.LFB142:
 115:Core/Src/main.c **** 	if(write_logs == 1)
 1085              		.loc 1 115 26 is_stmt 1 view -0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 115:Core/Src/main.c **** 	if(write_logs == 1)
 1089              		.loc 1 115 26 is_stmt 0 view .LVU239
 1090 0000 08B5     		push	{r3, lr}
 1091              	.LCFI15:
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 3, -8
 1094              		.cfi_offset 14, -4
 116:Core/Src/main.c **** 		log_data(data);
 1095              		.loc 1 116 2 is_stmt 1 view .LVU240
 116:Core/Src/main.c **** 		log_data(data);
 1096              		.loc 1 116 16 is_stmt 0 view .LVU241
 1097 0002 044B     		ldr	r3, .L68
 1098 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 116:Core/Src/main.c **** 		log_data(data);
 1099              		.loc 1 116 4 view .LVU242
 1100 0006 012B     		cmp	r3, #1
 1101 0008 00D0     		beq	.L67
 1102              	.LVL104:
 1103              	.L64:
 118:Core/Src/main.c **** 
 1104              		.loc 1 118 1 view .LVU243
ARM GAS  /tmp/cc0rXBD8.s 			page 38


 1105 000a 08BD     		pop	{r3, pc}
 1106              	.LVL105:
 1107              	.L67:
 117:Core/Src/main.c **** }
 1108              		.loc 1 117 3 is_stmt 1 view .LVU244
 1109 000c FFF7FEFF 		bl	log_data
 1110              	.LVL106:
 118:Core/Src/main.c **** 
 1111              		.loc 1 118 1 is_stmt 0 view .LVU245
 1112 0010 FBE7     		b	.L64
 1113              	.L69:
 1114 0012 00BF     		.align	2
 1115              	.L68:
 1116 0014 00000000 		.word	write_logs
 1117              		.cfi_endproc
 1118              	.LFE142:
 1120              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 1121              		.align	1
 1122              		.global	HAL_UARTEx_RxEventCallback
 1123              		.syntax unified
 1124              		.thumb
 1125              		.thumb_func
 1127              	HAL_UARTEx_RxEventCallback:
 1128              	.LVL107:
 1129              	.LFB144:
 195:Core/Src/main.c ****     oldPos = newPos; //keep track of the last position in the buffer
 1130              		.loc 1 195 1 is_stmt 1 view -0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 0
 1133              		@ frame_needed = 0, uses_anonymous_args = 0
 195:Core/Src/main.c ****     oldPos = newPos; //keep track of the last position in the buffer
 1134              		.loc 1 195 1 is_stmt 0 view .LVU247
 1135 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1136              	.LCFI16:
 1137              		.cfi_def_cfa_offset 24
 1138              		.cfi_offset 4, -24
 1139              		.cfi_offset 5, -20
 1140              		.cfi_offset 6, -16
 1141              		.cfi_offset 7, -12
 1142              		.cfi_offset 8, -8
 1143              		.cfi_offset 14, -4
 1144 0004 0C46     		mov	r4, r1
 196:Core/Src/main.c ****     if(oldPos + Size > DataBuffer_SIZE){ //if the buffer is full, parse it, then reset the buffer
 1145              		.loc 1 196 5 is_stmt 1 view .LVU248
 196:Core/Src/main.c ****     if(oldPos + Size > DataBuffer_SIZE){ //if the buffer is full, parse it, then reset the buffer
 1146              		.loc 1 196 12 is_stmt 0 view .LVU249
 1147 0006 1D4B     		ldr	r3, .L74
 1148 0008 1D88     		ldrh	r5, [r3]
 1149 000a 1D4B     		ldr	r3, .L74+4
 1150 000c 1D80     		strh	r5, [r3]	@ movhi
 197:Core/Src/main.c **** 
 1151              		.loc 1 197 5 is_stmt 1 view .LVU250
 197:Core/Src/main.c **** 
 1152              		.loc 1 197 15 is_stmt 0 view .LVU251
 1153 000e 6B18     		adds	r3, r5, r1
 197:Core/Src/main.c **** 
 1154              		.loc 1 197 7 view .LVU252
ARM GAS  /tmp/cc0rXBD8.s 			page 39


 1155 0010 B3F5007F 		cmp	r3, #512
 1156 0014 25DD     		ble	.L71
 1157              	.LBB12:
 199:Core/Src/main.c ****         memcpy ((uint8_t *)DataBuffer+oldPos, RxBuffer, datatocopy);  // copy data in that remainin
 1158              		.loc 1 199 9 is_stmt 1 view .LVU253
 199:Core/Src/main.c ****         memcpy ((uint8_t *)DataBuffer+oldPos, RxBuffer, datatocopy);  // copy data in that remainin
 1159              		.loc 1 199 18 is_stmt 0 view .LVU254
 1160 0016 C5F50076 		rsb	r6, r5, #512
 1161 001a B6B2     		uxth	r6, r6
 1162              	.LVL108:
 200:Core/Src/main.c **** 
 1163              		.loc 1 200 9 is_stmt 1 view .LVU255
 1164 001c 194F     		ldr	r7, .L74+8
 1165 001e DFF86880 		ldr	r8, .L74+12
 1166 0022 3246     		mov	r2, r6
 1167 0024 4146     		mov	r1, r8
 1168              	.LVL109:
 200:Core/Src/main.c **** 
 1169              		.loc 1 200 9 is_stmt 0 view .LVU256
 1170 0026 7819     		adds	r0, r7, r5
 1171              	.LVL110:
 200:Core/Src/main.c **** 
 1172              		.loc 1 200 9 view .LVU257
 1173 0028 FFF7FEFF 		bl	memcpy
 1174              	.LVL111:
 202:Core/Src/main.c ****         memcpy ((uint8_t *)DataBuffer, (uint8_t *)RxBuffer+datatocopy, (Size-datatocopy));  // copy
 1175              		.loc 1 202 9 is_stmt 1 view .LVU258
 202:Core/Src/main.c ****         memcpy ((uint8_t *)DataBuffer, (uint8_t *)RxBuffer+datatocopy, (Size-datatocopy));  // copy
 1176              		.loc 1 202 16 is_stmt 0 view .LVU259
 1177 002c 144B     		ldr	r3, .L74+4
 1178 002e 0022     		movs	r2, #0
 1179 0030 1A80     		strh	r2, [r3]	@ movhi
 203:Core/Src/main.c ****         newPos = (Size-datatocopy);  // update the position
 1180              		.loc 1 203 9 is_stmt 1 view .LVU260
 1181 0032 A21B     		subs	r2, r4, r6
 1182 0034 08EB0601 		add	r1, r8, r6
 1183 0038 3846     		mov	r0, r7
 1184 003a FFF7FEFF 		bl	memcpy
 1185              	.LVL112:
 204:Core/Src/main.c ****     }
 1186              		.loc 1 204 9 view .LVU261
 204:Core/Src/main.c ****     }
 1187              		.loc 1 204 23 is_stmt 0 view .LVU262
 1188 003e A5F50075 		sub	r5, r5, #512
 1189 0042 2544     		add	r5, r5, r4
 204:Core/Src/main.c ****     }
 1190              		.loc 1 204 16 view .LVU263
 1191 0044 0D4B     		ldr	r3, .L74
 1192 0046 1D80     		strh	r5, [r3]	@ movhi
 1193              	.LVL113:
 1194              	.L72:
 204:Core/Src/main.c ****     }
 1195              		.loc 1 204 16 view .LVU264
 1196              	.LBE12:
 211:Core/Src/main.c ****     __HAL_DMA_DISABLE_IT(&hdma_usart2_rx, DMA_IT_HT); //disable the half transfer interrupt
 1197              		.loc 1 211 5 is_stmt 1 view .LVU265
 1198 0048 4022     		movs	r2, #64
ARM GAS  /tmp/cc0rXBD8.s 			page 40


 1199 004a 0F49     		ldr	r1, .L74+12
 1200 004c 0F48     		ldr	r0, .L74+16
 1201 004e FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 1202              	.LVL114:
 212:Core/Src/main.c **** }
 1203              		.loc 1 212 5 view .LVU266
 1204 0052 0F4B     		ldr	r3, .L74+20
 1205 0054 1A68     		ldr	r2, [r3]
 1206 0056 1368     		ldr	r3, [r2]
 1207 0058 23F00803 		bic	r3, r3, #8
 1208 005c 1360     		str	r3, [r2]
 213:Core/Src/main.c **** /* USER CODE END 0 */
 1209              		.loc 1 213 1 is_stmt 0 view .LVU267
 1210 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1211              	.LVL115:
 1212              	.L71:
 207:Core/Src/main.c ****         newPos = Size+oldPos; //update buffer position
 1213              		.loc 1 207 9 is_stmt 1 view .LVU268
 1214 0062 0A46     		mov	r2, r1
 1215 0064 0849     		ldr	r1, .L74+12
 1216              	.LVL116:
 207:Core/Src/main.c ****         newPos = Size+oldPos; //update buffer position
 1217              		.loc 1 207 9 is_stmt 0 view .LVU269
 1218 0066 0748     		ldr	r0, .L74+8
 1219              	.LVL117:
 207:Core/Src/main.c ****         newPos = Size+oldPos; //update buffer position
 1220              		.loc 1 207 9 view .LVU270
 1221 0068 2844     		add	r0, r0, r5
 1222 006a FFF7FEFF 		bl	memcpy
 1223              	.LVL118:
 208:Core/Src/main.c **** 
 1224              		.loc 1 208 9 is_stmt 1 view .LVU271
 208:Core/Src/main.c **** 
 1225              		.loc 1 208 22 is_stmt 0 view .LVU272
 1226 006e 044B     		ldr	r3, .L74+4
 1227 0070 1B88     		ldrh	r3, [r3]
 1228 0072 1C44     		add	r4, r4, r3
 208:Core/Src/main.c **** 
 1229              		.loc 1 208 16 view .LVU273
 1230 0074 014B     		ldr	r3, .L74
 1231 0076 1C80     		strh	r4, [r3]	@ movhi
 1232 0078 E6E7     		b	.L72
 1233              	.L75:
 1234 007a 00BF     		.align	2
 1235              	.L74:
 1236 007c 00000000 		.word	newPos
 1237 0080 00000000 		.word	oldPos
 1238 0084 00000000 		.word	DataBuffer
 1239 0088 00000000 		.word	RxBuffer
 1240 008c 00000000 		.word	huart2
 1241 0090 00000000 		.word	hdma_usart2_rx
 1242              		.cfi_endproc
 1243              	.LFE144:
 1245              		.section	.text.Error_Handler,"ax",%progbits
 1246              		.align	1
 1247              		.global	Error_Handler
 1248              		.syntax unified
ARM GAS  /tmp/cc0rXBD8.s 			page 41


 1249              		.thumb
 1250              		.thumb_func
 1252              	Error_Handler:
 1253              	.LFB154:
 758:Core/Src/main.c **** 
 759:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 760:Core/Src/main.c **** 
 761:Core/Src/main.c **** /* USER CODE END 4 */
 762:Core/Src/main.c **** 
 763:Core/Src/main.c **** /**
 764:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 765:Core/Src/main.c ****   * @retval None
 766:Core/Src/main.c ****   */
 767:Core/Src/main.c **** void Error_Handler(void)
 768:Core/Src/main.c **** {
 1254              		.loc 1 768 1 is_stmt 1 view -0
 1255              		.cfi_startproc
 1256              		@ Volatile: function does not return.
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              		@ link register save eliminated.
 769:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 770:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 771:Core/Src/main.c ****   __disable_irq();
 1260              		.loc 1 771 3 view .LVU275
 1261              	.LBB13:
 1262              	.LBI13:
 1263              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  /tmp/cc0rXBD8.s 			page 42


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  /tmp/cc0rXBD8.s 			page 43


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
ARM GAS  /tmp/cc0rXBD8.s 			page 44


 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
ARM GAS  /tmp/cc0rXBD8.s 			page 45


 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc0rXBD8.s 			page 46


 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc0rXBD8.s 			page 47


 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  /tmp/cc0rXBD8.s 			page 48


 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
ARM GAS  /tmp/cc0rXBD8.s 			page 49


 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc0rXBD8.s 			page 50


 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
ARM GAS  /tmp/cc0rXBD8.s 			page 51


 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc0rXBD8.s 			page 52


 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
ARM GAS  /tmp/cc0rXBD8.s 			page 53


 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
ARM GAS  /tmp/cc0rXBD8.s 			page 54


 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc0rXBD8.s 			page 55


 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
ARM GAS  /tmp/cc0rXBD8.s 			page 56


 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
ARM GAS  /tmp/cc0rXBD8.s 			page 57


 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  /tmp/cc0rXBD8.s 			page 58


 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1264              		.loc 3 960 27 view .LVU276
 1265              	.LBB14:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1266              		.loc 3 962 3 view .LVU277
 1267              		.syntax unified
 1268              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1269 0000 72B6     		cpsid i
 1270              	@ 0 "" 2
 1271              		.thumb
 1272              		.syntax unified
 1273              	.L77:
 1274              	.LBE14:
 1275              	.LBE13:
 772:Core/Src/main.c ****   while (1)
 1276              		.loc 1 772 3 discriminator 1 view .LVU278
 773:Core/Src/main.c ****   {
 774:Core/Src/main.c ****   }
 1277              		.loc 1 774 3 discriminator 1 view .LVU279
 772:Core/Src/main.c ****   while (1)
 1278              		.loc 1 772 9 discriminator 1 view .LVU280
 1279 0002 FEE7     		b	.L77
 1280              		.cfi_endproc
 1281              	.LFE154:
 1283              		.section	.text.MX_I2C2_Init,"ax",%progbits
 1284              		.align	1
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1289              	MX_I2C2_Init:
 1290              	.LFB147:
 490:Core/Src/main.c **** 
 1291              		.loc 1 490 1 view -0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 0
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295 0000 08B5     		push	{r3, lr}
 1296              	.LCFI17:
ARM GAS  /tmp/cc0rXBD8.s 			page 59


 1297              		.cfi_def_cfa_offset 8
 1298              		.cfi_offset 3, -8
 1299              		.cfi_offset 14, -4
 499:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1300              		.loc 1 499 3 view .LVU282
 499:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1301              		.loc 1 499 18 is_stmt 0 view .LVU283
 1302 0002 0A48     		ldr	r0, .L82
 1303 0004 0A4B     		ldr	r3, .L82+4
 1304 0006 0360     		str	r3, [r0]
 500:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1305              		.loc 1 500 3 is_stmt 1 view .LVU284
 500:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1306              		.loc 1 500 25 is_stmt 0 view .LVU285
 1307 0008 0A4B     		ldr	r3, .L82+8
 1308 000a 4360     		str	r3, [r0, #4]
 501:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1309              		.loc 1 501 3 is_stmt 1 view .LVU286
 501:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1310              		.loc 1 501 24 is_stmt 0 view .LVU287
 1311 000c 0023     		movs	r3, #0
 1312 000e 8360     		str	r3, [r0, #8]
 502:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1313              		.loc 1 502 3 is_stmt 1 view .LVU288
 502:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1314              		.loc 1 502 26 is_stmt 0 view .LVU289
 1315 0010 C360     		str	r3, [r0, #12]
 503:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1316              		.loc 1 503 3 is_stmt 1 view .LVU290
 503:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1317              		.loc 1 503 29 is_stmt 0 view .LVU291
 1318 0012 4FF48042 		mov	r2, #16384
 1319 0016 0261     		str	r2, [r0, #16]
 504:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1320              		.loc 1 504 3 is_stmt 1 view .LVU292
 504:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1321              		.loc 1 504 30 is_stmt 0 view .LVU293
 1322 0018 4361     		str	r3, [r0, #20]
 505:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1323              		.loc 1 505 3 is_stmt 1 view .LVU294
 505:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1324              		.loc 1 505 26 is_stmt 0 view .LVU295
 1325 001a 8361     		str	r3, [r0, #24]
 506:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1326              		.loc 1 506 3 is_stmt 1 view .LVU296
 506:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1327              		.loc 1 506 30 is_stmt 0 view .LVU297
 1328 001c C361     		str	r3, [r0, #28]
 507:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1329              		.loc 1 507 3 is_stmt 1 view .LVU298
 507:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1330              		.loc 1 507 28 is_stmt 0 view .LVU299
 1331 001e 0362     		str	r3, [r0, #32]
 508:Core/Src/main.c ****   {
 1332              		.loc 1 508 3 is_stmt 1 view .LVU300
 508:Core/Src/main.c ****   {
 1333              		.loc 1 508 7 is_stmt 0 view .LVU301
ARM GAS  /tmp/cc0rXBD8.s 			page 60


 1334 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1335              	.LVL119:
 508:Core/Src/main.c ****   {
 1336              		.loc 1 508 6 view .LVU302
 1337 0024 00B9     		cbnz	r0, .L81
 516:Core/Src/main.c **** 
 1338              		.loc 1 516 1 view .LVU303
 1339 0026 08BD     		pop	{r3, pc}
 1340              	.L81:
 510:Core/Src/main.c ****   }
 1341              		.loc 1 510 5 is_stmt 1 view .LVU304
 1342 0028 FFF7FEFF 		bl	Error_Handler
 1343              	.LVL120:
 1344              	.L83:
 1345              		.align	2
 1346              	.L82:
 1347 002c 00000000 		.word	hi2c2
 1348 0030 00580040 		.word	1073764352
 1349 0034 A0860100 		.word	100000
 1350              		.cfi_endproc
 1351              	.LFE147:
 1353              		.section	.text.ParseReceivedCommand,"ax",%progbits
 1354              		.align	1
 1355              		.global	ParseReceivedCommand
 1356              		.syntax unified
 1357              		.thumb
 1358              		.thumb_func
 1360              	ParseReceivedCommand:
 1361              	.LVL121:
 1362              	.LFB143:
 122:Core/Src/main.c **** 	if(cmd[0] == '\0')
 1363              		.loc 1 122 1 view -0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 122:Core/Src/main.c **** 	if(cmd[0] == '\0')
 1367              		.loc 1 122 1 is_stmt 0 view .LVU306
 1368 0000 70B5     		push	{r4, r5, r6, lr}
 1369              	.LCFI18:
 1370              		.cfi_def_cfa_offset 16
 1371              		.cfi_offset 4, -16
 1372              		.cfi_offset 5, -12
 1373              		.cfi_offset 6, -8
 1374              		.cfi_offset 14, -4
 1375 0002 2DED028B 		vpush.64	{d8}
 1376              	.LCFI19:
 1377              		.cfi_def_cfa_offset 24
 1378              		.cfi_offset 80, -24
 1379              		.cfi_offset 81, -20
 123:Core/Src/main.c **** 		return;
 1380              		.loc 1 123 2 is_stmt 1 view .LVU307
 123:Core/Src/main.c **** 		return;
 1381              		.loc 1 123 8 is_stmt 0 view .LVU308
 1382 0006 0678     		ldrb	r6, [r0]	@ zero_extendqisi2
 123:Core/Src/main.c **** 		return;
 1383              		.loc 1 123 4 view .LVU309
 1384 0008 56B3     		cbz	r6, .L84
ARM GAS  /tmp/cc0rXBD8.s 			page 61


 1385 000a 0546     		mov	r5, r0
 126:Core/Src/main.c **** 	int cmdCounter = 0;
 1386              		.loc 1 126 2 is_stmt 1 view .LVU310
 126:Core/Src/main.c **** 	int cmdCounter = 0;
 1387              		.loc 1 126 12 is_stmt 0 view .LVU311
 1388 000c 504B     		ldr	r3, .L106
 1389 000e 1E70     		strb	r6, [r3]
 127:Core/Src/main.c **** 	int cmdParamCounter = 0;
 1390              		.loc 1 127 2 is_stmt 1 view .LVU312
 1391              	.LVL122:
 128:Core/Src/main.c **** 	for(uint8_t i = 2; i < payloadSize; i++){
 1392              		.loc 1 128 2 view .LVU313
 129:Core/Src/main.c **** 		if(cmd[i] == ' '){
 1393              		.loc 1 129 2 view .LVU314
 1394              	.LBB15:
 129:Core/Src/main.c **** 		if(cmd[i] == ' '){
 1395              		.loc 1 129 6 view .LVU315
 129:Core/Src/main.c **** 		if(cmd[i] == ' '){
 1396              		.loc 1 129 14 is_stmt 0 view .LVU316
 1397 0010 0223     		movs	r3, #2
 1398              	.LBE15:
 128:Core/Src/main.c **** 	for(uint8_t i = 2; i < payloadSize; i++){
 1399              		.loc 1 128 6 view .LVU317
 1400 0012 0020     		movs	r0, #0
 1401              	.LVL123:
 127:Core/Src/main.c **** 	int cmdParamCounter = 0;
 1402              		.loc 1 127 6 view .LVU318
 1403 0014 8646     		mov	lr, r0
 1404              	.LBB16:
 129:Core/Src/main.c **** 		if(cmd[i] == ' '){
 1405              		.loc 1 129 2 view .LVU319
 1406 0016 09E0     		b	.L86
 1407              	.LVL124:
 1408              	.L87:
 135:Core/Src/main.c **** 			cmdParamCounter++;
 1409              		.loc 1 135 4 is_stmt 1 view .LVU320
 135:Core/Src/main.c **** 			cmdParamCounter++;
 1410              		.loc 1 135 43 is_stmt 0 view .LVU321
 1411 0018 0EEB4E0C 		add	ip, lr, lr, lsl #1
 1412 001c 4D4C     		ldr	r4, .L106+4
 1413 001e 04EB4C0C 		add	ip, r4, ip, lsl #1
 1414 0022 0CF80020 		strb	r2, [ip, r0]
 136:Core/Src/main.c **** 		}
 1415              		.loc 1 136 4 is_stmt 1 view .LVU322
 136:Core/Src/main.c **** 		}
 1416              		.loc 1 136 19 is_stmt 0 view .LVU323
 1417 0026 0130     		adds	r0, r0, #1
 1418              	.LVL125:
 1419              	.L88:
 129:Core/Src/main.c **** 		if(cmd[i] == ' '){
 1420              		.loc 1 129 39 is_stmt 1 discriminator 2 view .LVU324
 1421 0028 0133     		adds	r3, r3, #1
 1422              	.LVL126:
 129:Core/Src/main.c **** 		if(cmd[i] == ' '){
 1423              		.loc 1 129 39 is_stmt 0 discriminator 2 view .LVU325
 1424 002a DBB2     		uxtb	r3, r3
 1425              	.LVL127:
ARM GAS  /tmp/cc0rXBD8.s 			page 62


 1426              	.L86:
 129:Core/Src/main.c **** 		if(cmd[i] == ' '){
 1427              		.loc 1 129 23 is_stmt 1 discriminator 1 view .LVU326
 1428 002c 8B42     		cmp	r3, r1
 1429 002e 06D2     		bcs	.L98
 130:Core/Src/main.c **** 			cmdCounter++;
 1430              		.loc 1 130 3 view .LVU327
 130:Core/Src/main.c **** 			cmdCounter++;
 1431              		.loc 1 130 9 is_stmt 0 view .LVU328
 1432 0030 EA5C     		ldrb	r2, [r5, r3]	@ zero_extendqisi2
 130:Core/Src/main.c **** 			cmdCounter++;
 1433              		.loc 1 130 5 view .LVU329
 1434 0032 202A     		cmp	r2, #32
 1435 0034 F0D1     		bne	.L87
 131:Core/Src/main.c **** 			cmdParamCounter = 0;
 1436              		.loc 1 131 4 is_stmt 1 view .LVU330
 131:Core/Src/main.c **** 			cmdParamCounter = 0;
 1437              		.loc 1 131 14 is_stmt 0 view .LVU331
 1438 0036 0EF1010E 		add	lr, lr, #1
 1439              	.LVL128:
 132:Core/Src/main.c **** 		}
 1440              		.loc 1 132 4 is_stmt 1 view .LVU332
 132:Core/Src/main.c **** 		}
 1441              		.loc 1 132 20 is_stmt 0 view .LVU333
 1442 003a 0020     		movs	r0, #0
 1443 003c F4E7     		b	.L88
 1444              	.LVL129:
 1445              	.L98:
 132:Core/Src/main.c **** 		}
 1446              		.loc 1 132 20 view .LVU334
 1447              	.LBE16:
 140:Core/Src/main.c **** 		int servoNumber = atoi(cmdParams[0]);
 1448              		.loc 1 140 2 is_stmt 1 view .LVU335
 140:Core/Src/main.c **** 		int servoNumber = atoi(cmdParams[0]);
 1449              		.loc 1 140 4 is_stmt 0 view .LVU336
 1450 003e 732E     		cmp	r6, #115
 1451 0040 11D0     		beq	.L99
 158:Core/Src/main.c **** 		int lighterNumber = atoi(cmdParams[0]);
 1452              		.loc 1 158 7 is_stmt 1 view .LVU337
 158:Core/Src/main.c **** 		int lighterNumber = atoi(cmdParams[0]);
 1453              		.loc 1 158 9 is_stmt 0 view .LVU338
 1454 0042 6C2E     		cmp	r6, #108
 1455 0044 2CD0     		beq	.L100
 164:Core/Src/main.c **** 		write_logs= 1;
 1456              		.loc 1 164 7 is_stmt 1 view .LVU339
 164:Core/Src/main.c **** 		write_logs= 1;
 1457              		.loc 1 164 9 is_stmt 0 view .LVU340
 1458 0046 772E     		cmp	r6, #119
 1459 0048 37D0     		beq	.L101
 1460              	.LVL130:
 1461              	.L93:
 167:Core/Src/main.c **** 		write_logs= 0;
 1462              		.loc 1 167 7 is_stmt 1 view .LVU341
 167:Core/Src/main.c **** 		write_logs= 0;
 1463              		.loc 1 167 9 is_stmt 0 view .LVU342
 1464 004a 772E     		cmp	r6, #119
 1465 004c 3DD0     		beq	.L102
ARM GAS  /tmp/cc0rXBD8.s 			page 63


 1466              	.L94:
 170:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 1467              		.loc 1 170 7 is_stmt 1 view .LVU343
 170:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 1468              		.loc 1 170 9 is_stmt 0 view .LVU344
 1469 004e 772E     		cmp	r6, #119
 1470 0050 43D0     		beq	.L103
 1471              	.L95:
 175:Core/Src/main.c **** 		HAL_SPI_Init(&hspi1);
 1472              		.loc 1 175 7 is_stmt 1 view .LVU345
 175:Core/Src/main.c **** 		HAL_SPI_Init(&hspi1);
 1473              		.loc 1 175 9 is_stmt 0 view .LVU346
 1474 0052 722E     		cmp	r6, #114
 1475 0054 53D0     		beq	.L104
 1476              	.L96:
 182:Core/Src/main.c **** 		HAL_SPI_Init(&hspi1);
 1477              		.loc 1 182 7 is_stmt 1 view .LVU347
 182:Core/Src/main.c **** 		HAL_SPI_Init(&hspi1);
 1478              		.loc 1 182 9 is_stmt 0 view .LVU348
 1479 0056 722E     		cmp	r6, #114
 1480 0058 6BD0     		beq	.L105
 1481              	.LVL131:
 1482              	.L91:
 187:Core/Src/main.c **** }
 1483              		.loc 1 187 2 is_stmt 1 view .LVU349
 1484 005a 2846     		mov	r0, r5
 1485 005c FFF7FEFF 		bl	LogData
 1486              	.LVL132:
 1487              	.L84:
 188:Core/Src/main.c **** 
 1488              		.loc 1 188 1 is_stmt 0 view .LVU350
 1489 0060 BDEC028B 		vldm	sp!, {d8}
 1490              	.LCFI20:
 1491              		.cfi_remember_state
 1492              		.cfi_restore 80
 1493              		.cfi_restore 81
 1494              		.cfi_def_cfa_offset 16
 1495 0064 70BD     		pop	{r4, r5, r6, pc}
 1496              	.LVL133:
 1497              	.L99:
 1498              	.LCFI21:
 1499              		.cfi_restore_state
 1500              	.LBB17:
 141:Core/Src/main.c **** 		int servoAngle = atoi(cmdParams[1]);
 1501              		.loc 1 141 3 is_stmt 1 view .LVU351
 141:Core/Src/main.c **** 		int servoAngle = atoi(cmdParams[1]);
 1502              		.loc 1 141 21 is_stmt 0 view .LVU352
 1503 0066 3B4E     		ldr	r6, .L106+4
 1504 0068 3046     		mov	r0, r6
 1505              	.LVL134:
 141:Core/Src/main.c **** 		int servoAngle = atoi(cmdParams[1]);
 1506              		.loc 1 141 21 view .LVU353
 1507 006a FFF7FEFF 		bl	atoi
 1508              	.LVL135:
 141:Core/Src/main.c **** 		int servoAngle = atoi(cmdParams[1]);
 1509              		.loc 1 141 21 view .LVU354
 1510 006e 0446     		mov	r4, r0
ARM GAS  /tmp/cc0rXBD8.s 			page 64


 1511              	.LVL136:
 142:Core/Src/main.c **** 
 1512              		.loc 1 142 3 is_stmt 1 view .LVU355
 142:Core/Src/main.c **** 
 1513              		.loc 1 142 20 is_stmt 0 view .LVU356
 1514 0070 B01D     		adds	r0, r6, #6
 1515              	.LVL137:
 142:Core/Src/main.c **** 
 1516              		.loc 1 142 20 view .LVU357
 1517 0072 FFF7FEFF 		bl	atoi
 1518              	.LVL138:
 1519 0076 08EE100A 		vmov	s16, r0	@ int
 1520              	.LVL139:
 144:Core/Src/main.c **** 		MX_I2C2_Init();
 1521              		.loc 1 144 3 is_stmt 1 view .LVU358
 1522 007a 374E     		ldr	r6, .L106+8
 1523 007c 3046     		mov	r0, r6
 1524              	.LVL140:
 144:Core/Src/main.c **** 		MX_I2C2_Init();
 1525              		.loc 1 144 3 is_stmt 0 view .LVU359
 1526 007e FFF7FEFF 		bl	HAL_I2C_DeInit
 1527              	.LVL141:
 145:Core/Src/main.c **** 
 1528              		.loc 1 145 3 is_stmt 1 view .LVU360
 1529 0082 FFF7FEFF 		bl	MX_I2C2_Init
 1530              	.LVL142:
 147:Core/Src/main.c **** 		  PCA9685_SetPwmFrequency(50);
 1531              		.loc 1 147 5 view .LVU361
 1532 0086 3046     		mov	r0, r6
 1533 0088 FFF7FEFF 		bl	PCA9685_Init
 1534              	.LVL143:
 148:Core/Src/main.c **** 
 1535              		.loc 1 148 5 view .LVU362
 1536 008c 3220     		movs	r0, #50
 1537 008e FFF7FEFF 		bl	PCA9685_SetPwmFrequency
 1538              	.LVL144:
 150:Core/Src/main.c **** 
 1539              		.loc 1 150 3 view .LVU363
 150:Core/Src/main.c **** 
 1540              		.loc 1 150 37 is_stmt 0 view .LVU364
 1541 0092 601E     		subs	r0, r4, #1
 1542 0094 B8EEC80A 		vcvt.f32.s32	s0, s16
 1543 0098 C0B2     		uxtb	r0, r0
 1544 009a FFF7FEFF 		bl	PCA9685_SetServoAngle
 1545              	.LVL145:
 1546              	.LBE17:
 1547 009e DCE7     		b	.L91
 1548              	.LVL146:
 1549              	.L100:
 1550              	.LBB18:
 159:Core/Src/main.c **** 		write_logs = 1;
 1551              		.loc 1 159 3 is_stmt 1 view .LVU365
 159:Core/Src/main.c **** 		write_logs = 1;
 1552              		.loc 1 159 23 is_stmt 0 view .LVU366
 1553 00a0 2C48     		ldr	r0, .L106+4
 1554              	.LVL147:
 159:Core/Src/main.c **** 		write_logs = 1;
ARM GAS  /tmp/cc0rXBD8.s 			page 65


 1555              		.loc 1 159 23 view .LVU367
 1556 00a2 FFF7FEFF 		bl	atoi
 1557              	.LVL148:
 160:Core/Src/main.c **** 		rState = COLIRONE_CRUISE;
 1558              		.loc 1 160 3 is_stmt 1 view .LVU368
 160:Core/Src/main.c **** 		rState = COLIRONE_CRUISE;
 1559              		.loc 1 160 14 is_stmt 0 view .LVU369
 1560 00a6 2D4B     		ldr	r3, .L106+12
 1561 00a8 0122     		movs	r2, #1
 1562 00aa 1A70     		strb	r2, [r3]
 161:Core/Src/main.c **** 		FigherLighter(lighterNumber);
 1563              		.loc 1 161 3 is_stmt 1 view .LVU370
 161:Core/Src/main.c **** 		FigherLighter(lighterNumber);
 1564              		.loc 1 161 10 is_stmt 0 view .LVU371
 1565 00ac 2C4B     		ldr	r3, .L106+16
 1566 00ae 0222     		movs	r2, #2
 1567 00b0 1A70     		strb	r2, [r3]
 162:Core/Src/main.c **** 	}
 1568              		.loc 1 162 3 is_stmt 1 view .LVU372
 1569 00b2 C0B2     		uxtb	r0, r0
 1570              	.LVL149:
 162:Core/Src/main.c **** 	}
 1571              		.loc 1 162 3 is_stmt 0 view .LVU373
 1572 00b4 FFF7FEFF 		bl	FigherLighter
 1573              	.LVL150:
 1574              	.LBE18:
 1575 00b8 CFE7     		b	.L91
 1576              	.LVL151:
 1577              	.L101:
 164:Core/Src/main.c **** 		write_logs= 1;
 1578              		.loc 1 164 42 discriminator 1 view .LVU374
 1579 00ba 264B     		ldr	r3, .L106+4
 1580              	.LVL152:
 164:Core/Src/main.c **** 		write_logs= 1;
 1581              		.loc 1 164 42 discriminator 1 view .LVU375
 1582 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 164:Core/Src/main.c **** 		write_logs= 1;
 1583              		.loc 1 164 27 discriminator 1 view .LVU376
 1584 00be 652B     		cmp	r3, #101
 1585 00c0 C3D1     		bne	.L93
 165:Core/Src/main.c **** 	}
 1586              		.loc 1 165 3 is_stmt 1 view .LVU377
 165:Core/Src/main.c **** 	}
 1587              		.loc 1 165 13 is_stmt 0 view .LVU378
 1588 00c2 264B     		ldr	r3, .L106+12
 1589 00c4 0122     		movs	r2, #1
 1590 00c6 1A70     		strb	r2, [r3]
 1591 00c8 C7E7     		b	.L91
 1592              	.L102:
 167:Core/Src/main.c **** 		write_logs= 0;
 1593              		.loc 1 167 42 discriminator 1 view .LVU379
 1594 00ca 224B     		ldr	r3, .L106+4
 1595 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 167:Core/Src/main.c **** 		write_logs= 0;
 1596              		.loc 1 167 27 discriminator 1 view .LVU380
 1597 00ce 642B     		cmp	r3, #100
 1598 00d0 BDD1     		bne	.L94
ARM GAS  /tmp/cc0rXBD8.s 			page 66


 168:Core/Src/main.c **** 	}
 1599              		.loc 1 168 3 is_stmt 1 view .LVU381
 168:Core/Src/main.c **** 	}
 1600              		.loc 1 168 13 is_stmt 0 view .LVU382
 1601 00d2 224B     		ldr	r3, .L106+12
 1602 00d4 0022     		movs	r2, #0
 1603 00d6 1A70     		strb	r2, [r3]
 1604 00d8 BFE7     		b	.L91
 1605              	.L103:
 170:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 1606              		.loc 1 170 42 discriminator 1 view .LVU383
 1607 00da 1E4B     		ldr	r3, .L106+4
 1608 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_SET);
 1609              		.loc 1 170 27 discriminator 1 view .LVU384
 1610 00de 732B     		cmp	r3, #115
 1611 00e0 B7D1     		bne	.L95
 171:Core/Src/main.c **** 		read_logs_to_sd();
 1612              		.loc 1 171 3 is_stmt 1 view .LVU385
 1613 00e2 204C     		ldr	r4, .L106+20
 1614 00e4 0122     		movs	r2, #1
 1615 00e6 0421     		movs	r1, #4
 1616              	.LVL153:
 171:Core/Src/main.c **** 		read_logs_to_sd();
 1617              		.loc 1 171 3 is_stmt 0 view .LVU386
 1618 00e8 2046     		mov	r0, r4
 1619              	.LVL154:
 171:Core/Src/main.c **** 		read_logs_to_sd();
 1620              		.loc 1 171 3 view .LVU387
 1621 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 1622              	.LVL155:
 172:Core/Src/main.c **** 		HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
 1623              		.loc 1 172 3 is_stmt 1 view .LVU388
 1624 00ee FFF7FEFF 		bl	read_logs_to_sd
 1625              	.LVL156:
 173:Core/Src/main.c **** 	}
 1626              		.loc 1 173 3 view .LVU389
 1627 00f2 0022     		movs	r2, #0
 1628 00f4 0421     		movs	r1, #4
 1629 00f6 2046     		mov	r0, r4
 1630 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1631              	.LVL157:
 1632 00fc ADE7     		b	.L91
 1633              	.LVL158:
 1634              	.L104:
 175:Core/Src/main.c **** 		HAL_SPI_Init(&hspi1);
 1635              		.loc 1 175 42 is_stmt 0 discriminator 1 view .LVU390
 1636 00fe 154B     		ldr	r3, .L106+4
 1637 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 175:Core/Src/main.c **** 		HAL_SPI_Init(&hspi1);
 1638              		.loc 1 175 27 discriminator 1 view .LVU391
 1639 0102 612B     		cmp	r3, #97
 1640 0104 A7D1     		bne	.L96
 1641              	.LBB19:
 176:Core/Src/main.c **** 		int8_t err = getSensorData(&bmpData);
 1642              		.loc 1 176 3 is_stmt 1 view .LVU392
 1643 0106 184C     		ldr	r4, .L106+24
ARM GAS  /tmp/cc0rXBD8.s 			page 67


 1644 0108 2046     		mov	r0, r4
 1645              	.LVL159:
 176:Core/Src/main.c **** 		int8_t err = getSensorData(&bmpData);
 1646              		.loc 1 176 3 is_stmt 0 view .LVU393
 1647 010a FFF7FEFF 		bl	HAL_SPI_Init
 1648              	.LVL160:
 177:Core/Src/main.c **** 		zeroAltitude = calcAltitude(bmpData.pressure);
 1649              		.loc 1 177 3 is_stmt 1 view .LVU394
 177:Core/Src/main.c **** 		zeroAltitude = calcAltitude(bmpData.pressure);
 1650              		.loc 1 177 16 is_stmt 0 view .LVU395
 1651 010e 174E     		ldr	r6, .L106+28
 1652 0110 3046     		mov	r0, r6
 1653 0112 FFF7FEFF 		bl	getSensorData
 1654              	.LVL161:
 178:Core/Src/main.c **** 		apogee = 0;
 1655              		.loc 1 178 3 is_stmt 1 view .LVU396
 178:Core/Src/main.c **** 		apogee = 0;
 1656              		.loc 1 178 18 is_stmt 0 view .LVU397
 1657 0116 96ED000A 		vldr.32	s0, [r6]
 1658 011a FFF7FEFF 		bl	calcAltitude
 1659              	.LVL162:
 178:Core/Src/main.c **** 		apogee = 0;
 1660              		.loc 1 178 16 view .LVU398
 1661 011e 144B     		ldr	r3, .L106+32
 1662 0120 83ED000A 		vstr.32	s0, [r3]
 179:Core/Src/main.c **** 		HAL_SPI_DeInit(&hspi1);
 1663              		.loc 1 179 3 is_stmt 1 view .LVU399
 179:Core/Src/main.c **** 		HAL_SPI_DeInit(&hspi1);
 1664              		.loc 1 179 10 is_stmt 0 view .LVU400
 1665 0124 134B     		ldr	r3, .L106+36
 1666 0126 0022     		movs	r2, #0
 1667 0128 1A60     		str	r2, [r3]	@ float
 180:Core/Src/main.c **** 	}
 1668              		.loc 1 180 3 is_stmt 1 view .LVU401
 1669 012a 2046     		mov	r0, r4
 1670 012c FFF7FEFF 		bl	HAL_SPI_DeInit
 1671              	.LVL163:
 1672              	.LBE19:
 175:Core/Src/main.c **** 		HAL_SPI_Init(&hspi1);
 1673              		.loc 1 175 53 is_stmt 0 view .LVU402
 1674 0130 93E7     		b	.L91
 1675              	.LVL164:
 1676              	.L105:
 182:Core/Src/main.c **** 		HAL_SPI_Init(&hspi1);
 1677              		.loc 1 182 42 discriminator 1 view .LVU403
 1678 0132 084B     		ldr	r3, .L106+4
 1679 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 182:Core/Src/main.c **** 		HAL_SPI_Init(&hspi1);
 1680              		.loc 1 182 27 discriminator 1 view .LVU404
 1681 0136 6C2B     		cmp	r3, #108
 1682 0138 8FD1     		bne	.L91
 183:Core/Src/main.c **** 		reset_logs();
 1683              		.loc 1 183 3 is_stmt 1 view .LVU405
 1684 013a 0B4C     		ldr	r4, .L106+24
 1685 013c 2046     		mov	r0, r4
 1686              	.LVL165:
 183:Core/Src/main.c **** 		reset_logs();
ARM GAS  /tmp/cc0rXBD8.s 			page 68


 1687              		.loc 1 183 3 is_stmt 0 view .LVU406
 1688 013e FFF7FEFF 		bl	HAL_SPI_Init
 1689              	.LVL166:
 184:Core/Src/main.c **** 		HAL_SPI_DeInit(&hspi1);
 1690              		.loc 1 184 3 is_stmt 1 view .LVU407
 1691 0142 FFF7FEFF 		bl	reset_logs
 1692              	.LVL167:
 185:Core/Src/main.c **** 	}
 1693              		.loc 1 185 3 view .LVU408
 1694 0146 2046     		mov	r0, r4
 1695 0148 FFF7FEFF 		bl	HAL_SPI_DeInit
 1696              	.LVL168:
 1697 014c 85E7     		b	.L91
 1698              	.L107:
 1699 014e 00BF     		.align	2
 1700              	.L106:
 1701 0150 00000000 		.word	cmdSymbol
 1702 0154 00000000 		.word	cmdParams
 1703 0158 00000000 		.word	hi2c2
 1704 015c 00000000 		.word	write_logs
 1705 0160 00000000 		.word	rState
 1706 0164 00100240 		.word	1073876992
 1707 0168 00000000 		.word	hspi1
 1708 016c 00000000 		.word	bmpData
 1709 0170 00000000 		.word	zeroAltitude
 1710 0174 00000000 		.word	apogee
 1711              		.cfi_endproc
 1712              	.LFE143:
 1714              		.section	.text.MX_SPI3_Init,"ax",%progbits
 1715              		.align	1
 1716              		.syntax unified
 1717              		.thumb
 1718              		.thumb_func
 1720              	MX_SPI3_Init:
 1721              	.LFB150:
 590:Core/Src/main.c **** 
 1722              		.loc 1 590 1 view -0
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 0
 1725              		@ frame_needed = 0, uses_anonymous_args = 0
 1726 0000 08B5     		push	{r3, lr}
 1727              	.LCFI22:
 1728              		.cfi_def_cfa_offset 8
 1729              		.cfi_offset 3, -8
 1730              		.cfi_offset 14, -4
 600:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1731              		.loc 1 600 3 view .LVU410
 600:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1732              		.loc 1 600 18 is_stmt 0 view .LVU411
 1733 0002 0D48     		ldr	r0, .L112
 1734 0004 0D4B     		ldr	r3, .L112+4
 1735 0006 0360     		str	r3, [r0]
 601:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1736              		.loc 1 601 3 is_stmt 1 view .LVU412
 601:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1737              		.loc 1 601 19 is_stmt 0 view .LVU413
 1738 0008 4FF48273 		mov	r3, #260
ARM GAS  /tmp/cc0rXBD8.s 			page 69


 1739 000c 4360     		str	r3, [r0, #4]
 602:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1740              		.loc 1 602 3 is_stmt 1 view .LVU414
 602:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1741              		.loc 1 602 24 is_stmt 0 view .LVU415
 1742 000e 0023     		movs	r3, #0
 1743 0010 8360     		str	r3, [r0, #8]
 603:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1744              		.loc 1 603 3 is_stmt 1 view .LVU416
 603:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1745              		.loc 1 603 23 is_stmt 0 view .LVU417
 1746 0012 C360     		str	r3, [r0, #12]
 604:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1747              		.loc 1 604 3 is_stmt 1 view .LVU418
 604:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1748              		.loc 1 604 26 is_stmt 0 view .LVU419
 1749 0014 0361     		str	r3, [r0, #16]
 605:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1750              		.loc 1 605 3 is_stmt 1 view .LVU420
 605:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1751              		.loc 1 605 23 is_stmt 0 view .LVU421
 1752 0016 4361     		str	r3, [r0, #20]
 606:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1753              		.loc 1 606 3 is_stmt 1 view .LVU422
 606:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1754              		.loc 1 606 18 is_stmt 0 view .LVU423
 1755 0018 4FF40072 		mov	r2, #512
 1756 001c 8261     		str	r2, [r0, #24]
 607:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1757              		.loc 1 607 3 is_stmt 1 view .LVU424
 607:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1758              		.loc 1 607 32 is_stmt 0 view .LVU425
 1759 001e C361     		str	r3, [r0, #28]
 608:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1760              		.loc 1 608 3 is_stmt 1 view .LVU426
 608:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1761              		.loc 1 608 23 is_stmt 0 view .LVU427
 1762 0020 0362     		str	r3, [r0, #32]
 609:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1763              		.loc 1 609 3 is_stmt 1 view .LVU428
 609:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1764              		.loc 1 609 21 is_stmt 0 view .LVU429
 1765 0022 4362     		str	r3, [r0, #36]
 610:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1766              		.loc 1 610 3 is_stmt 1 view .LVU430
 610:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1767              		.loc 1 610 29 is_stmt 0 view .LVU431
 1768 0024 8362     		str	r3, [r0, #40]
 611:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1769              		.loc 1 611 3 is_stmt 1 view .LVU432
 611:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1770              		.loc 1 611 28 is_stmt 0 view .LVU433
 1771 0026 0A23     		movs	r3, #10
 1772 0028 C362     		str	r3, [r0, #44]
 612:Core/Src/main.c ****   {
 1773              		.loc 1 612 3 is_stmt 1 view .LVU434
 612:Core/Src/main.c ****   {
ARM GAS  /tmp/cc0rXBD8.s 			page 70


 1774              		.loc 1 612 7 is_stmt 0 view .LVU435
 1775 002a FFF7FEFF 		bl	HAL_SPI_Init
 1776              	.LVL169:
 612:Core/Src/main.c ****   {
 1777              		.loc 1 612 6 view .LVU436
 1778 002e 00B9     		cbnz	r0, .L111
 620:Core/Src/main.c **** 
 1779              		.loc 1 620 1 view .LVU437
 1780 0030 08BD     		pop	{r3, pc}
 1781              	.L111:
 614:Core/Src/main.c ****   }
 1782              		.loc 1 614 5 is_stmt 1 view .LVU438
 1783 0032 FFF7FEFF 		bl	Error_Handler
 1784              	.LVL170:
 1785              	.L113:
 1786 0036 00BF     		.align	2
 1787              	.L112:
 1788 0038 00000000 		.word	hspi3
 1789 003c 003C0040 		.word	1073757184
 1790              		.cfi_endproc
 1791              	.LFE150:
 1793              		.section	.text.MX_SPI1_Init,"ax",%progbits
 1794              		.align	1
 1795              		.syntax unified
 1796              		.thumb
 1797              		.thumb_func
 1799              	MX_SPI1_Init:
 1800              	.LFB149:
 552:Core/Src/main.c **** 
 1801              		.loc 1 552 1 view -0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 0
 1804              		@ frame_needed = 0, uses_anonymous_args = 0
 1805 0000 08B5     		push	{r3, lr}
 1806              	.LCFI23:
 1807              		.cfi_def_cfa_offset 8
 1808              		.cfi_offset 3, -8
 1809              		.cfi_offset 14, -4
 562:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1810              		.loc 1 562 3 view .LVU440
 562:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 1811              		.loc 1 562 18 is_stmt 0 view .LVU441
 1812 0002 0D48     		ldr	r0, .L118
 1813 0004 0D4B     		ldr	r3, .L118+4
 1814 0006 0360     		str	r3, [r0]
 563:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1815              		.loc 1 563 3 is_stmt 1 view .LVU442
 563:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 1816              		.loc 1 563 19 is_stmt 0 view .LVU443
 1817 0008 4FF48273 		mov	r3, #260
 1818 000c 4360     		str	r3, [r0, #4]
 564:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1819              		.loc 1 564 3 is_stmt 1 view .LVU444
 564:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 1820              		.loc 1 564 24 is_stmt 0 view .LVU445
 1821 000e 0023     		movs	r3, #0
 1822 0010 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/cc0rXBD8.s 			page 71


 565:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1823              		.loc 1 565 3 is_stmt 1 view .LVU446
 565:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 1824              		.loc 1 565 23 is_stmt 0 view .LVU447
 1825 0012 C360     		str	r3, [r0, #12]
 566:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1826              		.loc 1 566 3 is_stmt 1 view .LVU448
 566:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 1827              		.loc 1 566 26 is_stmt 0 view .LVU449
 1828 0014 0361     		str	r3, [r0, #16]
 567:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1829              		.loc 1 567 3 is_stmt 1 view .LVU450
 567:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 1830              		.loc 1 567 23 is_stmt 0 view .LVU451
 1831 0016 4361     		str	r3, [r0, #20]
 568:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1832              		.loc 1 568 3 is_stmt 1 view .LVU452
 568:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1833              		.loc 1 568 18 is_stmt 0 view .LVU453
 1834 0018 4FF40072 		mov	r2, #512
 1835 001c 8261     		str	r2, [r0, #24]
 569:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1836              		.loc 1 569 3 is_stmt 1 view .LVU454
 569:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1837              		.loc 1 569 32 is_stmt 0 view .LVU455
 1838 001e C361     		str	r3, [r0, #28]
 570:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1839              		.loc 1 570 3 is_stmt 1 view .LVU456
 570:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1840              		.loc 1 570 23 is_stmt 0 view .LVU457
 1841 0020 0362     		str	r3, [r0, #32]
 571:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1842              		.loc 1 571 3 is_stmt 1 view .LVU458
 571:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1843              		.loc 1 571 21 is_stmt 0 view .LVU459
 1844 0022 4362     		str	r3, [r0, #36]
 572:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 1845              		.loc 1 572 3 is_stmt 1 view .LVU460
 572:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 1846              		.loc 1 572 29 is_stmt 0 view .LVU461
 1847 0024 8362     		str	r3, [r0, #40]
 573:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1848              		.loc 1 573 3 is_stmt 1 view .LVU462
 573:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1849              		.loc 1 573 28 is_stmt 0 view .LVU463
 1850 0026 0A23     		movs	r3, #10
 1851 0028 C362     		str	r3, [r0, #44]
 574:Core/Src/main.c ****   {
 1852              		.loc 1 574 3 is_stmt 1 view .LVU464
 574:Core/Src/main.c ****   {
 1853              		.loc 1 574 7 is_stmt 0 view .LVU465
 1854 002a FFF7FEFF 		bl	HAL_SPI_Init
 1855              	.LVL171:
 574:Core/Src/main.c ****   {
 1856              		.loc 1 574 6 view .LVU466
 1857 002e 00B9     		cbnz	r0, .L117
 582:Core/Src/main.c **** 
ARM GAS  /tmp/cc0rXBD8.s 			page 72


 1858              		.loc 1 582 1 view .LVU467
 1859 0030 08BD     		pop	{r3, pc}
 1860              	.L117:
 576:Core/Src/main.c ****   }
 1861              		.loc 1 576 5 is_stmt 1 view .LVU468
 1862 0032 FFF7FEFF 		bl	Error_Handler
 1863              	.LVL172:
 1864              	.L119:
 1865 0036 00BF     		.align	2
 1866              	.L118:
 1867 0038 00000000 		.word	hspi1
 1868 003c 00300140 		.word	1073819648
 1869              		.cfi_endproc
 1870              	.LFE149:
 1872              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1873              		.align	1
 1874              		.syntax unified
 1875              		.thumb
 1876              		.thumb_func
 1878              	MX_USART2_UART_Init:
 1879              	.LFB151:
 628:Core/Src/main.c **** 
 1880              		.loc 1 628 1 view -0
 1881              		.cfi_startproc
 1882              		@ args = 0, pretend = 0, frame = 0
 1883              		@ frame_needed = 0, uses_anonymous_args = 0
 1884 0000 08B5     		push	{r3, lr}
 1885              	.LCFI24:
 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 3, -8
 1888              		.cfi_offset 14, -4
 637:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 1889              		.loc 1 637 3 view .LVU470
 637:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 1890              		.loc 1 637 19 is_stmt 0 view .LVU471
 1891 0002 0A48     		ldr	r0, .L124
 1892 0004 0A4B     		ldr	r3, .L124+4
 1893 0006 0360     		str	r3, [r0]
 638:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1894              		.loc 1 638 3 is_stmt 1 view .LVU472
 638:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1895              		.loc 1 638 24 is_stmt 0 view .LVU473
 1896 0008 4FF41653 		mov	r3, #9600
 1897 000c 4360     		str	r3, [r0, #4]
 639:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1898              		.loc 1 639 3 is_stmt 1 view .LVU474
 639:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1899              		.loc 1 639 26 is_stmt 0 view .LVU475
 1900 000e 0023     		movs	r3, #0
 1901 0010 8360     		str	r3, [r0, #8]
 640:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1902              		.loc 1 640 3 is_stmt 1 view .LVU476
 640:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1903              		.loc 1 640 24 is_stmt 0 view .LVU477
 1904 0012 C360     		str	r3, [r0, #12]
 641:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1905              		.loc 1 641 3 is_stmt 1 view .LVU478
ARM GAS  /tmp/cc0rXBD8.s 			page 73


 641:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1906              		.loc 1 641 22 is_stmt 0 view .LVU479
 1907 0014 0361     		str	r3, [r0, #16]
 642:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1908              		.loc 1 642 3 is_stmt 1 view .LVU480
 642:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1909              		.loc 1 642 20 is_stmt 0 view .LVU481
 1910 0016 0C22     		movs	r2, #12
 1911 0018 4261     		str	r2, [r0, #20]
 643:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1912              		.loc 1 643 3 is_stmt 1 view .LVU482
 643:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1913              		.loc 1 643 25 is_stmt 0 view .LVU483
 1914 001a 8361     		str	r3, [r0, #24]
 644:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1915              		.loc 1 644 3 is_stmt 1 view .LVU484
 644:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1916              		.loc 1 644 28 is_stmt 0 view .LVU485
 1917 001c C361     		str	r3, [r0, #28]
 645:Core/Src/main.c ****   {
 1918              		.loc 1 645 3 is_stmt 1 view .LVU486
 645:Core/Src/main.c ****   {
 1919              		.loc 1 645 7 is_stmt 0 view .LVU487
 1920 001e FFF7FEFF 		bl	HAL_UART_Init
 1921              	.LVL173:
 645:Core/Src/main.c ****   {
 1922              		.loc 1 645 6 view .LVU488
 1923 0022 00B9     		cbnz	r0, .L123
 653:Core/Src/main.c **** 
 1924              		.loc 1 653 1 view .LVU489
 1925 0024 08BD     		pop	{r3, pc}
 1926              	.L123:
 647:Core/Src/main.c ****   }
 1927              		.loc 1 647 5 is_stmt 1 view .LVU490
 1928 0026 FFF7FEFF 		bl	Error_Handler
 1929              	.LVL174:
 1930              	.L125:
 1931 002a 00BF     		.align	2
 1932              	.L124:
 1933 002c 00000000 		.word	huart2
 1934 0030 00440040 		.word	1073759232
 1935              		.cfi_endproc
 1936              	.LFE151:
 1938              		.section	.text.SystemClock_Config,"ax",%progbits
 1939              		.align	1
 1940              		.global	SystemClock_Config
 1941              		.syntax unified
 1942              		.thumb
 1943              		.thumb_func
 1945              	SystemClock_Config:
 1946              	.LFB146:
 443:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1947              		.loc 1 443 1 view -0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 80
 1950              		@ frame_needed = 0, uses_anonymous_args = 0
 1951 0000 00B5     		push	{lr}
ARM GAS  /tmp/cc0rXBD8.s 			page 74


 1952              	.LCFI25:
 1953              		.cfi_def_cfa_offset 4
 1954              		.cfi_offset 14, -4
 1955 0002 95B0     		sub	sp, sp, #84
 1956              	.LCFI26:
 1957              		.cfi_def_cfa_offset 88
 444:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1958              		.loc 1 444 3 view .LVU492
 444:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1959              		.loc 1 444 22 is_stmt 0 view .LVU493
 1960 0004 3022     		movs	r2, #48
 1961 0006 0021     		movs	r1, #0
 1962 0008 08A8     		add	r0, sp, #32
 1963 000a FFF7FEFF 		bl	memset
 1964              	.LVL175:
 445:Core/Src/main.c **** 
 1965              		.loc 1 445 3 is_stmt 1 view .LVU494
 445:Core/Src/main.c **** 
 1966              		.loc 1 445 22 is_stmt 0 view .LVU495
 1967 000e 0023     		movs	r3, #0
 1968 0010 0393     		str	r3, [sp, #12]
 1969 0012 0493     		str	r3, [sp, #16]
 1970 0014 0593     		str	r3, [sp, #20]
 1971 0016 0693     		str	r3, [sp, #24]
 1972 0018 0793     		str	r3, [sp, #28]
 449:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1973              		.loc 1 449 3 is_stmt 1 view .LVU496
 1974              	.LBB20:
 449:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1975              		.loc 1 449 3 view .LVU497
 1976 001a 0193     		str	r3, [sp, #4]
 449:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1977              		.loc 1 449 3 view .LVU498
 1978 001c 1F4A     		ldr	r2, .L132
 1979 001e 116C     		ldr	r1, [r2, #64]
 1980 0020 41F08051 		orr	r1, r1, #268435456
 1981 0024 1164     		str	r1, [r2, #64]
 449:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1982              		.loc 1 449 3 view .LVU499
 1983 0026 126C     		ldr	r2, [r2, #64]
 1984 0028 02F08052 		and	r2, r2, #268435456
 1985 002c 0192     		str	r2, [sp, #4]
 449:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1986              		.loc 1 449 3 view .LVU500
 1987 002e 019A     		ldr	r2, [sp, #4]
 1988              	.LBE20:
 449:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1989              		.loc 1 449 3 view .LVU501
 450:Core/Src/main.c **** 
 1990              		.loc 1 450 3 view .LVU502
 1991              	.LBB21:
 450:Core/Src/main.c **** 
 1992              		.loc 1 450 3 view .LVU503
 1993 0030 0293     		str	r3, [sp, #8]
 450:Core/Src/main.c **** 
 1994              		.loc 1 450 3 view .LVU504
 1995 0032 1B4A     		ldr	r2, .L132+4
ARM GAS  /tmp/cc0rXBD8.s 			page 75


 1996 0034 1168     		ldr	r1, [r2]
 1997 0036 41F48041 		orr	r1, r1, #16384
 1998 003a 1160     		str	r1, [r2]
 450:Core/Src/main.c **** 
 1999              		.loc 1 450 3 view .LVU505
 2000 003c 1268     		ldr	r2, [r2]
 2001 003e 02F48042 		and	r2, r2, #16384
 2002 0042 0292     		str	r2, [sp, #8]
 450:Core/Src/main.c **** 
 2003              		.loc 1 450 3 view .LVU506
 2004 0044 029A     		ldr	r2, [sp, #8]
 2005              	.LBE21:
 450:Core/Src/main.c **** 
 2006              		.loc 1 450 3 view .LVU507
 455:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2007              		.loc 1 455 3 view .LVU508
 455:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2008              		.loc 1 455 36 is_stmt 0 view .LVU509
 2009 0046 0222     		movs	r2, #2
 2010 0048 0892     		str	r2, [sp, #32]
 456:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2011              		.loc 1 456 3 is_stmt 1 view .LVU510
 456:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2012              		.loc 1 456 30 is_stmt 0 view .LVU511
 2013 004a 0121     		movs	r1, #1
 2014 004c 0B91     		str	r1, [sp, #44]
 457:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2015              		.loc 1 457 3 is_stmt 1 view .LVU512
 457:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2016              		.loc 1 457 41 is_stmt 0 view .LVU513
 2017 004e 1021     		movs	r1, #16
 2018 0050 0C91     		str	r1, [sp, #48]
 458:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2019              		.loc 1 458 3 is_stmt 1 view .LVU514
 458:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2020              		.loc 1 458 34 is_stmt 0 view .LVU515
 2021 0052 0E92     		str	r2, [sp, #56]
 459:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 2022              		.loc 1 459 3 is_stmt 1 view .LVU516
 459:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 2023              		.loc 1 459 35 is_stmt 0 view .LVU517
 2024 0054 0F93     		str	r3, [sp, #60]
 460:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 80;
 2025              		.loc 1 460 3 is_stmt 1 view .LVU518
 460:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 80;
 2026              		.loc 1 460 30 is_stmt 0 view .LVU519
 2027 0056 0823     		movs	r3, #8
 2028 0058 1093     		str	r3, [sp, #64]
 461:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2029              		.loc 1 461 3 is_stmt 1 view .LVU520
 461:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 2030              		.loc 1 461 30 is_stmt 0 view .LVU521
 2031 005a 5023     		movs	r3, #80
 2032 005c 1193     		str	r3, [sp, #68]
 462:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 2033              		.loc 1 462 3 is_stmt 1 view .LVU522
 462:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
ARM GAS  /tmp/cc0rXBD8.s 			page 76


 2034              		.loc 1 462 30 is_stmt 0 view .LVU523
 2035 005e 1292     		str	r2, [sp, #72]
 463:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2036              		.loc 1 463 3 is_stmt 1 view .LVU524
 463:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2037              		.loc 1 463 30 is_stmt 0 view .LVU525
 2038 0060 0423     		movs	r3, #4
 2039 0062 1393     		str	r3, [sp, #76]
 464:Core/Src/main.c ****   {
 2040              		.loc 1 464 3 is_stmt 1 view .LVU526
 464:Core/Src/main.c ****   {
 2041              		.loc 1 464 7 is_stmt 0 view .LVU527
 2042 0064 08A8     		add	r0, sp, #32
 2043 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2044              	.LVL176:
 464:Core/Src/main.c ****   {
 2045              		.loc 1 464 6 view .LVU528
 2046 006a 90B9     		cbnz	r0, .L130
 471:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2047              		.loc 1 471 3 is_stmt 1 view .LVU529
 471:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2048              		.loc 1 471 31 is_stmt 0 view .LVU530
 2049 006c 0F23     		movs	r3, #15
 2050 006e 0393     		str	r3, [sp, #12]
 473:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2051              		.loc 1 473 3 is_stmt 1 view .LVU531
 473:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2052              		.loc 1 473 34 is_stmt 0 view .LVU532
 2053 0070 0221     		movs	r1, #2
 2054 0072 0491     		str	r1, [sp, #16]
 474:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 2055              		.loc 1 474 3 is_stmt 1 view .LVU533
 474:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 2056              		.loc 1 474 35 is_stmt 0 view .LVU534
 2057 0074 0023     		movs	r3, #0
 2058 0076 0593     		str	r3, [sp, #20]
 475:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 2059              		.loc 1 475 3 is_stmt 1 view .LVU535
 475:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 2060              		.loc 1 475 36 is_stmt 0 view .LVU536
 2061 0078 4FF4C053 		mov	r3, #6144
 2062 007c 0693     		str	r3, [sp, #24]
 476:Core/Src/main.c **** 
 2063              		.loc 1 476 3 is_stmt 1 view .LVU537
 476:Core/Src/main.c **** 
 2064              		.loc 1 476 36 is_stmt 0 view .LVU538
 2065 007e 4FF48053 		mov	r3, #4096
 2066 0082 0793     		str	r3, [sp, #28]
 478:Core/Src/main.c ****   {
 2067              		.loc 1 478 3 is_stmt 1 view .LVU539
 478:Core/Src/main.c ****   {
 2068              		.loc 1 478 7 is_stmt 0 view .LVU540
 2069 0084 03A8     		add	r0, sp, #12
 2070 0086 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2071              	.LVL177:
 478:Core/Src/main.c ****   {
 2072              		.loc 1 478 6 view .LVU541
ARM GAS  /tmp/cc0rXBD8.s 			page 77


 2073 008a 20B9     		cbnz	r0, .L131
 482:Core/Src/main.c **** 
 2074              		.loc 1 482 1 view .LVU542
 2075 008c 15B0     		add	sp, sp, #84
 2076              	.LCFI27:
 2077              		.cfi_remember_state
 2078              		.cfi_def_cfa_offset 4
 2079              		@ sp needed
 2080 008e 5DF804FB 		ldr	pc, [sp], #4
 2081              	.L130:
 2082              	.LCFI28:
 2083              		.cfi_restore_state
 466:Core/Src/main.c ****   }
 2084              		.loc 1 466 5 is_stmt 1 view .LVU543
 2085 0092 FFF7FEFF 		bl	Error_Handler
 2086              	.LVL178:
 2087              	.L131:
 480:Core/Src/main.c ****   }
 2088              		.loc 1 480 5 view .LVU544
 2089 0096 FFF7FEFF 		bl	Error_Handler
 2090              	.LVL179:
 2091              	.L133:
 2092 009a 00BF     		.align	2
 2093              	.L132:
 2094 009c 00380240 		.word	1073887232
 2095 00a0 00700040 		.word	1073770496
 2096              		.cfi_endproc
 2097              	.LFE146:
 2099              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2100              		.align	2
 2101              	.LC20:
 2102 0000 73203820 		.ascii	"s 8 90\000"
 2102      393000
 2103              		.global	__aeabi_dcmpgt
 2104              		.global	__aeabi_ddiv
 2105 0007 00       		.align	2
 2106              	.LC21:
 2107 0008 70202564 		.ascii	"p %d %f %f %d\000"
 2107      20256620 
 2107      25662025 
 2107      6400
 2108 0016 0000     		.align	2
 2109              	.LC22:
 2110 0018 68202564 		.ascii	"h %d %.2f\000"
 2110      20252E32 
 2110      6600
 2111              		.global	__aeabi_f2d
 2112 0022 0000     		.align	2
 2113              	.LC23:
 2114 0024 76202564 		.ascii	"v %d %.2f\000"
 2114      20252E32 
 2114      6600
 2115 002e 0000     		.align	2
 2116              	.LC24:
 2117 0030 6F202564 		.ascii	"o %d %.2f %.2f %.2f\000"
 2117      20252E32 
 2117      6620252E 
ARM GAS  /tmp/cc0rXBD8.s 			page 78


 2117      32662025 
 2117      2E326600 
 2118              		.align	2
 2119              	.LC25:
 2120 0044 67202564 		.ascii	"g %d %.2f %.2f %.2f\000"
 2120      20252E32 
 2120      6620252E 
 2120      32662025 
 2120      2E326600 
 2121              		.align	2
 2122              	.LC26:
 2123 0058 61202564 		.ascii	"a %d %.2f %.2f %.2f\000"
 2123      20252E32 
 2123      6620252E 
 2123      32662025 
 2123      2E326600 
 2124              		.align	2
 2125              	.LC27:
 2126 006c 71202564 		.ascii	"q %d %.2f %.2f %.2f %.2f\000"
 2126      20252E32 
 2126      6620252E 
 2126      32662025 
 2126      2E326620 
 2127 0085 000000   		.align	2
 2128              	.LC28:
 2129 0088 73202564 		.ascii	"s %d %d %d %d\000"
 2129      20256420 
 2129      25642025 
 2129      6400
 2130              		.section	.text.main,"ax",%progbits
 2131              		.align	1
 2132              		.global	main
 2133              		.syntax unified
 2134              		.thumb
 2135              		.thumb_func
 2137              	main:
 2138              	.LFB145:
 221:Core/Src/main.c **** 
 2139              		.loc 1 221 1 view -0
 2140              		.cfi_startproc
 2141              		@ args = 0, pretend = 0, frame = 176
 2142              		@ frame_needed = 0, uses_anonymous_args = 0
 2143 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2144              	.LCFI29:
 2145              		.cfi_def_cfa_offset 36
 2146              		.cfi_offset 4, -36
 2147              		.cfi_offset 5, -32
 2148              		.cfi_offset 6, -28
 2149              		.cfi_offset 7, -24
 2150              		.cfi_offset 8, -20
 2151              		.cfi_offset 9, -16
 2152              		.cfi_offset 10, -12
 2153              		.cfi_offset 11, -8
 2154              		.cfi_offset 14, -4
 2155 0004 2DED068B 		vpush.64	{d8, d9, d10}
 2156              	.LCFI30:
 2157              		.cfi_def_cfa_offset 60
ARM GAS  /tmp/cc0rXBD8.s 			page 79


 2158              		.cfi_offset 80, -60
 2159              		.cfi_offset 81, -56
 2160              		.cfi_offset 82, -52
 2161              		.cfi_offset 83, -48
 2162              		.cfi_offset 84, -44
 2163              		.cfi_offset 85, -40
 2164 0008 B5B0     		sub	sp, sp, #212
 2165              	.LCFI31:
 2166              		.cfi_def_cfa_offset 272
 230:Core/Src/main.c **** 
 2167              		.loc 1 230 3 view .LVU546
 2168 000a FFF7FEFF 		bl	HAL_Init
 2169              	.LVL180:
 237:Core/Src/main.c **** 
 2170              		.loc 1 237 3 view .LVU547
 2171 000e FFF7FEFF 		bl	SystemClock_Config
 2172              	.LVL181:
 244:Core/Src/main.c ****   MX_DMA_Init();
 2173              		.loc 1 244 3 view .LVU548
 2174 0012 FFF7FEFF 		bl	MX_GPIO_Init
 2175              	.LVL182:
 245:Core/Src/main.c ****   MX_I2C2_Init();
 2176              		.loc 1 245 3 view .LVU549
 2177 0016 FFF7FEFF 		bl	MX_DMA_Init
 2178              	.LVL183:
 246:Core/Src/main.c ****   MX_SPI3_Init();
 2179              		.loc 1 246 3 view .LVU550
 2180 001a FFF7FEFF 		bl	MX_I2C2_Init
 2181              	.LVL184:
 247:Core/Src/main.c ****   MX_SDIO_SD_Init();
 2182              		.loc 1 247 3 view .LVU551
 2183 001e FFF7FEFF 		bl	MX_SPI3_Init
 2184              	.LVL185:
 248:Core/Src/main.c ****   MX_FATFS_Init();
 2185              		.loc 1 248 3 view .LVU552
 2186 0022 FFF7FEFF 		bl	MX_SDIO_SD_Init
 2187              	.LVL186:
 249:Core/Src/main.c ****   MX_SPI1_Init();
 2188              		.loc 1 249 3 view .LVU553
 2189 0026 FFF7FEFF 		bl	MX_FATFS_Init
 2190              	.LVL187:
 250:Core/Src/main.c ****   MX_USART2_UART_Init();
 2191              		.loc 1 250 3 view .LVU554
 2192 002a FFF7FEFF 		bl	MX_SPI1_Init
 2193              	.LVL188:
 251:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2194              		.loc 1 251 3 view .LVU555
 2195 002e FFF7FEFF 		bl	MX_USART2_UART_Init
 2196              	.LVL189:
 253:Core/Src/main.c ****   __HAL_DMA_DISABLE_IT(&hdma_usart2_rx, DMA_IT_HT);
 2197              		.loc 1 253 3 view .LVU556
 2198 0032 4022     		movs	r2, #64
 2199 0034 6E49     		ldr	r1, .L173
 2200 0036 6F48     		ldr	r0, .L173+4
 2201 0038 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_DMA
 2202              	.LVL190:
 254:Core/Src/main.c **** 
ARM GAS  /tmp/cc0rXBD8.s 			page 80


 2203              		.loc 1 254 3 view .LVU557
 2204 003c 6E4B     		ldr	r3, .L173+8
 2205 003e 1A68     		ldr	r2, [r3]
 2206 0040 1368     		ldr	r3, [r2]
 2207 0042 23F00803 		bic	r3, r3, #8
 2208 0046 1360     		str	r3, [r2]
 258:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_3, GPIO_PIN_SET);
 2209              		.loc 1 258 3 view .LVU558
 2210 0048 6C4C     		ldr	r4, .L173+12
 2211 004a 0122     		movs	r2, #1
 2212 004c 0421     		movs	r1, #4
 2213 004e 2046     		mov	r0, r4
 2214 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2215              	.LVL191:
 259:Core/Src/main.c **** 
 2216              		.loc 1 259 3 view .LVU559
 2217 0054 0122     		movs	r2, #1
 2218 0056 0821     		movs	r1, #8
 2219 0058 2046     		mov	r0, r4
 2220 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 2221              	.LVL192:
 261:Core/Src/main.c ****   HAL_Delay(100);
 2222              		.loc 1 261 3 view .LVU560
 2223 005e 684C     		ldr	r4, .L173+16
 2224 0060 2046     		mov	r0, r4
 2225 0062 FFF7FEFF 		bl	colir_one_init
 2226              	.LVL193:
 262:Core/Src/main.c **** 
 2227              		.loc 1 262 3 view .LVU561
 2228 0066 6420     		movs	r0, #100
 2229 0068 FFF7FEFF 		bl	HAL_Delay
 2230              	.LVL194:
 264:Core/Src/main.c **** 
 2231              		.loc 1 264 3 view .LVU562
 2232 006c FFF7FEFF 		bl	read_logs_to_sd
 2233              	.LVL195:
 266:Core/Src/main.c ****   NRF24_TxRxMode(TxAddress, RxAddress, 76);
 2234              		.loc 1 266 3 view .LVU563
 2235 0070 FFF7FEFF 		bl	NRF24_Init
 2236              	.LVL196:
 267:Core/Src/main.c ****   NRF24_RxMode();
 2237              		.loc 1 267 3 view .LVU564
 2238 0074 4C22     		movs	r2, #76
 2239 0076 6349     		ldr	r1, .L173+20
 2240 0078 6348     		ldr	r0, .L173+24
 2241 007a FFF7FEFF 		bl	NRF24_TxRxMode
 2242              	.LVL197:
 268:Core/Src/main.c **** 
 2243              		.loc 1 268 3 view .LVU565
 2244 007e FFF7FEFF 		bl	NRF24_RxMode
 2245              	.LVL198:
 270:Core/Src/main.c ****   bno055_setup();
 2246              		.loc 1 270 3 view .LVU566
 2247 0082 624D     		ldr	r5, .L173+28
 2248 0084 2846     		mov	r0, r5
 2249 0086 FFF7FEFF 		bl	bno055_assignI2C
 2250              	.LVL199:
ARM GAS  /tmp/cc0rXBD8.s 			page 81


 271:Core/Src/main.c ****   bno055_setOperationModeNDOF();
 2251              		.loc 1 271 3 view .LVU567
 2252 008a FFF7FEFF 		bl	bno055_setup
 2253              	.LVL200:
 272:Core/Src/main.c **** 
 2254              		.loc 1 272 3 view .LVU568
 2255 008e FFF7FEFF 		bl	bno055_setOperationModeNDOF
 2256              	.LVL201:
 274:Core/Src/main.c ****   PCA9685_SetPwmFrequency(50);
 2257              		.loc 1 274 3 view .LVU569
 2258 0092 2846     		mov	r0, r5
 2259 0094 FFF7FEFF 		bl	PCA9685_Init
 2260              	.LVL202:
 275:Core/Src/main.c **** 
 2261              		.loc 1 275 3 view .LVU570
 2262 0098 3220     		movs	r0, #50
 2263 009a FFF7FEFF 		bl	PCA9685_SetPwmFrequency
 2264              	.LVL203:
 284:Core/Src/main.c ****   while(beginSPI() != BMP5_OK)
 2265              		.loc 1 284 3 view .LVU571
 2266 009e 2046     		mov	r0, r4
 2267 00a0 FFF7FEFF 		bl	HAL_SPI_Init
 2268              	.LVL204:
 285:Core/Src/main.c ****   {
 2269              		.loc 1 285 3 view .LVU572
 285:Core/Src/main.c ****   {
 2270              		.loc 1 285 8 is_stmt 0 view .LVU573
 2271 00a4 03E0     		b	.L135
 2272              	.L136:
 288:Core/Src/main.c ****   }
 2273              		.loc 1 288 5 is_stmt 1 view .LVU574
 2274 00a6 4FF47A70 		mov	r0, #1000
 2275 00aa FFF7FEFF 		bl	HAL_Delay
 2276              	.LVL205:
 2277              	.L135:
 285:Core/Src/main.c ****   {
 2278              		.loc 1 285 20 view .LVU575
 285:Core/Src/main.c ****   {
 2279              		.loc 1 285 9 is_stmt 0 view .LVU576
 2280 00ae FFF7FEFF 		bl	beginSPI
 2281              	.LVL206:
 285:Core/Src/main.c ****   {
 2282              		.loc 1 285 20 view .LVU577
 2283 00b2 0028     		cmp	r0, #0
 2284 00b4 F7D1     		bne	.L136
 290:Core/Src/main.c ****   int8_t err = getSensorData(&bmpData);
 2285              		.loc 1 290 3 is_stmt 1 view .LVU578
 2286 00b6 4FF47A70 		mov	r0, #1000
 2287 00ba FFF7FEFF 		bl	HAL_Delay
 2288              	.LVL207:
 291:Core/Src/main.c ****   zeroAltitude = calcAltitude(bmpData.pressure);
 2289              		.loc 1 291 3 view .LVU579
 291:Core/Src/main.c ****   zeroAltitude = calcAltitude(bmpData.pressure);
 2290              		.loc 1 291 16 is_stmt 0 view .LVU580
 2291 00be 544C     		ldr	r4, .L173+32
 2292 00c0 2046     		mov	r0, r4
 2293 00c2 FFF7FEFF 		bl	getSensorData
ARM GAS  /tmp/cc0rXBD8.s 			page 82


 2294              	.LVL208:
 292:Core/Src/main.c ****   HAL_SPI_DeInit(&hspi1);
 2295              		.loc 1 292 3 is_stmt 1 view .LVU581
 292:Core/Src/main.c ****   HAL_SPI_DeInit(&hspi1);
 2296              		.loc 1 292 18 is_stmt 0 view .LVU582
 2297 00c6 94ED000A 		vldr.32	s0, [r4]
 2298 00ca FFF7FEFF 		bl	calcAltitude
 2299              	.LVL209:
 292:Core/Src/main.c ****   HAL_SPI_DeInit(&hspi1);
 2300              		.loc 1 292 16 view .LVU583
 2301 00ce 514B     		ldr	r3, .L173+36
 2302 00d0 83ED000A 		vstr.32	s0, [r3]
 293:Core/Src/main.c **** 
 2303              		.loc 1 293 3 is_stmt 1 view .LVU584
 2304 00d4 4A48     		ldr	r0, .L173+16
 2305 00d6 FFF7FEFF 		bl	HAL_SPI_DeInit
 2306              	.LVL210:
 295:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
 2307              		.loc 1 295 3 view .LVU585
 295:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
 2308              		.loc 1 295 10 is_stmt 0 view .LVU586
 2309 00da 4F4B     		ldr	r3, .L173+40
 2310 00dc 0122     		movs	r2, #1
 2311 00de 1A70     		strb	r2, [r3]
 296:Core/Src/main.c **** 
 2312              		.loc 1 296 3 is_stmt 1 view .LVU587
 2313 00e0 0022     		movs	r2, #0
 2314 00e2 0421     		movs	r1, #4
 2315 00e4 4548     		ldr	r0, .L173+12
 2316 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2317              	.LVL211:
 298:Core/Src/main.c ****   uint32_t lastTimestamp = HAL_GetTick();
 2318              		.loc 1 298 3 view .LVU588
 298:Core/Src/main.c ****   uint32_t lastTimestamp = HAL_GetTick();
 2319              		.loc 1 298 25 is_stmt 0 view .LVU589
 2320 00ea FFF7FEFF 		bl	HAL_GetTick
 2321              	.LVL212:
 2322 00ee 8346     		mov	fp, r0
 2323              	.LVL213:
 299:Core/Src/main.c ****   bool rxMode = false;
 2324              		.loc 1 299 3 is_stmt 1 view .LVU590
 299:Core/Src/main.c ****   bool rxMode = false;
 2325              		.loc 1 299 28 is_stmt 0 view .LVU591
 2326 00f0 FFF7FEFF 		bl	HAL_GetTick
 2327              	.LVL214:
 299:Core/Src/main.c ****   bool rxMode = false;
 2328              		.loc 1 299 28 view .LVU592
 2329 00f4 1390     		str	r0, [sp, #76]
 2330              	.LVL215:
 300:Core/Src/main.c ****   float VBatt;
 2331              		.loc 1 300 3 is_stmt 1 view .LVU593
 301:Core/Src/main.c ****   float lastAltitude = 0;
 2332              		.loc 1 301 3 view .LVU594
 302:Core/Src/main.c ****   float verticalVelocity = 0;
 2333              		.loc 1 302 3 view .LVU595
 303:Core/Src/main.c ****   float altitude = 0;
 2334              		.loc 1 303 3 view .LVU596
ARM GAS  /tmp/cc0rXBD8.s 			page 83


 304:Core/Src/main.c ****   flash_config* logsConfig = get_logs_config();
 2335              		.loc 1 304 3 view .LVU597
 305:Core/Src/main.c **** 
 2336              		.loc 1 305 3 view .LVU598
 305:Core/Src/main.c **** 
 2337              		.loc 1 305 30 is_stmt 0 view .LVU599
 2338 00f6 FFF7FEFF 		bl	get_logs_config
 2339              	.LVL216:
 307:Core/Src/main.c ****   /* USER CODE END 2 */
 2340              		.loc 1 307 3 is_stmt 1 view .LVU600
 304:Core/Src/main.c ****   flash_config* logsConfig = get_logs_config();
 2341              		.loc 1 304 9 is_stmt 0 view .LVU601
 2342 00fa 9FED488A 		vldr.32	s16, .L173+44
 303:Core/Src/main.c ****   float altitude = 0;
 2343              		.loc 1 303 9 view .LVU602
 2344 00fe F0EE488A 		vmov.f32	s17, s16
 302:Core/Src/main.c ****   float verticalVelocity = 0;
 2345              		.loc 1 302 9 view .LVU603
 2346 0102 B0EE48AA 		vmov.f32	s20, s16
 300:Core/Src/main.c ****   float VBatt;
 2347              		.loc 1 300 8 view .LVU604
 2348 0106 4FF0000A 		mov	r10, #0
 2349 010a 9FE0     		b	.L153
 2350              	.LVL217:
 2351              	.L170:
 2352              	.LBB22:
 2353              	.LBB23:
 329:Core/Src/main.c **** 		if(altitude > apogee)
 2354              		.loc 1 329 3 is_stmt 1 view .LVU605
 329:Core/Src/main.c **** 		if(altitude > apogee)
 2355              		.loc 1 329 14 is_stmt 0 view .LVU606
 2356 010c FFF7FEFF 		bl	calcAltitude
 2357              	.LVL218:
 329:Core/Src/main.c **** 		if(altitude > apogee)
 2358              		.loc 1 329 45 view .LVU607
 2359 0110 404B     		ldr	r3, .L173+36
 2360 0112 D3ED007A 		vldr.32	s15, [r3]
 329:Core/Src/main.c **** 		if(altitude > apogee)
 2361              		.loc 1 329 12 view .LVU608
 2362 0116 30EE678A 		vsub.f32	s16, s0, s15
 2363              	.LVL219:
 330:Core/Src/main.c **** 			apogee = altitude;
 2364              		.loc 1 330 3 is_stmt 1 view .LVU609
 330:Core/Src/main.c **** 			apogee = altitude;
 2365              		.loc 1 330 15 is_stmt 0 view .LVU610
 2366 011a 414B     		ldr	r3, .L173+48
 2367 011c D3ED007A 		vldr.32	s15, [r3]
 330:Core/Src/main.c **** 			apogee = altitude;
 2368              		.loc 1 330 5 view .LVU611
 2369 0120 F4EEC87A 		vcmpe.f32	s15, s16
 2370 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2371 0128 01D5     		bpl	.L139
 331:Core/Src/main.c **** 
 2372              		.loc 1 331 4 is_stmt 1 view .LVU612
 331:Core/Src/main.c **** 
 2373              		.loc 1 331 11 is_stmt 0 view .LVU613
 2374 012a 83ED008A 		vstr.32	s16, [r3]
ARM GAS  /tmp/cc0rXBD8.s 			page 84


 2375              	.L139:
 333:Core/Src/main.c **** 		if(deltaT != 0)
 2376              		.loc 1 333 3 is_stmt 1 view .LVU614
 333:Core/Src/main.c **** 		if(deltaT != 0)
 2377              		.loc 1 333 28 is_stmt 0 view .LVU615
 2378 012e 139B     		ldr	r3, [sp, #76]
 2379 0130 A8EB0303 		sub	r3, r8, r3
 2380 0134 07EE903A 		vmov	s15, r3	@ int
 333:Core/Src/main.c **** 		if(deltaT != 0)
 2381              		.loc 1 333 9 view .LVU616
 2382 0138 F8EE677A 		vcvt.f32.u32	s15, s15
 2383              	.LVL220:
 334:Core/Src/main.c **** 			verticalVelocity = (altitude - lastAltitude) / (deltaT / 1000);
 2384              		.loc 1 334 3 is_stmt 1 view .LVU617
 334:Core/Src/main.c **** 			verticalVelocity = (altitude - lastAltitude) / (deltaT / 1000);
 2385              		.loc 1 334 5 is_stmt 0 view .LVU618
 2386 013c F5EE407A 		vcmp.f32	s15, #0
 2387 0140 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2388 0144 07D0     		beq	.L141
 335:Core/Src/main.c **** 
 2389              		.loc 1 335 4 is_stmt 1 view .LVU619
 335:Core/Src/main.c **** 
 2390              		.loc 1 335 33 is_stmt 0 view .LVU620
 2391 0146 38EE4AAA 		vsub.f32	s20, s16, s20
 2392              	.LVL221:
 335:Core/Src/main.c **** 
 2393              		.loc 1 335 59 view .LVU621
 2394 014a DFED366A 		vldr.32	s13, .L173+52
 2395 014e 87EEA67A 		vdiv.f32	s14, s15, s13
 335:Core/Src/main.c **** 
 2396              		.loc 1 335 21 view .LVU622
 2397 0152 CAEE078A 		vdiv.f32	s17, s20, s14
 2398              	.LVL222:
 2399              	.L141:
 337:Core/Src/main.c **** 		lastTimestamp = timestamp;
 2400              		.loc 1 337 3 is_stmt 1 view .LVU623
 338:Core/Src/main.c **** 
 2401              		.loc 1 338 3 view .LVU624
 340:Core/Src/main.c **** 			rState = COLIRONE_SHUTES_DEPLOYED;
 2402              		.loc 1 340 3 view .LVU625
 340:Core/Src/main.c **** 			rState = COLIRONE_SHUTES_DEPLOYED;
 2403              		.loc 1 340 5 is_stmt 0 view .LVU626
 2404 0156 F8EE087A 		vmov.f32	s15, #-3.0e+0
 2405              	.LVL223:
 340:Core/Src/main.c **** 			rState = COLIRONE_SHUTES_DEPLOYED;
 2406              		.loc 1 340 5 view .LVU627
 2407 015a F4EEE78A 		vcmpe.f32	s17, s15
 2408 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2409 0162 24D5     		bpl	.L164
 340:Core/Src/main.c **** 			rState = COLIRONE_SHUTES_DEPLOYED;
 2410              		.loc 1 340 28 discriminator 1 view .LVU628
 2411 0164 F1EE047A 		vmov.f32	s15, #5.0e+0
 2412 0168 B4EEE78A 		vcmpe.f32	s16, s15
 2413 016c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2414 0170 22DD     		ble	.L165
 340:Core/Src/main.c **** 			rState = COLIRONE_SHUTES_DEPLOYED;
 2415              		.loc 1 340 44 discriminator 2 view .LVU629
ARM GAS  /tmp/cc0rXBD8.s 			page 85


 2416 0172 DFED2D7A 		vldr.32	s15, .L173+56
 2417 0176 B4EEE78A 		vcmpe.f32	s16, s15
 2418 017a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2419 017e 20D5     		bpl	.L166
 340:Core/Src/main.c **** 			rState = COLIRONE_SHUTES_DEPLOYED;
 2420              		.loc 1 340 73 discriminator 3 view .LVU630
 2421 0180 254B     		ldr	r3, .L173+40
 2422              	.LVL224:
 340:Core/Src/main.c **** 			rState = COLIRONE_SHUTES_DEPLOYED;
 2423              		.loc 1 340 73 discriminator 3 view .LVU631
 2424 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 340:Core/Src/main.c **** 			rState = COLIRONE_SHUTES_DEPLOYED;
 2425              		.loc 1 340 62 discriminator 3 view .LVU632
 2426 0184 022B     		cmp	r3, #2
 2427 0186 06D0     		beq	.L145
 340:Core/Src/main.c **** 			rState = COLIRONE_SHUTES_DEPLOYED;
 2428              		.loc 1 340 92 discriminator 4 view .LVU633
 2429 0188 102B     		cmp	r3, #16
 2430 018a 04D0     		beq	.L145
 337:Core/Src/main.c **** 		lastTimestamp = timestamp;
 2431              		.loc 1 337 16 view .LVU634
 2432 018c B0EE48AA 		vmov.f32	s20, s16
 338:Core/Src/main.c **** 
 2433              		.loc 1 338 17 view .LVU635
 2434 0190 CDF84C80 		str	r8, [sp, #76]
 2435              	.LVL225:
 338:Core/Src/main.c **** 
 2436              		.loc 1 338 17 view .LVU636
 2437 0194 9DE0     		b	.L137
 2438              	.LVL226:
 2439              	.L145:
 341:Core/Src/main.c **** 			ParseReceivedCommand("s 8 90", 32);
 2440              		.loc 1 341 4 is_stmt 1 view .LVU637
 341:Core/Src/main.c **** 			ParseReceivedCommand("s 8 90", 32);
 2441              		.loc 1 341 11 is_stmt 0 view .LVU638
 2442 0196 204B     		ldr	r3, .L173+40
 2443 0198 1022     		movs	r2, #16
 2444 019a 1A70     		strb	r2, [r3]
 342:Core/Src/main.c **** 		}
 2445              		.loc 1 342 4 is_stmt 1 view .LVU639
 2446 019c 2021     		movs	r1, #32
 2447 019e 2348     		ldr	r0, .L173+60
 2448 01a0 FFF7FEFF 		bl	ParseReceivedCommand
 2449              	.LVL227:
 337:Core/Src/main.c **** 		lastTimestamp = timestamp;
 2450              		.loc 1 337 16 is_stmt 0 view .LVU640
 2451 01a4 B0EE48AA 		vmov.f32	s20, s16
 338:Core/Src/main.c **** 
 2452              		.loc 1 338 17 view .LVU641
 2453 01a8 CDF84C80 		str	r8, [sp, #76]
 2454              	.LVL228:
 338:Core/Src/main.c **** 
 2455              		.loc 1 338 17 view .LVU642
 2456 01ac 91E0     		b	.L137
 2457              	.LVL229:
 2458              	.L164:
 337:Core/Src/main.c **** 		lastTimestamp = timestamp;
ARM GAS  /tmp/cc0rXBD8.s 			page 86


 2459              		.loc 1 337 16 view .LVU643
 2460 01ae B0EE48AA 		vmov.f32	s20, s16
 338:Core/Src/main.c **** 
 2461              		.loc 1 338 17 view .LVU644
 2462 01b2 CDF84C80 		str	r8, [sp, #76]
 2463 01b6 8CE0     		b	.L137
 2464              	.L165:
 337:Core/Src/main.c **** 		lastTimestamp = timestamp;
 2465              		.loc 1 337 16 view .LVU645
 2466 01b8 B0EE48AA 		vmov.f32	s20, s16
 338:Core/Src/main.c **** 
 2467              		.loc 1 338 17 view .LVU646
 2468 01bc CDF84C80 		str	r8, [sp, #76]
 2469 01c0 87E0     		b	.L137
 2470              	.L166:
 337:Core/Src/main.c **** 		lastTimestamp = timestamp;
 2471              		.loc 1 337 16 view .LVU647
 2472 01c2 B0EE48AA 		vmov.f32	s20, s16
 338:Core/Src/main.c **** 
 2473              		.loc 1 338 17 view .LVU648
 2474 01c6 CDF84C80 		str	r8, [sp, #76]
 2475 01ca 82E0     		b	.L137
 2476              	.LVL230:
 2477              	.L171:
 338:Core/Src/main.c **** 
 2478              		.loc 1 338 17 view .LVU649
 2479              	.LBE23:
 354:Core/Src/main.c **** 	if(myData.latSide == 'S')
 2480              		.loc 1 354 3 is_stmt 1 view .LVU650
 354:Core/Src/main.c **** 	if(myData.latSide == 'S')
 2481              		.loc 1 354 13 is_stmt 0 view .LVU651
 2482 01cc 0E94     		str	r4, [sp, #56]
 2483 01ce 05F10043 		add	r3, r5, #-2147483648
 2484 01d2 0F93     		str	r3, [sp, #60]
 2485 01d4 DDE90E45 		ldrd	r4, [sp, #56]
 2486              	.LVL231:
 354:Core/Src/main.c **** 	if(myData.latSide == 'S')
 2487              		.loc 1 354 13 view .LVU652
 2488 01d8 98E0     		b	.L148
 2489              	.L172:
 356:Core/Src/main.c **** 	//ParseReceivedCommand("s 8 90", 32);
 2490              		.loc 1 356 3 is_stmt 1 view .LVU653
 356:Core/Src/main.c **** 	//ParseReceivedCommand("s 8 90", 32);
 2491              		.loc 1 356 12 is_stmt 0 view .LVU654
 2492 01da 8DED109A 		vstr.32	s18, [sp, #64]	@ int
 2493 01de 19EE903A 		vmov	r3, s19	@ int
 2494 01e2 03F10043 		add	r3, r3, #-2147483648
 2495 01e6 1193     		str	r3, [sp, #68]
 2496 01e8 9DED109B 		vldr.64	d9, [sp, #64]
 2497              	.LVL232:
 356:Core/Src/main.c **** 	//ParseReceivedCommand("s 8 90", 32);
 2498              		.loc 1 356 12 view .LVU655
 2499 01ec 93E0     		b	.L149
 2500              	.L174:
 2501 01ee 00BF     		.align	2
 2502              	.L173:
 2503 01f0 00000000 		.word	RxBuffer
ARM GAS  /tmp/cc0rXBD8.s 			page 87


 2504 01f4 00000000 		.word	huart2
 2505 01f8 00000000 		.word	hdma_usart2_rx
 2506 01fc 00100240 		.word	1073876992
 2507 0200 00000000 		.word	hspi1
 2508 0204 00000000 		.word	RxAddress
 2509 0208 00000000 		.word	TxAddress
 2510 020c 00000000 		.word	hi2c2
 2511 0210 00000000 		.word	bmpData
 2512 0214 00000000 		.word	zeroAltitude
 2513 0218 00000000 		.word	rState
 2514 021c 00000000 		.word	0
 2515 0220 00000000 		.word	apogee
 2516 0224 00007A44 		.word	1148846080
 2517 0228 00001643 		.word	1125515264
 2518 022c 00000000 		.word	.LC20
 2519              	.L150:
 419:Core/Src/main.c **** 		{
 2520              		.loc 1 419 3 is_stmt 1 view .LVU656
 419:Core/Src/main.c **** 		{
 2521              		.loc 1 419 7 is_stmt 0 view .LVU657
 2522 0230 FFF7FEFF 		bl	isDataAvailable
 2523              	.LVL233:
 419:Core/Src/main.c **** 		{
 2524              		.loc 1 419 6 view .LVU658
 2525 0234 0128     		cmp	r0, #1
 2526 0236 00F08981 		beq	.L168
 427:Core/Src/main.c **** 			rxMode = false;
 2527              		.loc 1 427 8 is_stmt 1 view .LVU659
 427:Core/Src/main.c **** 			rxMode = false;
 2528              		.loc 1 427 21 is_stmt 0 view .LVU660
 2529 023a A8EB0B08 		sub	r8, r8, fp
 2530              	.LVL234:
 427:Core/Src/main.c **** 			rxMode = false;
 2531              		.loc 1 427 10 view .LVU661
 2532 023e B8F1FA0F 		cmp	r8, #250
 2533 0242 00F29781 		bhi	.L169
 2534              	.LVL235:
 2535              	.L151:
 433:Core/Src/main.c ****   }
 2536              		.loc 1 433 2 is_stmt 1 discriminator 1 view .LVU662
 2537 0246 4620     		movs	r0, #70
 2538 0248 FFF7FEFF 		bl	HAL_Delay
 2539              	.LVL236:
 2540              	.LBE22:
 312:Core/Src/main.c ****   {
 2541              		.loc 1 312 9 discriminator 1 view .LVU663
 2542              	.L153:
 312:Core/Src/main.c ****   {
 2543              		.loc 1 312 3 view .LVU664
 2544              	.LBB24:
 318:Core/Src/main.c **** 	bno055_vector_t orientation = bno055_getVectorEuler();
 2545              		.loc 1 318 2 view .LVU665
 318:Core/Src/main.c **** 	bno055_vector_t orientation = bno055_getVectorEuler();
 2546              		.loc 1 318 23 is_stmt 0 view .LVU666
 2547 024c FFF7FEFF 		bl	HAL_GetTick
 2548              	.LVL237:
 2549 0250 8046     		mov	r8, r0
ARM GAS  /tmp/cc0rXBD8.s 			page 88


 2550              	.LVL238:
 319:Core/Src/main.c **** 	bno055_vector_t linearAccel = bno055_getVectorLinearAccel();
 2551              		.loc 1 319 2 is_stmt 1 view .LVU667
 319:Core/Src/main.c **** 	bno055_vector_t linearAccel = bno055_getVectorLinearAccel();
 2552              		.loc 1 319 32 is_stmt 0 view .LVU668
 2553 0252 FFF7FEFF 		bl	bno055_getVectorEuler
 2554              	.LVL239:
 319:Core/Src/main.c **** 	bno055_vector_t linearAccel = bno055_getVectorLinearAccel();
 2555              		.loc 1 319 32 view .LVU669
 2556 0256 8DED140B 		vstr.64	d0, [sp, #80]
 2557 025a 8DED161B 		vstr.64	d1, [sp, #88]
 2558 025e 8DED182B 		vstr.64	d2, [sp, #96]
 2559 0262 8DED1A3B 		vstr.64	d3, [sp, #104]
 320:Core/Src/main.c **** 	bno055_vector_t quaternion = bno055_getVectorQuaternion();
 2560              		.loc 1 320 2 is_stmt 1 view .LVU670
 320:Core/Src/main.c **** 	bno055_vector_t quaternion = bno055_getVectorQuaternion();
 2561              		.loc 1 320 32 is_stmt 0 view .LVU671
 2562 0266 FFF7FEFF 		bl	bno055_getVectorLinearAccel
 2563              	.LVL240:
 2564 026a 8DED1C0B 		vstr.64	d0, [sp, #112]
 2565 026e 8DED1E1B 		vstr.64	d1, [sp, #120]
 2566 0272 8DED202B 		vstr.64	d2, [sp, #128]
 2567 0276 8DED223B 		vstr.64	d3, [sp, #136]
 321:Core/Src/main.c **** 	bno055_vector_t gyro = bno055_getVectorGyroscope();
 2568              		.loc 1 321 2 is_stmt 1 view .LVU672
 321:Core/Src/main.c **** 	bno055_vector_t gyro = bno055_getVectorGyroscope();
 2569              		.loc 1 321 31 is_stmt 0 view .LVU673
 2570 027a FFF7FEFF 		bl	bno055_getVectorQuaternion
 2571              	.LVL241:
 2572 027e 8DED240B 		vstr.64	d0, [sp, #144]
 2573 0282 8DED261B 		vstr.64	d1, [sp, #152]
 2574 0286 8DED282B 		vstr.64	d2, [sp, #160]
 2575 028a 8DED2A3B 		vstr.64	d3, [sp, #168]
 322:Core/Src/main.c **** 	logsConfig = get_logs_config();
 2576              		.loc 1 322 2 is_stmt 1 view .LVU674
 322:Core/Src/main.c **** 	logsConfig = get_logs_config();
 2577              		.loc 1 322 25 is_stmt 0 view .LVU675
 2578 028e FFF7FEFF 		bl	bno055_getVectorGyroscope
 2579              	.LVL242:
 2580 0292 8DED2C0B 		vstr.64	d0, [sp, #176]
 2581 0296 8DED2E1B 		vstr.64	d1, [sp, #184]
 2582 029a 8DED302B 		vstr.64	d2, [sp, #192]
 2583 029e 8DED323B 		vstr.64	d3, [sp, #200]
 323:Core/Src/main.c **** 
 2584              		.loc 1 323 2 is_stmt 1 view .LVU676
 323:Core/Src/main.c **** 
 2585              		.loc 1 323 15 is_stmt 0 view .LVU677
 2586 02a2 FFF7FEFF 		bl	get_logs_config
 2587              	.LVL243:
 2588 02a6 8146     		mov	r9, r0
 2589              	.LVL244:
 325:Core/Src/main.c **** 	int8_t err = getSensorData(&bmpData);
 2590              		.loc 1 325 2 is_stmt 1 view .LVU678
 2591 02a8 B54D     		ldr	r5, .L175
 2592 02aa 2846     		mov	r0, r5
 2593              	.LVL245:
 325:Core/Src/main.c **** 	int8_t err = getSensorData(&bmpData);
ARM GAS  /tmp/cc0rXBD8.s 			page 89


 2594              		.loc 1 325 2 is_stmt 0 view .LVU679
 2595 02ac FFF7FEFF 		bl	HAL_SPI_Init
 2596              	.LVL246:
 326:Core/Src/main.c **** 	HAL_SPI_DeInit(&hspi1);
 2597              		.loc 1 326 2 is_stmt 1 view .LVU680
 326:Core/Src/main.c **** 	HAL_SPI_DeInit(&hspi1);
 2598              		.loc 1 326 15 is_stmt 0 view .LVU681
 2599 02b0 B44C     		ldr	r4, .L175+4
 2600 02b2 2046     		mov	r0, r4
 2601 02b4 FFF7FEFF 		bl	getSensorData
 2602              	.LVL247:
 327:Core/Src/main.c **** 	if(bmpData.pressure > 10000){
 2603              		.loc 1 327 2 is_stmt 1 view .LVU682
 2604 02b8 2846     		mov	r0, r5
 2605 02ba FFF7FEFF 		bl	HAL_SPI_DeInit
 2606              	.LVL248:
 328:Core/Src/main.c **** 		altitude = calcAltitude(bmpData.pressure) - zeroAltitude;
 2607              		.loc 1 328 2 view .LVU683
 328:Core/Src/main.c **** 		altitude = calcAltitude(bmpData.pressure) - zeroAltitude;
 2608              		.loc 1 328 12 is_stmt 0 view .LVU684
 2609 02be 94ED000A 		vldr.32	s0, [r4]
 328:Core/Src/main.c **** 		altitude = calcAltitude(bmpData.pressure) - zeroAltitude;
 2610              		.loc 1 328 4 view .LVU685
 2611 02c2 DFEDB17A 		vldr.32	s15, .L175+8
 2612 02c6 B4EEE70A 		vcmpe.f32	s0, s15
 2613 02ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2614 02ce 3FF71DAF 		bgt	.L170
 2615              	.L137:
 346:Core/Src/main.c **** 
 2616              		.loc 1 346 2 is_stmt 1 view .LVU686
 2617              	.LVL249:
 348:Core/Src/main.c **** 	latitude = myData.latitude;
 2618              		.loc 1 348 2 view .LVU687
 2619 02d2 AE4C     		ldr	r4, .L175+12
 2620 02d4 AE49     		ldr	r1, .L175+16
 2621 02d6 2046     		mov	r0, r4
 2622 02d8 FFF7FEFF 		bl	nmea_parse
 2623              	.LVL250:
 349:Core/Src/main.c **** 	longitude = myData.longitude;
 2624              		.loc 1 349 2 view .LVU688
 349:Core/Src/main.c **** 	longitude = myData.longitude;
 2625              		.loc 1 349 11 is_stmt 0 view .LVU689
 2626 02dc 94ED009B 		vldr.64	d9, [r4]
 2627              	.LVL251:
 350:Core/Src/main.c **** 	if(longitude > 1000)
 2628              		.loc 1 350 2 is_stmt 1 view .LVU690
 350:Core/Src/main.c **** 	if(longitude > 1000)
 2629              		.loc 1 350 12 is_stmt 0 view .LVU691
 2630 02e0 D4E90445 		ldrd	r4, [r4, #16]
 2631              	.LVL252:
 351:Core/Src/main.c **** 		longitude = longitude / 1000;
 2632              		.loc 1 351 2 is_stmt 1 view .LVU692
 351:Core/Src/main.c **** 		longitude = longitude / 1000;
 2633              		.loc 1 351 4 is_stmt 0 view .LVU693
 2634 02e4 0022     		movs	r2, #0
 2635 02e6 AB4B     		ldr	r3, .L175+20
 2636 02e8 2046     		mov	r0, r4
ARM GAS  /tmp/cc0rXBD8.s 			page 90


 2637 02ea 2946     		mov	r1, r5
 2638 02ec FFF7FEFF 		bl	__aeabi_dcmpgt
 2639              	.LVL253:
 2640 02f0 38B1     		cbz	r0, .L146
 352:Core/Src/main.c **** 	if(myData.lonSide == 'W')
 2641              		.loc 1 352 3 is_stmt 1 view .LVU694
 352:Core/Src/main.c **** 	if(myData.lonSide == 'W')
 2642              		.loc 1 352 13 is_stmt 0 view .LVU695
 2643 02f2 0022     		movs	r2, #0
 2644 02f4 A74B     		ldr	r3, .L175+20
 2645 02f6 2046     		mov	r0, r4
 2646 02f8 2946     		mov	r1, r5
 2647 02fa FFF7FEFF 		bl	__aeabi_ddiv
 2648              	.LVL254:
 2649 02fe 0446     		mov	r4, r0
 2650              	.LVL255:
 352:Core/Src/main.c **** 	if(myData.lonSide == 'W')
 2651              		.loc 1 352 13 view .LVU696
 2652 0300 0D46     		mov	r5, r1
 2653              	.LVL256:
 2654              	.L146:
 353:Core/Src/main.c **** 		longitude = -longitude;
 2655              		.loc 1 353 2 is_stmt 1 view .LVU697
 353:Core/Src/main.c **** 		longitude = -longitude;
 2656              		.loc 1 353 11 is_stmt 0 view .LVU698
 2657 0302 A24B     		ldr	r3, .L175+12
 2658 0304 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 353:Core/Src/main.c **** 		longitude = -longitude;
 2659              		.loc 1 353 4 view .LVU699
 2660 0306 572B     		cmp	r3, #87
 2661 0308 3FF460AF 		beq	.L171
 2662              	.L148:
 355:Core/Src/main.c **** 		latitude = -latitude;
 2663              		.loc 1 355 2 is_stmt 1 view .LVU700
 355:Core/Src/main.c **** 		latitude = -latitude;
 2664              		.loc 1 355 11 is_stmt 0 view .LVU701
 2665 030c 9F4B     		ldr	r3, .L175+12
 2666 030e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 355:Core/Src/main.c **** 		latitude = -latitude;
 2667              		.loc 1 355 4 view .LVU702
 2668 0310 532B     		cmp	r3, #83
 2669 0312 3FF462AF 		beq	.L172
 2670              	.L149:
 358:Core/Src/main.c **** 	if(!rxMode){
 2671              		.loc 1 358 2 is_stmt 1 view .LVU703
 2672 0316 0A20     		movs	r0, #10
 2673 0318 FFF7FEFF 		bl	HAL_Delay
 2674              	.LVL257:
 359:Core/Src/main.c **** 		NRF24_TxMode();
 2675              		.loc 1 359 2 view .LVU704
 359:Core/Src/main.c **** 		NRF24_TxMode();
 2676              		.loc 1 359 4 is_stmt 0 view .LVU705
 2677 031c BAF1000F 		cmp	r10, #0
 2678 0320 86D1     		bne	.L150
 360:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 2679              		.loc 1 360 3 is_stmt 1 view .LVU706
 2680 0322 FFF7FEFF 		bl	NRF24_TxMode
ARM GAS  /tmp/cc0rXBD8.s 			page 91


 2681              	.LVL258:
 361:Core/Src/main.c **** 		sprintf(TxData, "p %d %f %f %d", timestamp, latitude, longitude, myData.satelliteCount);
 2682              		.loc 1 361 3 view .LVU707
 2683 0326 9C4E     		ldr	r6, .L175+24
 2684 0328 2027     		movs	r7, #32
 2685 032a 3A46     		mov	r2, r7
 2686 032c 0021     		movs	r1, #0
 2687 032e 3046     		mov	r0, r6
 2688 0330 FFF7FEFF 		bl	memset
 2689              	.LVL259:
 362:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2690              		.loc 1 362 3 view .LVU708
 2691 0334 954B     		ldr	r3, .L175+12
 2692 0336 5B6A     		ldr	r3, [r3, #36]
 2693 0338 0493     		str	r3, [sp, #16]
 2694 033a CDE90245 		strd	r4, [sp, #8]
 2695 033e 8DED009B 		vstr.64	d9, [sp]
 2696 0342 4246     		mov	r2, r8
 2697 0344 9549     		ldr	r1, .L175+28
 2698 0346 3046     		mov	r0, r6
 2699 0348 FFF7FEFF 		bl	sprintf
 2700              	.LVL260:
 363:Core/Src/main.c **** 		LogData(TxData);
 2701              		.loc 1 363 3 view .LVU709
 2702 034c 3046     		mov	r0, r6
 2703 034e FFF7FEFF 		bl	NRF24_Transmit
 2704              	.LVL261:
 364:Core/Src/main.c **** 
 2705              		.loc 1 364 3 view .LVU710
 2706 0352 3046     		mov	r0, r6
 2707 0354 FFF7FEFF 		bl	LogData
 2708              	.LVL262:
 366:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 2709              		.loc 1 366 3 view .LVU711
 2710 0358 0F20     		movs	r0, #15
 2711 035a FFF7FEFF 		bl	HAL_Delay
 2712              	.LVL263:
 367:Core/Src/main.c **** 		sprintf(TxData, "h %d %.2f", timestamp, altitude);
 2713              		.loc 1 367 3 view .LVU712
 2714 035e 3A46     		mov	r2, r7
 2715 0360 0021     		movs	r1, #0
 2716 0362 3046     		mov	r0, r6
 2717 0364 FFF7FEFF 		bl	memset
 2718              	.LVL264:
 368:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2719              		.loc 1 368 3 view .LVU713
 2720 0368 18EE100A 		vmov	r0, s16
 2721 036c FFF7FEFF 		bl	__aeabi_f2d
 2722              	.LVL265:
 2723 0370 CDE90001 		strd	r0, [sp]
 2724 0374 4246     		mov	r2, r8
 2725 0376 8A49     		ldr	r1, .L175+32
 2726 0378 3046     		mov	r0, r6
 2727 037a FFF7FEFF 		bl	sprintf
 2728              	.LVL266:
 369:Core/Src/main.c **** 		LogData(TxData);
 2729              		.loc 1 369 3 view .LVU714
ARM GAS  /tmp/cc0rXBD8.s 			page 92


 2730 037e 3046     		mov	r0, r6
 2731 0380 FFF7FEFF 		bl	NRF24_Transmit
 2732              	.LVL267:
 370:Core/Src/main.c **** 
 2733              		.loc 1 370 3 view .LVU715
 2734 0384 3046     		mov	r0, r6
 2735 0386 FFF7FEFF 		bl	LogData
 2736              	.LVL268:
 372:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 2737              		.loc 1 372 3 view .LVU716
 2738 038a 0F20     		movs	r0, #15
 2739 038c FFF7FEFF 		bl	HAL_Delay
 2740              	.LVL269:
 373:Core/Src/main.c **** 		sprintf(TxData, "v %d %.2f", timestamp, verticalVelocity);
 2741              		.loc 1 373 3 view .LVU717
 2742 0390 3A46     		mov	r2, r7
 2743 0392 0021     		movs	r1, #0
 2744 0394 3046     		mov	r0, r6
 2745 0396 FFF7FEFF 		bl	memset
 2746              	.LVL270:
 374:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2747              		.loc 1 374 3 view .LVU718
 2748 039a 18EE900A 		vmov	r0, s17
 2749 039e FFF7FEFF 		bl	__aeabi_f2d
 2750              	.LVL271:
 2751 03a2 CDE90001 		strd	r0, [sp]
 2752 03a6 4246     		mov	r2, r8
 2753 03a8 7E49     		ldr	r1, .L175+36
 2754 03aa 3046     		mov	r0, r6
 2755 03ac FFF7FEFF 		bl	sprintf
 2756              	.LVL272:
 375:Core/Src/main.c **** 		LogData(TxData);
 2757              		.loc 1 375 3 view .LVU719
 2758 03b0 3046     		mov	r0, r6
 2759 03b2 FFF7FEFF 		bl	NRF24_Transmit
 2760              	.LVL273:
 376:Core/Src/main.c **** 
 2761              		.loc 1 376 3 view .LVU720
 2762 03b6 3046     		mov	r0, r6
 2763 03b8 FFF7FEFF 		bl	LogData
 2764              	.LVL274:
 378:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 2765              		.loc 1 378 3 view .LVU721
 2766 03bc 0F20     		movs	r0, #15
 2767 03be FFF7FEFF 		bl	HAL_Delay
 2768              	.LVL275:
 379:Core/Src/main.c **** 		sprintf(TxData, "o %d %.2f %.2f %.2f", timestamp, -orientation.x, -orientation.y, -orientation.z)
 2769              		.loc 1 379 3 view .LVU722
 2770 03c2 3A46     		mov	r2, r7
 2771 03c4 0021     		movs	r1, #0
 2772 03c6 3046     		mov	r0, r6
 2773 03c8 FFF7FEFF 		bl	memset
 2774              	.LVL276:
 380:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2775              		.loc 1 380 3 view .LVU723
 380:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2776              		.loc 1 380 65 is_stmt 0 view .LVU724
ARM GAS  /tmp/cc0rXBD8.s 			page 93


 2777 03cc DDE91645 		ldrd	r4, [sp, #88]
 2778              	.LVL277:
 380:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2779              		.loc 1 380 81 view .LVU725
 2780 03d0 DDE91823 		ldrd	r2, [sp, #96]
 380:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2781              		.loc 1 380 97 view .LVU726
 2782 03d4 DDE91A01 		ldrd	r0, [sp, #104]
 380:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2783              		.loc 1 380 3 view .LVU727
 2784 03d8 0890     		str	r0, [sp, #32]
 2785 03da 01F10041 		add	r1, r1, #-2147483648
 2786 03de 0991     		str	r1, [sp, #36]
 2787 03e0 9DED087B 		vldr.64	d7, [sp, #32]
 2788 03e4 8DED047B 		vstr.64	d7, [sp, #16]
 2789 03e8 0A92     		str	r2, [sp, #40]
 2790 03ea 03F10043 		add	r3, r3, #-2147483648
 2791 03ee 0B93     		str	r3, [sp, #44]
 2792 03f0 9DED0A7B 		vldr.64	d7, [sp, #40]
 2793 03f4 8DED027B 		vstr.64	d7, [sp, #8]
 2794 03f8 0C94     		str	r4, [sp, #48]
 2795 03fa 05F10043 		add	r3, r5, #-2147483648
 2796 03fe 0D93     		str	r3, [sp, #52]
 2797 0400 9DED0C7B 		vldr.64	d7, [sp, #48]
 2798 0404 8DED007B 		vstr.64	d7, [sp]
 2799 0408 4246     		mov	r2, r8
 2800 040a 6749     		ldr	r1, .L175+40
 2801 040c 3046     		mov	r0, r6
 2802 040e FFF7FEFF 		bl	sprintf
 2803              	.LVL278:
 381:Core/Src/main.c **** 		LogData(TxData);
 2804              		.loc 1 381 3 is_stmt 1 view .LVU728
 2805 0412 3046     		mov	r0, r6
 2806 0414 FFF7FEFF 		bl	NRF24_Transmit
 2807              	.LVL279:
 382:Core/Src/main.c **** 
 2808              		.loc 1 382 3 view .LVU729
 2809 0418 3046     		mov	r0, r6
 2810 041a FFF7FEFF 		bl	LogData
 2811              	.LVL280:
 384:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 2812              		.loc 1 384 3 view .LVU730
 2813 041e 0F20     		movs	r0, #15
 2814 0420 FFF7FEFF 		bl	HAL_Delay
 2815              	.LVL281:
 385:Core/Src/main.c **** 		sprintf(TxData, "g %d %.2f %.2f %.2f", timestamp, gyro.x, gyro.y, gyro.z);
 2816              		.loc 1 385 3 view .LVU731
 2817 0424 3A46     		mov	r2, r7
 2818 0426 0021     		movs	r1, #0
 2819 0428 3046     		mov	r0, r6
 2820 042a FFF7FEFF 		bl	memset
 2821              	.LVL282:
 386:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2822              		.loc 1 386 3 view .LVU732
 2823 042e DDE93223 		ldrd	r2, [sp, #200]
 2824 0432 CDE90423 		strd	r2, [sp, #16]
 2825 0436 DDE93023 		ldrd	r2, [sp, #192]
ARM GAS  /tmp/cc0rXBD8.s 			page 94


 2826 043a CDE90223 		strd	r2, [sp, #8]
 2827 043e DDE92E23 		ldrd	r2, [sp, #184]
 2828 0442 CDE90023 		strd	r2, [sp]
 2829 0446 4246     		mov	r2, r8
 2830 0448 5849     		ldr	r1, .L175+44
 2831 044a 3046     		mov	r0, r6
 2832 044c FFF7FEFF 		bl	sprintf
 2833              	.LVL283:
 387:Core/Src/main.c **** 		LogData(TxData);
 2834              		.loc 1 387 3 view .LVU733
 2835 0450 3046     		mov	r0, r6
 2836 0452 FFF7FEFF 		bl	NRF24_Transmit
 2837              	.LVL284:
 388:Core/Src/main.c **** 
 2838              		.loc 1 388 3 view .LVU734
 2839 0456 3046     		mov	r0, r6
 2840 0458 FFF7FEFF 		bl	LogData
 2841              	.LVL285:
 390:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 2842              		.loc 1 390 3 view .LVU735
 2843 045c 0F20     		movs	r0, #15
 2844 045e FFF7FEFF 		bl	HAL_Delay
 2845              	.LVL286:
 391:Core/Src/main.c **** 		sprintf(TxData, "a %d %.2f %.2f %.2f", timestamp, linearAccel.x, linearAccel.y, linearAccel.z);
 2846              		.loc 1 391 3 view .LVU736
 2847 0462 3A46     		mov	r2, r7
 2848 0464 0021     		movs	r1, #0
 2849 0466 3046     		mov	r0, r6
 2850 0468 FFF7FEFF 		bl	memset
 2851              	.LVL287:
 392:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2852              		.loc 1 392 3 view .LVU737
 2853 046c DDE92223 		ldrd	r2, [sp, #136]
 2854 0470 CDE90423 		strd	r2, [sp, #16]
 2855 0474 DDE92023 		ldrd	r2, [sp, #128]
 2856 0478 CDE90223 		strd	r2, [sp, #8]
 2857 047c DDE91E23 		ldrd	r2, [sp, #120]
 2858 0480 CDE90023 		strd	r2, [sp]
 2859 0484 4246     		mov	r2, r8
 2860 0486 4A49     		ldr	r1, .L175+48
 2861 0488 3046     		mov	r0, r6
 2862 048a FFF7FEFF 		bl	sprintf
 2863              	.LVL288:
 393:Core/Src/main.c **** 		LogData(TxData);
 2864              		.loc 1 393 3 view .LVU738
 2865 048e 3046     		mov	r0, r6
 2866 0490 FFF7FEFF 		bl	NRF24_Transmit
 2867              	.LVL289:
 394:Core/Src/main.c **** 
 2868              		.loc 1 394 3 view .LVU739
 2869 0494 3046     		mov	r0, r6
 2870 0496 FFF7FEFF 		bl	LogData
 2871              	.LVL290:
 396:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 2872              		.loc 1 396 3 view .LVU740
 2873 049a 0F20     		movs	r0, #15
 2874 049c FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/cc0rXBD8.s 			page 95


 2875              	.LVL291:
 397:Core/Src/main.c **** 		sprintf(TxData, "q %d %.2f %.2f %.2f %.2f", timestamp, quaternion.x, quaternion.y, quaternion.z, 
 2876              		.loc 1 397 3 view .LVU741
 2877 04a0 3A46     		mov	r2, r7
 2878 04a2 0021     		movs	r1, #0
 2879 04a4 3046     		mov	r0, r6
 2880 04a6 FFF7FEFF 		bl	memset
 2881              	.LVL292:
 398:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2882              		.loc 1 398 3 view .LVU742
 2883 04aa DDE92423 		ldrd	r2, [sp, #144]
 2884 04ae CDE90623 		strd	r2, [sp, #24]
 2885 04b2 DDE92A23 		ldrd	r2, [sp, #168]
 2886 04b6 CDE90423 		strd	r2, [sp, #16]
 2887 04ba DDE92823 		ldrd	r2, [sp, #160]
 2888 04be CDE90223 		strd	r2, [sp, #8]
 2889 04c2 DDE92623 		ldrd	r2, [sp, #152]
 2890 04c6 CDE90023 		strd	r2, [sp]
 2891 04ca 4246     		mov	r2, r8
 2892 04cc 3949     		ldr	r1, .L175+52
 2893 04ce 3046     		mov	r0, r6
 2894 04d0 FFF7FEFF 		bl	sprintf
 2895              	.LVL293:
 399:Core/Src/main.c **** 		LogData(TxData);
 2896              		.loc 1 399 3 view .LVU743
 2897 04d4 3046     		mov	r0, r6
 2898 04d6 FFF7FEFF 		bl	NRF24_Transmit
 2899              	.LVL294:
 400:Core/Src/main.c **** 
 2900              		.loc 1 400 3 view .LVU744
 2901 04da 3046     		mov	r0, r6
 2902 04dc FFF7FEFF 		bl	LogData
 2903              	.LVL295:
 402:Core/Src/main.c **** 		memset(&TxData, 0, sizeof(TxData));
 2904              		.loc 1 402 3 view .LVU745
 2905 04e0 0F20     		movs	r0, #15
 2906 04e2 FFF7FEFF 		bl	HAL_Delay
 2907              	.LVL296:
 403:Core/Src/main.c **** 		sprintf(TxData, "s %d %d %d %d", timestamp, write_logs, rState, logsConfig->last_log);
 2908              		.loc 1 403 3 view .LVU746
 2909 04e6 3A46     		mov	r2, r7
 2910 04e8 0021     		movs	r1, #0
 2911 04ea 3046     		mov	r0, r6
 2912 04ec FFF7FEFF 		bl	memset
 2913              	.LVL297:
 404:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2914              		.loc 1 404 3 view .LVU747
 404:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2915              		.loc 1 404 77 is_stmt 0 view .LVU748
 2916 04f0 99F88430 		ldrb	r3, [r9, #132]	@ zero_extendqisi2
 404:Core/Src/main.c **** 		NRF24_Transmit((uint8_t*)TxData);
 2917              		.loc 1 404 3 view .LVU749
 2918 04f4 0193     		str	r3, [sp, #4]
 2919 04f6 304B     		ldr	r3, .L175+56
 2920 04f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2921 04fa 0093     		str	r3, [sp]
 2922 04fc 2F4B     		ldr	r3, .L175+60
ARM GAS  /tmp/cc0rXBD8.s 			page 96


 2923 04fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2924 0500 4246     		mov	r2, r8
 2925 0502 2F49     		ldr	r1, .L175+64
 2926 0504 3046     		mov	r0, r6
 2927 0506 FFF7FEFF 		bl	sprintf
 2928              	.LVL298:
 405:Core/Src/main.c **** 		LogData(TxData);
 2929              		.loc 1 405 3 is_stmt 1 view .LVU750
 2930 050a 3046     		mov	r0, r6
 2931 050c FFF7FEFF 		bl	NRF24_Transmit
 2932              	.LVL299:
 406:Core/Src/main.c **** 
 2933              		.loc 1 406 3 view .LVU751
 2934 0510 3046     		mov	r0, r6
 2935 0512 FFF7FEFF 		bl	LogData
 2936              	.LVL300:
 408:Core/Src/main.c **** 		if(timestamp - lastRxMode > 500){
 2937              		.loc 1 408 3 view .LVU752
 2938 0516 0F20     		movs	r0, #15
 2939 0518 FFF7FEFF 		bl	HAL_Delay
 2940              	.LVL301:
 409:Core/Src/main.c **** 			memset(&TxData, 0, sizeof(TxData));
 2941              		.loc 1 409 3 view .LVU753
 409:Core/Src/main.c **** 			memset(&TxData, 0, sizeof(TxData));
 2942              		.loc 1 409 16 is_stmt 0 view .LVU754
 2943 051c A8EB0B03 		sub	r3, r8, fp
 409:Core/Src/main.c **** 			memset(&TxData, 0, sizeof(TxData));
 2944              		.loc 1 409 5 view .LVU755
 2945 0520 B3F5FA7F 		cmp	r3, #500
 2946 0524 7FF68FAE 		bls	.L151
 410:Core/Src/main.c **** 			sprintf(TxData, "c");
 2947              		.loc 1 410 4 is_stmt 1 view .LVU756
 2948 0528 3A46     		mov	r2, r7
 2949 052a 0021     		movs	r1, #0
 2950 052c 3046     		mov	r0, r6
 2951 052e FFF7FEFF 		bl	memset
 2952              	.LVL302:
 411:Core/Src/main.c **** 			NRF24_Transmit((uint8_t*)TxData);
 2953              		.loc 1 411 4 view .LVU757
 2954 0532 6323     		movs	r3, #99
 2955 0534 3380     		strh	r3, [r6]	@ movhi
 412:Core/Src/main.c **** 			rxMode = true;
 2956              		.loc 1 412 4 view .LVU758
 2957 0536 3046     		mov	r0, r6
 2958 0538 FFF7FEFF 		bl	NRF24_Transmit
 2959              	.LVL303:
 413:Core/Src/main.c **** 			NRF24_RxMode();
 2960              		.loc 1 413 4 view .LVU759
 414:Core/Src/main.c **** 			lastRxMode = HAL_GetTick();
 2961              		.loc 1 414 4 view .LVU760
 2962 053c FFF7FEFF 		bl	NRF24_RxMode
 2963              	.LVL304:
 415:Core/Src/main.c **** 		}
 2964              		.loc 1 415 4 view .LVU761
 415:Core/Src/main.c **** 		}
 2965              		.loc 1 415 17 is_stmt 0 view .LVU762
 2966 0540 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cc0rXBD8.s 			page 97


 2967              	.LVL305:
 2968 0544 8346     		mov	fp, r0
 2969              	.LVL306:
 413:Core/Src/main.c **** 			NRF24_RxMode();
 2970              		.loc 1 413 11 view .LVU763
 2971 0546 4FF0010A 		mov	r10, #1
 2972 054a 7CE6     		b	.L151
 2973              	.LVL307:
 2974              	.L168:
 421:Core/Src/main.c **** 			NRF24_Receive(RxData);
 2975              		.loc 1 421 4 is_stmt 1 view .LVU764
 2976 054c 1D4C     		ldr	r4, .L175+68
 2977              	.LVL308:
 421:Core/Src/main.c **** 			NRF24_Receive(RxData);
 2978              		.loc 1 421 4 is_stmt 0 view .LVU765
 2979 054e 2025     		movs	r5, #32
 2980 0550 2A46     		mov	r2, r5
 2981 0552 0021     		movs	r1, #0
 2982 0554 2046     		mov	r0, r4
 2983 0556 FFF7FEFF 		bl	memset
 2984              	.LVL309:
 422:Core/Src/main.c **** 			rxMode = false;
 2985              		.loc 1 422 4 is_stmt 1 view .LVU766
 2986 055a 2046     		mov	r0, r4
 2987 055c FFF7FEFF 		bl	NRF24_Receive
 2988              	.LVL310:
 423:Core/Src/main.c **** 			lastRxMode = HAL_GetTick();
 2989              		.loc 1 423 4 view .LVU767
 424:Core/Src/main.c **** 			ParseReceivedCommand((char*)RxData, sizeof(RxData));
 2990              		.loc 1 424 4 view .LVU768
 424:Core/Src/main.c **** 			ParseReceivedCommand((char*)RxData, sizeof(RxData));
 2991              		.loc 1 424 17 is_stmt 0 view .LVU769
 2992 0560 FFF7FEFF 		bl	HAL_GetTick
 2993              	.LVL311:
 2994 0564 8346     		mov	fp, r0
 2995              	.LVL312:
 425:Core/Src/main.c **** 		}
 2996              		.loc 1 425 4 is_stmt 1 view .LVU770
 2997 0566 2946     		mov	r1, r5
 2998 0568 2046     		mov	r0, r4
 2999              	.LVL313:
 425:Core/Src/main.c **** 		}
 3000              		.loc 1 425 4 is_stmt 0 view .LVU771
 3001 056a FFF7FEFF 		bl	ParseReceivedCommand
 3002              	.LVL314:
 423:Core/Src/main.c **** 			lastRxMode = HAL_GetTick();
 3003              		.loc 1 423 11 view .LVU772
 3004 056e 4FF0000A 		mov	r10, #0
 3005 0572 68E6     		b	.L151
 3006              	.LVL315:
 3007              	.L169:
 428:Core/Src/main.c **** 			lastRxMode = HAL_GetTick();
 3008              		.loc 1 428 4 is_stmt 1 view .LVU773
 429:Core/Src/main.c **** 		}
 3009              		.loc 1 429 4 view .LVU774
 429:Core/Src/main.c **** 		}
 3010              		.loc 1 429 17 is_stmt 0 view .LVU775
ARM GAS  /tmp/cc0rXBD8.s 			page 98


 3011 0574 FFF7FEFF 		bl	HAL_GetTick
 3012              	.LVL316:
 3013 0578 8346     		mov	fp, r0
 3014              	.LVL317:
 428:Core/Src/main.c **** 			lastRxMode = HAL_GetTick();
 3015              		.loc 1 428 11 view .LVU776
 3016 057a 4FF0000A 		mov	r10, #0
 3017 057e 62E6     		b	.L151
 3018              	.L176:
 3019              		.align	2
 3020              	.L175:
 3021 0580 00000000 		.word	hspi1
 3022 0584 00000000 		.word	bmpData
 3023 0588 00401C46 		.word	1176256512
 3024 058c 00000000 		.word	myData
 3025 0590 00000000 		.word	DataBuffer
 3026 0594 00408F40 		.word	1083129856
 3027 0598 00000000 		.word	TxData
 3028 059c 08000000 		.word	.LC21
 3029 05a0 18000000 		.word	.LC22
 3030 05a4 24000000 		.word	.LC23
 3031 05a8 30000000 		.word	.LC24
 3032 05ac 44000000 		.word	.LC25
 3033 05b0 58000000 		.word	.LC26
 3034 05b4 6C000000 		.word	.LC27
 3035 05b8 00000000 		.word	rState
 3036 05bc 00000000 		.word	write_logs
 3037 05c0 88000000 		.word	.LC28
 3038 05c4 00000000 		.word	RxData
 3039              	.LBE24:
 3040              		.cfi_endproc
 3041              	.LFE145:
 3043              		.global	rState
 3044              		.section	.bss.rState,"aw",%nobits
 3047              	rState:
 3048 0000 00       		.space	1
 3049              		.global	apogee
 3050              		.section	.bss.apogee,"aw",%nobits
 3051              		.align	2
 3054              	apogee:
 3055 0000 00000000 		.space	4
 3056              		.global	bmpData
 3057              		.section	.bss.bmpData,"aw",%nobits
 3058              		.align	2
 3061              	bmpData:
 3062 0000 00000000 		.space	8
 3062      00000000 
 3063              		.global	zeroAltitude
 3064              		.section	.bss.zeroAltitude,"aw",%nobits
 3065              		.align	2
 3068              	zeroAltitude:
 3069 0000 00000000 		.space	4
 3070              		.global	myData
 3071              		.section	.bss.myData,"aw",%nobits
 3072              		.align	3
 3075              	myData:
 3076 0000 00000000 		.space	56
ARM GAS  /tmp/cc0rXBD8.s 			page 99


 3076      00000000 
 3076      00000000 
 3076      00000000 
 3076      00000000 
 3077              		.global	DataBuffer
 3078              		.section	.bss.DataBuffer,"aw",%nobits
 3079              		.align	2
 3082              	DataBuffer:
 3083 0000 00000000 		.space	512
 3083      00000000 
 3083      00000000 
 3083      00000000 
 3083      00000000 
 3084              		.global	RxBuffer
 3085              		.section	.bss.RxBuffer,"aw",%nobits
 3086              		.align	2
 3089              	RxBuffer:
 3090 0000 00000000 		.space	64
 3090      00000000 
 3090      00000000 
 3090      00000000 
 3090      00000000 
 3091              		.global	newPos
 3092              		.section	.bss.newPos,"aw",%nobits
 3093              		.align	1
 3096              	newPos:
 3097 0000 0000     		.space	2
 3098              		.global	oldPos
 3099              		.section	.bss.oldPos,"aw",%nobits
 3100              		.align	1
 3103              	oldPos:
 3104 0000 0000     		.space	2
 3105              		.global	write_logs
 3106              		.section	.bss.write_logs,"aw",%nobits
 3109              	write_logs:
 3110 0000 00       		.space	1
 3111              		.global	value_adc
 3112              		.section	.bss.value_adc,"aw",%nobits
 3113              		.align	2
 3116              	value_adc:
 3117 0000 00000000 		.space	4
 3118              		.global	cmdParams
 3119              		.section	.bss.cmdParams,"aw",%nobits
 3120              		.align	2
 3123              	cmdParams:
 3124 0000 00000000 		.space	30
 3124      00000000 
 3124      00000000 
 3124      00000000 
 3124      00000000 
 3125              		.global	cmdSymbol
 3126              		.section	.bss.cmdSymbol,"aw",%nobits
 3129              	cmdSymbol:
 3130 0000 00       		.space	1
 3131              		.global	RxData
 3132              		.section	.bss.RxData,"aw",%nobits
 3133              		.align	2
ARM GAS  /tmp/cc0rXBD8.s 			page 100


 3136              	RxData:
 3137 0000 00000000 		.space	32
 3137      00000000 
 3137      00000000 
 3137      00000000 
 3137      00000000 
 3138              		.global	TxData
 3139              		.section	.bss.TxData,"aw",%nobits
 3140              		.align	2
 3143              	TxData:
 3144 0000 00000000 		.space	32
 3144      00000000 
 3144      00000000 
 3144      00000000 
 3144      00000000 
 3145              		.global	RxAddress
 3146              		.section	.data.RxAddress,"aw"
 3147              		.align	2
 3150              	RxAddress:
 3151 0000 AADDCCBB 		.ascii	"\252\335\314\273\252"
 3151      AA
 3152              		.global	TxAddress
 3153              		.section	.data.TxAddress,"aw"
 3154              		.align	2
 3157              	TxAddress:
 3158 0000 EEDDCCBB 		.ascii	"\356\335\314\273\252"
 3158      AA
 3159              		.global	hdma_usart2_tx
 3160              		.section	.bss.hdma_usart2_tx,"aw",%nobits
 3161              		.align	2
 3164              	hdma_usart2_tx:
 3165 0000 00000000 		.space	96
 3165      00000000 
 3165      00000000 
 3165      00000000 
 3165      00000000 
 3166              		.global	hdma_usart2_rx
 3167              		.section	.bss.hdma_usart2_rx,"aw",%nobits
 3168              		.align	2
 3171              	hdma_usart2_rx:
 3172 0000 00000000 		.space	96
 3172      00000000 
 3172      00000000 
 3172      00000000 
 3172      00000000 
 3173              		.global	huart2
 3174              		.section	.bss.huart2,"aw",%nobits
 3175              		.align	2
 3178              	huart2:
 3179 0000 00000000 		.space	72
 3179      00000000 
 3179      00000000 
 3179      00000000 
 3179      00000000 
 3180              		.global	hspi3
 3181              		.section	.bss.hspi3,"aw",%nobits
 3182              		.align	2
ARM GAS  /tmp/cc0rXBD8.s 			page 101


 3185              	hspi3:
 3186 0000 00000000 		.space	88
 3186      00000000 
 3186      00000000 
 3186      00000000 
 3186      00000000 
 3187              		.global	hspi1
 3188              		.section	.bss.hspi1,"aw",%nobits
 3189              		.align	2
 3192              	hspi1:
 3193 0000 00000000 		.space	88
 3193      00000000 
 3193      00000000 
 3193      00000000 
 3193      00000000 
 3194              		.global	hdma_sdio_tx
 3195              		.section	.bss.hdma_sdio_tx,"aw",%nobits
 3196              		.align	2
 3199              	hdma_sdio_tx:
 3200 0000 00000000 		.space	96
 3200      00000000 
 3200      00000000 
 3200      00000000 
 3200      00000000 
 3201              		.global	hdma_sdio_rx
 3202              		.section	.bss.hdma_sdio_rx,"aw",%nobits
 3203              		.align	2
 3206              	hdma_sdio_rx:
 3207 0000 00000000 		.space	96
 3207      00000000 
 3207      00000000 
 3207      00000000 
 3207      00000000 
 3208              		.global	hsd
 3209              		.section	.bss.hsd,"aw",%nobits
 3210              		.align	2
 3213              	hsd:
 3214 0000 00000000 		.space	132
 3214      00000000 
 3214      00000000 
 3214      00000000 
 3214      00000000 
 3215              		.global	hi2c2
 3216              		.section	.bss.hi2c2,"aw",%nobits
 3217              		.align	2
 3220              	hi2c2:
 3221 0000 00000000 		.space	84
 3221      00000000 
 3221      00000000 
 3221      00000000 
 3221      00000000 
 3222              		.global	_bno055_i2c_port
 3223              		.section	.bss._bno055_i2c_port,"aw",%nobits
 3224              		.align	2
 3227              	_bno055_i2c_port:
 3228 0000 00000000 		.space	4
 3229              		.text
ARM GAS  /tmp/cc0rXBD8.s 			page 102


 3230              	.Letext0:
 3231              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 3232              		.file 5 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_ty
 3233              		.file 6 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 3234              		.file 7 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/lib/gcc/arm-none-eabi/12.3.1/include/stdd
 3235              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3236              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 3237              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 3238              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 3239              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3240              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 3241              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_sdmmc.h"
 3242              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sd.h"
 3243              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 3244              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 3245              		.file 18 "Core/Inc/bno055.h"
 3246              		.file 19 "Core/Inc/nmea_parse.h"
 3247              		.file 20 "Core/Inc/pca9685.h"
 3248              		.file 21 "Core/Inc/colir_one.h"
 3249              		.file 22 "Drivers/bmp5_api/Inc/bmp5_defs.h"
 3250              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 3251              		.file 24 "Core/Inc/NRF24L01.h"
 3252              		.file 25 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/stdio.h"
 3253              		.file 26 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/string.h"
 3254              		.file 27 "Core/Inc/bmp581.h"
 3255              		.file 28 "FATFS/App/fatfs.h"
 3256              		.file 29 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3257              		.file 30 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/stdlib.h"
 3258              		.file 31 "<built-in>"
ARM GAS  /tmp/cc0rXBD8.s 			page 103


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc0rXBD8.s:21     .text.MX_SDIO_SD_Init:00000000 $t
     /tmp/cc0rXBD8.s:26     .text.MX_SDIO_SD_Init:00000000 MX_SDIO_SD_Init
     /tmp/cc0rXBD8.s:63     .text.MX_SDIO_SD_Init:00000018 $d
     /tmp/cc0rXBD8.s:3213   .bss.hsd:00000000 hsd
     /tmp/cc0rXBD8.s:69     .text.MX_GPIO_Init:00000000 $t
     /tmp/cc0rXBD8.s:74     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/cc0rXBD8.s:339    .text.MX_GPIO_Init:00000140 $d
     /tmp/cc0rXBD8.s:348    .text.MX_DMA_Init:00000000 $t
     /tmp/cc0rXBD8.s:353    .text.MX_DMA_Init:00000000 MX_DMA_Init
     /tmp/cc0rXBD8.s:450    .text.MX_DMA_Init:00000074 $d
     /tmp/cc0rXBD8.s:455    .text.bno055_assignI2C:00000000 $t
     /tmp/cc0rXBD8.s:461    .text.bno055_assignI2C:00000000 bno055_assignI2C
     /tmp/cc0rXBD8.s:479    .text.bno055_assignI2C:00000008 $d
     /tmp/cc0rXBD8.s:3227   .bss._bno055_i2c_port:00000000 _bno055_i2c_port
     /tmp/cc0rXBD8.s:484    .text.bno055_delay:00000000 $t
     /tmp/cc0rXBD8.s:490    .text.bno055_delay:00000000 bno055_delay
     /tmp/cc0rXBD8.s:512    .rodata.bno055_writeData.str1.4:00000000 $d
     /tmp/cc0rXBD8.s:573    .text.bno055_writeData:00000000 $t
     /tmp/cc0rXBD8.s:579    .text.bno055_writeData:00000000 bno055_writeData
     /tmp/cc0rXBD8.s:654    .text.bno055_writeData:0000004c $d
     /tmp/cc0rXBD8.s:687    .text.bno055_writeData:0000006c $t
     /tmp/cc0rXBD8.s:742    .text.bno055_writeData:000000a8 $d
     /tmp/cc0rXBD8.s:923    .text.bno055_writeData:00000144 $d
     /tmp/cc0rXBD8.s:948    .text.bno055_readData:00000000 $t
     /tmp/cc0rXBD8.s:954    .text.bno055_readData:00000000 bno055_readData
     /tmp/cc0rXBD8.s:1011   .text.bno055_readData:00000034 $d
     /tmp/cc0rXBD8.s:1016   .text.FigherLighter:00000000 $t
     /tmp/cc0rXBD8.s:1022   .text.FigherLighter:00000000 FigherLighter
     /tmp/cc0rXBD8.s:1071   .text.FigherLighter:00000028 $d
     /tmp/cc0rXBD8.s:1076   .text.LogData:00000000 $t
     /tmp/cc0rXBD8.s:1082   .text.LogData:00000000 LogData
     /tmp/cc0rXBD8.s:1116   .text.LogData:00000014 $d
     /tmp/cc0rXBD8.s:3109   .bss.write_logs:00000000 write_logs
     /tmp/cc0rXBD8.s:1121   .text.HAL_UARTEx_RxEventCallback:00000000 $t
     /tmp/cc0rXBD8.s:1127   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
     /tmp/cc0rXBD8.s:1236   .text.HAL_UARTEx_RxEventCallback:0000007c $d
     /tmp/cc0rXBD8.s:3096   .bss.newPos:00000000 newPos
     /tmp/cc0rXBD8.s:3103   .bss.oldPos:00000000 oldPos
     /tmp/cc0rXBD8.s:3082   .bss.DataBuffer:00000000 DataBuffer
     /tmp/cc0rXBD8.s:3089   .bss.RxBuffer:00000000 RxBuffer
     /tmp/cc0rXBD8.s:3178   .bss.huart2:00000000 huart2
     /tmp/cc0rXBD8.s:3171   .bss.hdma_usart2_rx:00000000 hdma_usart2_rx
     /tmp/cc0rXBD8.s:1246   .text.Error_Handler:00000000 $t
     /tmp/cc0rXBD8.s:1252   .text.Error_Handler:00000000 Error_Handler
     /tmp/cc0rXBD8.s:1284   .text.MX_I2C2_Init:00000000 $t
     /tmp/cc0rXBD8.s:1289   .text.MX_I2C2_Init:00000000 MX_I2C2_Init
     /tmp/cc0rXBD8.s:1347   .text.MX_I2C2_Init:0000002c $d
     /tmp/cc0rXBD8.s:3220   .bss.hi2c2:00000000 hi2c2
     /tmp/cc0rXBD8.s:1354   .text.ParseReceivedCommand:00000000 $t
     /tmp/cc0rXBD8.s:1360   .text.ParseReceivedCommand:00000000 ParseReceivedCommand
     /tmp/cc0rXBD8.s:1701   .text.ParseReceivedCommand:00000150 $d
     /tmp/cc0rXBD8.s:3129   .bss.cmdSymbol:00000000 cmdSymbol
     /tmp/cc0rXBD8.s:3123   .bss.cmdParams:00000000 cmdParams
     /tmp/cc0rXBD8.s:3047   .bss.rState:00000000 rState
     /tmp/cc0rXBD8.s:3192   .bss.hspi1:00000000 hspi1
ARM GAS  /tmp/cc0rXBD8.s 			page 104


     /tmp/cc0rXBD8.s:3061   .bss.bmpData:00000000 bmpData
     /tmp/cc0rXBD8.s:3068   .bss.zeroAltitude:00000000 zeroAltitude
     /tmp/cc0rXBD8.s:3054   .bss.apogee:00000000 apogee
     /tmp/cc0rXBD8.s:1715   .text.MX_SPI3_Init:00000000 $t
     /tmp/cc0rXBD8.s:1720   .text.MX_SPI3_Init:00000000 MX_SPI3_Init
     /tmp/cc0rXBD8.s:1788   .text.MX_SPI3_Init:00000038 $d
     /tmp/cc0rXBD8.s:3185   .bss.hspi3:00000000 hspi3
     /tmp/cc0rXBD8.s:1794   .text.MX_SPI1_Init:00000000 $t
     /tmp/cc0rXBD8.s:1799   .text.MX_SPI1_Init:00000000 MX_SPI1_Init
     /tmp/cc0rXBD8.s:1867   .text.MX_SPI1_Init:00000038 $d
     /tmp/cc0rXBD8.s:1873   .text.MX_USART2_UART_Init:00000000 $t
     /tmp/cc0rXBD8.s:1878   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/cc0rXBD8.s:1933   .text.MX_USART2_UART_Init:0000002c $d
     /tmp/cc0rXBD8.s:1939   .text.SystemClock_Config:00000000 $t
     /tmp/cc0rXBD8.s:1945   .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cc0rXBD8.s:2094   .text.SystemClock_Config:0000009c $d
     /tmp/cc0rXBD8.s:2100   .rodata.main.str1.4:00000000 $d
     /tmp/cc0rXBD8.s:2131   .text.main:00000000 $t
     /tmp/cc0rXBD8.s:2137   .text.main:00000000 main
     /tmp/cc0rXBD8.s:2503   .text.main:000001f0 $d
     /tmp/cc0rXBD8.s:3150   .data.RxAddress:00000000 RxAddress
     /tmp/cc0rXBD8.s:3157   .data.TxAddress:00000000 TxAddress
     /tmp/cc0rXBD8.s:2522   .text.main:00000230 $t
     /tmp/cc0rXBD8.s:3021   .text.main:00000580 $d
     /tmp/cc0rXBD8.s:3075   .bss.myData:00000000 myData
     /tmp/cc0rXBD8.s:3143   .bss.TxData:00000000 TxData
     /tmp/cc0rXBD8.s:3136   .bss.RxData:00000000 RxData
     /tmp/cc0rXBD8.s:3048   .bss.rState:00000000 $d
     /tmp/cc0rXBD8.s:3051   .bss.apogee:00000000 $d
     /tmp/cc0rXBD8.s:3058   .bss.bmpData:00000000 $d
     /tmp/cc0rXBD8.s:3065   .bss.zeroAltitude:00000000 $d
     /tmp/cc0rXBD8.s:3072   .bss.myData:00000000 $d
     /tmp/cc0rXBD8.s:3079   .bss.DataBuffer:00000000 $d
     /tmp/cc0rXBD8.s:3086   .bss.RxBuffer:00000000 $d
     /tmp/cc0rXBD8.s:3093   .bss.newPos:00000000 $d
     /tmp/cc0rXBD8.s:3100   .bss.oldPos:00000000 $d
     /tmp/cc0rXBD8.s:3110   .bss.write_logs:00000000 $d
     /tmp/cc0rXBD8.s:3116   .bss.value_adc:00000000 value_adc
     /tmp/cc0rXBD8.s:3113   .bss.value_adc:00000000 $d
     /tmp/cc0rXBD8.s:3120   .bss.cmdParams:00000000 $d
     /tmp/cc0rXBD8.s:3130   .bss.cmdSymbol:00000000 $d
     /tmp/cc0rXBD8.s:3133   .bss.RxData:00000000 $d
     /tmp/cc0rXBD8.s:3140   .bss.TxData:00000000 $d
     /tmp/cc0rXBD8.s:3147   .data.RxAddress:00000000 $d
     /tmp/cc0rXBD8.s:3154   .data.TxAddress:00000000 $d
     /tmp/cc0rXBD8.s:3164   .bss.hdma_usart2_tx:00000000 hdma_usart2_tx
     /tmp/cc0rXBD8.s:3161   .bss.hdma_usart2_tx:00000000 $d
     /tmp/cc0rXBD8.s:3168   .bss.hdma_usart2_rx:00000000 $d
     /tmp/cc0rXBD8.s:3175   .bss.huart2:00000000 $d
     /tmp/cc0rXBD8.s:3182   .bss.hspi3:00000000 $d
     /tmp/cc0rXBD8.s:3189   .bss.hspi1:00000000 $d
     /tmp/cc0rXBD8.s:3199   .bss.hdma_sdio_tx:00000000 hdma_sdio_tx
     /tmp/cc0rXBD8.s:3196   .bss.hdma_sdio_tx:00000000 $d
     /tmp/cc0rXBD8.s:3206   .bss.hdma_sdio_rx:00000000 hdma_sdio_rx
     /tmp/cc0rXBD8.s:3203   .bss.hdma_sdio_rx:00000000 $d
     /tmp/cc0rXBD8.s:3210   .bss.hsd:00000000 $d
     /tmp/cc0rXBD8.s:3217   .bss.hi2c2:00000000 $d
ARM GAS  /tmp/cc0rXBD8.s 			page 105


     /tmp/cc0rXBD8.s:3224   .bss._bno055_i2c_port:00000000 $d
     /tmp/cc0rXBD8.s:754    .text.bno055_writeData:000000b3 $d
     /tmp/cc0rXBD8.s:754    .text.bno055_writeData:000000b4 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_Delay
HAL_I2C_Master_Transmit
printf
HAL_I2C_GetError
puts
HAL_I2C_GetState
HAL_I2C_Master_Receive
log_data
memcpy
HAL_UARTEx_ReceiveToIdle_DMA
HAL_I2C_Init
atoi
HAL_I2C_DeInit
PCA9685_Init
PCA9685_SetPwmFrequency
PCA9685_SetServoAngle
read_logs_to_sd
HAL_SPI_Init
getSensorData
calcAltitude
HAL_SPI_DeInit
reset_logs
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_dcmpgt
__aeabi_ddiv
__aeabi_f2d
HAL_Init
MX_FATFS_Init
colir_one_init
NRF24_Init
NRF24_TxRxMode
NRF24_RxMode
bno055_setup
bno055_setOperationModeNDOF
beginSPI
HAL_GetTick
get_logs_config
isDataAvailable
bno055_getVectorEuler
bno055_getVectorLinearAccel
bno055_getVectorQuaternion
bno055_getVectorGyroscope
nmea_parse
NRF24_TxMode
sprintf
ARM GAS  /tmp/cc0rXBD8.s 			page 106


NRF24_Transmit
NRF24_Receive
