ARM GAS  /tmp/cc0vGqAu.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bno055.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/bno055.c"
  20              		.section	.text.bno055_setPage,"ax",%progbits
  21              		.align	1
  22              		.global	bno055_setPage
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	bno055_setPage:
  28              	.LVL0:
  29              	.LFB3:
   1:Core/Src/bno055.c **** #include "bno055.h"
   2:Core/Src/bno055.c **** #include <string.h>
   3:Core/Src/bno055.c **** 
   4:Core/Src/bno055.c **** uint16_t accelScale = 100;
   5:Core/Src/bno055.c **** uint16_t tempScale = 1;
   6:Core/Src/bno055.c **** uint16_t angularRateScale = 16;
   7:Core/Src/bno055.c **** uint16_t eulerScale = 16;
   8:Core/Src/bno055.c **** uint16_t magScale = 16;
   9:Core/Src/bno055.c **** uint16_t quaScale = (1<<14);    // 2^14
  10:Core/Src/bno055.c **** 
  11:Core/Src/bno055.c **** void bno055_setPage(uint8_t page) { bno055_writeData(BNO055_PAGE_ID, page); }
  30              		.loc 1 11 35 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 11 35 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  40 0002 0146     		mov	r1, r0
  41              		.loc 1 11 37 is_stmt 1 view .LVU2
  42 0004 0720     		movs	r0, #7
  43              	.LVL1:
  44              		.loc 1 11 37 is_stmt 0 view .LVU3
  45 0006 FFF7FEFF 		bl	bno055_writeData
  46              	.LVL2:
  47              		.loc 1 11 77 view .LVU4
ARM GAS  /tmp/cc0vGqAu.s 			page 2


  48 000a 08BD     		pop	{r3, pc}
  49              		.cfi_endproc
  50              	.LFE3:
  52              		.section	.text.bno055_getOperationMode,"ax",%progbits
  53              		.align	1
  54              		.global	bno055_getOperationMode
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  59              	bno055_getOperationMode:
  60              	.LFB4:
  12:Core/Src/bno055.c **** 
  13:Core/Src/bno055.c **** bno055_opmode_t bno055_getOperationMode() {
  61              		.loc 1 13 43 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 8
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65 0000 00B5     		push	{lr}
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 14, -4
  69 0002 83B0     		sub	sp, sp, #12
  70              	.LCFI2:
  71              		.cfi_def_cfa_offset 16
  14:Core/Src/bno055.c ****   bno055_opmode_t mode;
  72              		.loc 1 14 3 view .LVU6
  15:Core/Src/bno055.c ****   bno055_readData(BNO055_OPR_MODE, &mode, 1);
  73              		.loc 1 15 3 view .LVU7
  74 0004 0122     		movs	r2, #1
  75 0006 0DF10701 		add	r1, sp, #7
  76 000a 3D20     		movs	r0, #61
  77 000c FFF7FEFF 		bl	bno055_readData
  78              	.LVL3:
  16:Core/Src/bno055.c ****   return mode;
  79              		.loc 1 16 3 view .LVU8
  17:Core/Src/bno055.c **** }
  80              		.loc 1 17 1 is_stmt 0 view .LVU9
  81 0010 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
  82 0014 03B0     		add	sp, sp, #12
  83              	.LCFI3:
  84              		.cfi_def_cfa_offset 4
  85              		@ sp needed
  86 0016 5DF804FB 		ldr	pc, [sp], #4
  87              		.cfi_endproc
  88              	.LFE4:
  90              		.section	.text.bno055_setOperationMode,"ax",%progbits
  91              		.align	1
  92              		.global	bno055_setOperationMode
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	bno055_setOperationMode:
  98              	.LVL4:
  99              	.LFB5:
  18:Core/Src/bno055.c **** 
  19:Core/Src/bno055.c **** void bno055_setOperationMode(bno055_opmode_t mode) {
 100              		.loc 1 19 52 is_stmt 1 view -0
ARM GAS  /tmp/cc0vGqAu.s 			page 3


 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		.loc 1 19 52 is_stmt 0 view .LVU11
 105 0000 10B5     		push	{r4, lr}
 106              	.LCFI4:
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 4, -8
 109              		.cfi_offset 14, -4
 110 0002 0446     		mov	r4, r0
  20:Core/Src/bno055.c ****   bno055_writeData(BNO055_OPR_MODE, mode);
 111              		.loc 1 20 3 is_stmt 1 view .LVU12
 112 0004 0146     		mov	r1, r0
 113 0006 3D20     		movs	r0, #61
 114              	.LVL5:
 115              		.loc 1 20 3 is_stmt 0 view .LVU13
 116 0008 FFF7FEFF 		bl	bno055_writeData
 117              	.LVL6:
  21:Core/Src/bno055.c ****   if (mode == BNO055_OPERATION_MODE_CONFIG) {
 118              		.loc 1 21 3 is_stmt 1 view .LVU14
 119              		.loc 1 21 6 is_stmt 0 view .LVU15
 120 000c 1CB9     		cbnz	r4, .L6
  22:Core/Src/bno055.c ****     bno055_delay(19);
 121              		.loc 1 22 5 is_stmt 1 view .LVU16
 122 000e 1320     		movs	r0, #19
 123 0010 FFF7FEFF 		bl	bno055_delay
 124              	.LVL7:
 125              	.L5:
  23:Core/Src/bno055.c ****   } else {
  24:Core/Src/bno055.c ****     bno055_delay(7);
  25:Core/Src/bno055.c ****   }
  26:Core/Src/bno055.c **** }
 126              		.loc 1 26 1 is_stmt 0 view .LVU17
 127 0014 10BD     		pop	{r4, pc}
 128              	.L6:
  24:Core/Src/bno055.c ****   }
 129              		.loc 1 24 5 is_stmt 1 view .LVU18
 130 0016 0720     		movs	r0, #7
 131 0018 FFF7FEFF 		bl	bno055_delay
 132              	.LVL8:
 133              		.loc 1 26 1 is_stmt 0 view .LVU19
 134 001c FAE7     		b	.L5
 135              		.cfi_endproc
 136              	.LFE5:
 138              		.section	.text.bno055_setOperationModeConfig,"ax",%progbits
 139              		.align	1
 140              		.global	bno055_setOperationModeConfig
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	bno055_setOperationModeConfig:
 146              	.LFB6:
  27:Core/Src/bno055.c **** 
  28:Core/Src/bno055.c **** void bno055_setOperationModeConfig() {
 147              		.loc 1 28 38 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc0vGqAu.s 			page 4


 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 08B5     		push	{r3, lr}
 152              	.LCFI5:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 3, -8
 155              		.cfi_offset 14, -4
  29:Core/Src/bno055.c ****   bno055_setOperationMode(BNO055_OPERATION_MODE_CONFIG);
 156              		.loc 1 29 3 view .LVU21
 157 0002 0020     		movs	r0, #0
 158 0004 FFF7FEFF 		bl	bno055_setOperationMode
 159              	.LVL9:
  30:Core/Src/bno055.c **** }
 160              		.loc 1 30 1 is_stmt 0 view .LVU22
 161 0008 08BD     		pop	{r3, pc}
 162              		.cfi_endproc
 163              	.LFE6:
 165              		.section	.text.bno055_setOperationModeNDOF,"ax",%progbits
 166              		.align	1
 167              		.global	bno055_setOperationModeNDOF
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 172              	bno055_setOperationModeNDOF:
 173              	.LFB7:
  31:Core/Src/bno055.c **** 
  32:Core/Src/bno055.c **** void bno055_setOperationModeNDOF() {
 174              		.loc 1 32 36 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178 0000 08B5     		push	{r3, lr}
 179              	.LCFI6:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 3, -8
 182              		.cfi_offset 14, -4
  33:Core/Src/bno055.c ****   bno055_setOperationMode(BNO055_OPERATION_MODE_NDOF);
 183              		.loc 1 33 3 view .LVU24
 184 0002 0C20     		movs	r0, #12
 185 0004 FFF7FEFF 		bl	bno055_setOperationMode
 186              	.LVL10:
  34:Core/Src/bno055.c **** }
 187              		.loc 1 34 1 is_stmt 0 view .LVU25
 188 0008 08BD     		pop	{r3, pc}
 189              		.cfi_endproc
 190              	.LFE7:
 192              		.section	.text.bno055_setExternalCrystalUse,"ax",%progbits
 193              		.align	1
 194              		.global	bno055_setExternalCrystalUse
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	bno055_setExternalCrystalUse:
 200              	.LVL11:
 201              	.LFB8:
  35:Core/Src/bno055.c **** 
  36:Core/Src/bno055.c **** void bno055_setExternalCrystalUse(bool state) {
 202              		.loc 1 36 47 is_stmt 1 view -0
ARM GAS  /tmp/cc0vGqAu.s 			page 5


 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 8
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		.loc 1 36 47 is_stmt 0 view .LVU27
 207 0000 10B5     		push	{r4, lr}
 208              	.LCFI7:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 4, -8
 211              		.cfi_offset 14, -4
 212 0002 82B0     		sub	sp, sp, #8
 213              	.LCFI8:
 214              		.cfi_def_cfa_offset 16
 215 0004 0446     		mov	r4, r0
  37:Core/Src/bno055.c ****   bno055_setPage(0);
 216              		.loc 1 37 3 is_stmt 1 view .LVU28
 217 0006 0020     		movs	r0, #0
 218              	.LVL12:
 219              		.loc 1 37 3 is_stmt 0 view .LVU29
 220 0008 FFF7FEFF 		bl	bno055_setPage
 221              	.LVL13:
  38:Core/Src/bno055.c ****   uint8_t tmp = 0;
 222              		.loc 1 38 3 is_stmt 1 view .LVU30
 223              		.loc 1 38 11 is_stmt 0 view .LVU31
 224 000c 0023     		movs	r3, #0
 225 000e 8DF80730 		strb	r3, [sp, #7]
  39:Core/Src/bno055.c ****   bno055_readData(BNO055_SYS_TRIGGER, &tmp, 1);
 226              		.loc 1 39 3 is_stmt 1 view .LVU32
 227 0012 0122     		movs	r2, #1
 228 0014 0DF10701 		add	r1, sp, #7
 229 0018 3F20     		movs	r0, #63
 230 001a FFF7FEFF 		bl	bno055_readData
 231              	.LVL14:
  40:Core/Src/bno055.c ****   tmp |= (state == true) ? 0x80 : 0x0;
 232              		.loc 1 40 3 view .LVU33
 233              		.loc 1 40 7 is_stmt 0 view .LVU34
 234 001e 84B1     		cbz	r4, .L15
 235 0020 6FF07F03 		mvn	r3, #127
 236              	.L14:
 237              		.loc 1 40 7 discriminator 4 view .LVU35
 238 0024 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 239 0028 1943     		orrs	r1, r1, r3
 240 002a C9B2     		uxtb	r1, r1
 241 002c 8DF80710 		strb	r1, [sp, #7]
  41:Core/Src/bno055.c ****   bno055_writeData(BNO055_SYS_TRIGGER, tmp);
 242              		.loc 1 41 3 is_stmt 1 discriminator 4 view .LVU36
 243 0030 3F20     		movs	r0, #63
 244 0032 FFF7FEFF 		bl	bno055_writeData
 245              	.LVL15:
  42:Core/Src/bno055.c ****   bno055_delay(700);
 246              		.loc 1 42 3 discriminator 4 view .LVU37
 247 0036 4FF42F70 		mov	r0, #700
 248 003a FFF7FEFF 		bl	bno055_delay
 249              	.LVL16:
  43:Core/Src/bno055.c **** }
 250              		.loc 1 43 1 is_stmt 0 discriminator 4 view .LVU38
 251 003e 02B0     		add	sp, sp, #8
 252              	.LCFI9:
ARM GAS  /tmp/cc0vGqAu.s 			page 6


 253              		.cfi_remember_state
 254              		.cfi_def_cfa_offset 8
 255              		@ sp needed
 256 0040 10BD     		pop	{r4, pc}
 257              	.L15:
 258              	.LCFI10:
 259              		.cfi_restore_state
  40:Core/Src/bno055.c ****   bno055_writeData(BNO055_SYS_TRIGGER, tmp);
 260              		.loc 1 40 7 view .LVU39
 261 0042 0023     		movs	r3, #0
 262 0044 EEE7     		b	.L14
 263              		.cfi_endproc
 264              	.LFE8:
 266              		.section	.text.bno055_enableExternalCrystal,"ax",%progbits
 267              		.align	1
 268              		.global	bno055_enableExternalCrystal
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 273              	bno055_enableExternalCrystal:
 274              	.LFB9:
  44:Core/Src/bno055.c **** 
  45:Core/Src/bno055.c **** void bno055_enableExternalCrystal() { bno055_setExternalCrystalUse(true); }
 275              		.loc 1 45 37 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 08B5     		push	{r3, lr}
 280              	.LCFI11:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 3, -8
 283              		.cfi_offset 14, -4
 284              		.loc 1 45 39 view .LVU41
 285 0002 0120     		movs	r0, #1
 286 0004 FFF7FEFF 		bl	bno055_setExternalCrystalUse
 287              	.LVL17:
 288              		.loc 1 45 75 is_stmt 0 view .LVU42
 289 0008 08BD     		pop	{r3, pc}
 290              		.cfi_endproc
 291              	.LFE9:
 293              		.section	.text.bno055_disableExternalCrystal,"ax",%progbits
 294              		.align	1
 295              		.global	bno055_disableExternalCrystal
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	bno055_disableExternalCrystal:
 301              	.LFB10:
  46:Core/Src/bno055.c **** void bno055_disableExternalCrystal() { bno055_setExternalCrystalUse(false); }
 302              		.loc 1 46 38 is_stmt 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306 0000 08B5     		push	{r3, lr}
 307              	.LCFI12:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 3, -8
ARM GAS  /tmp/cc0vGqAu.s 			page 7


 310              		.cfi_offset 14, -4
 311              		.loc 1 46 40 view .LVU44
 312 0002 0020     		movs	r0, #0
 313 0004 FFF7FEFF 		bl	bno055_setExternalCrystalUse
 314              	.LVL18:
 315              		.loc 1 46 77 is_stmt 0 view .LVU45
 316 0008 08BD     		pop	{r3, pc}
 317              		.cfi_endproc
 318              	.LFE10:
 320              		.section	.text.bno055_reset,"ax",%progbits
 321              		.align	1
 322              		.global	bno055_reset
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	bno055_reset:
 328              	.LFB11:
  47:Core/Src/bno055.c **** 
  48:Core/Src/bno055.c **** void bno055_reset() {
 329              		.loc 1 48 21 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI13:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
  49:Core/Src/bno055.c ****   bno055_writeData(BNO055_SYS_TRIGGER, 0x20);
 338              		.loc 1 49 3 view .LVU47
 339 0002 2021     		movs	r1, #32
 340 0004 3F20     		movs	r0, #63
 341 0006 FFF7FEFF 		bl	bno055_writeData
 342              	.LVL19:
  50:Core/Src/bno055.c ****   bno055_delay(700);
 343              		.loc 1 50 3 view .LVU48
 344 000a 4FF42F70 		mov	r0, #700
 345 000e FFF7FEFF 		bl	bno055_delay
 346              	.LVL20:
  51:Core/Src/bno055.c **** }
 347              		.loc 1 51 1 is_stmt 0 view .LVU49
 348 0012 08BD     		pop	{r3, pc}
 349              		.cfi_endproc
 350              	.LFE11:
 352              		.section	.text.bno055_getTemp,"ax",%progbits
 353              		.align	1
 354              		.global	bno055_getTemp
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 359              	bno055_getTemp:
 360              	.LFB12:
  52:Core/Src/bno055.c **** 
  53:Core/Src/bno055.c **** int8_t bno055_getTemp() {
 361              		.loc 1 53 25 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc0vGqAu.s 			page 8


 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 00B5     		push	{lr}
 366              	.LCFI14:
 367              		.cfi_def_cfa_offset 4
 368              		.cfi_offset 14, -4
 369 0002 83B0     		sub	sp, sp, #12
 370              	.LCFI15:
 371              		.cfi_def_cfa_offset 16
  54:Core/Src/bno055.c ****   bno055_setPage(0);
 372              		.loc 1 54 3 view .LVU51
 373 0004 0020     		movs	r0, #0
 374 0006 FFF7FEFF 		bl	bno055_setPage
 375              	.LVL21:
  55:Core/Src/bno055.c ****   uint8_t t;
 376              		.loc 1 55 3 view .LVU52
  56:Core/Src/bno055.c ****   bno055_readData(BNO055_TEMP, &t, 1);
 377              		.loc 1 56 3 view .LVU53
 378 000a 0122     		movs	r2, #1
 379 000c 0DF10701 		add	r1, sp, #7
 380 0010 3420     		movs	r0, #52
 381 0012 FFF7FEFF 		bl	bno055_readData
 382              	.LVL22:
  57:Core/Src/bno055.c ****   return t;
 383              		.loc 1 57 3 view .LVU54
  58:Core/Src/bno055.c **** }
 384              		.loc 1 58 1 is_stmt 0 view .LVU55
 385 0016 9DF90700 		ldrsb	r0, [sp, #7]
 386 001a 03B0     		add	sp, sp, #12
 387              	.LCFI16:
 388              		.cfi_def_cfa_offset 4
 389              		@ sp needed
 390 001c 5DF804FB 		ldr	pc, [sp], #4
 391              		.cfi_endproc
 392              	.LFE12:
 394              		.section	.rodata.bno055_setup.str1.4,"aMS",%progbits,1
 395              		.align	2
 396              	.LC0:
 397 0000 43616E27 		.ascii	"Can't find BNO055, id: 0x%02x. Please check your wi"
 397      74206669 
 397      6E642042 
 397      4E4F3035 
 397      352C2069 
 398 0033 72696E67 		.ascii	"ring.\015\012\000"
 398      2E0D0A00 
 399              		.section	.text.bno055_setup,"ax",%progbits
 400              		.align	1
 401              		.global	bno055_setup
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 406              	bno055_setup:
 407              	.LFB13:
  59:Core/Src/bno055.c **** 
  60:Core/Src/bno055.c **** void bno055_setup() {
 408              		.loc 1 60 21 is_stmt 1 view -0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc0vGqAu.s 			page 9


 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412 0000 00B5     		push	{lr}
 413              	.LCFI17:
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 14, -4
 416 0002 83B0     		sub	sp, sp, #12
 417              	.LCFI18:
 418              		.cfi_def_cfa_offset 16
  61:Core/Src/bno055.c ****   bno055_reset();
 419              		.loc 1 61 3 view .LVU57
 420 0004 FFF7FEFF 		bl	bno055_reset
 421              	.LVL23:
  62:Core/Src/bno055.c **** 
  63:Core/Src/bno055.c ****   uint8_t id = 0;
 422              		.loc 1 63 3 view .LVU58
 423              		.loc 1 63 11 is_stmt 0 view .LVU59
 424 0008 0020     		movs	r0, #0
 425 000a 8DF80700 		strb	r0, [sp, #7]
  64:Core/Src/bno055.c ****   bno055_readData(BNO055_CHIP_ID, &id, 1);
 426              		.loc 1 64 3 is_stmt 1 view .LVU60
 427 000e 0122     		movs	r2, #1
 428 0010 0DF10701 		add	r1, sp, #7
 429 0014 FFF7FEFF 		bl	bno055_readData
 430              	.LVL24:
  65:Core/Src/bno055.c ****   if (id != BNO055_ID) {
 431              		.loc 1 65 3 view .LVU61
 432              		.loc 1 65 10 is_stmt 0 view .LVU62
 433 0018 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 434              		.loc 1 65 6 view .LVU63
 435 001c A029     		cmp	r1, #160
 436 001e 0ED1     		bne	.L28
 437              	.L26:
  66:Core/Src/bno055.c ****     printf("Can't find BNO055, id: 0x%02x. Please check your wiring.\r\n", id);
  67:Core/Src/bno055.c ****   }
  68:Core/Src/bno055.c ****   bno055_setPage(0);
 438              		.loc 1 68 3 is_stmt 1 view .LVU64
 439 0020 0020     		movs	r0, #0
 440 0022 FFF7FEFF 		bl	bno055_setPage
 441              	.LVL25:
  69:Core/Src/bno055.c ****   bno055_writeData(BNO055_SYS_TRIGGER, 0x0);
 442              		.loc 1 69 3 view .LVU65
 443 0026 0021     		movs	r1, #0
 444 0028 3F20     		movs	r0, #63
 445 002a FFF7FEFF 		bl	bno055_writeData
 446              	.LVL26:
  70:Core/Src/bno055.c **** 
  71:Core/Src/bno055.c ****   // Select BNO055 config mode
  72:Core/Src/bno055.c ****   bno055_setOperationModeConfig();
 447              		.loc 1 72 3 view .LVU66
 448 002e FFF7FEFF 		bl	bno055_setOperationModeConfig
 449              	.LVL27:
  73:Core/Src/bno055.c ****   bno055_delay(10);
 450              		.loc 1 73 3 view .LVU67
 451 0032 0A20     		movs	r0, #10
 452 0034 FFF7FEFF 		bl	bno055_delay
 453              	.LVL28:
  74:Core/Src/bno055.c **** }
ARM GAS  /tmp/cc0vGqAu.s 			page 10


 454              		.loc 1 74 1 is_stmt 0 view .LVU68
 455 0038 03B0     		add	sp, sp, #12
 456              	.LCFI19:
 457              		.cfi_remember_state
 458              		.cfi_def_cfa_offset 4
 459              		@ sp needed
 460 003a 5DF804FB 		ldr	pc, [sp], #4
 461              	.L28:
 462              	.LCFI20:
 463              		.cfi_restore_state
  66:Core/Src/bno055.c ****   }
 464              		.loc 1 66 5 is_stmt 1 view .LVU69
 465 003e 0248     		ldr	r0, .L29
 466 0040 FFF7FEFF 		bl	printf
 467              	.LVL29:
 468 0044 ECE7     		b	.L26
 469              	.L30:
 470 0046 00BF     		.align	2
 471              	.L29:
 472 0048 00000000 		.word	.LC0
 473              		.cfi_endproc
 474              	.LFE13:
 476              		.section	.text.bno055_getSWRevision,"ax",%progbits
 477              		.align	1
 478              		.global	bno055_getSWRevision
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	bno055_getSWRevision:
 484              	.LFB14:
  75:Core/Src/bno055.c **** 
  76:Core/Src/bno055.c **** int16_t bno055_getSWRevision() {
 485              		.loc 1 76 32 view -0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489 0000 00B5     		push	{lr}
 490              	.LCFI21:
 491              		.cfi_def_cfa_offset 4
 492              		.cfi_offset 14, -4
 493 0002 83B0     		sub	sp, sp, #12
 494              	.LCFI22:
 495              		.cfi_def_cfa_offset 16
  77:Core/Src/bno055.c ****   bno055_setPage(0);
 496              		.loc 1 77 3 view .LVU71
 497 0004 0020     		movs	r0, #0
 498 0006 FFF7FEFF 		bl	bno055_setPage
 499              	.LVL30:
  78:Core/Src/bno055.c ****   uint8_t buffer[2];
 500              		.loc 1 78 3 view .LVU72
  79:Core/Src/bno055.c ****   bno055_readData(BNO055_SW_REV_ID_LSB, buffer, 2);
 501              		.loc 1 79 3 view .LVU73
 502 000a 0222     		movs	r2, #2
 503 000c 01A9     		add	r1, sp, #4
 504 000e 0420     		movs	r0, #4
 505 0010 FFF7FEFF 		bl	bno055_readData
 506              	.LVL31:
ARM GAS  /tmp/cc0vGqAu.s 			page 11


  80:Core/Src/bno055.c ****   return (int16_t)((buffer[1] << 8) | buffer[0]);
 507              		.loc 1 80 3 view .LVU74
 508              		.loc 1 80 27 is_stmt 0 view .LVU75
 509 0014 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 510              		.loc 1 80 45 view .LVU76
 511 0018 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 512              		.loc 1 80 10 view .LVU77
 513 001c 40EA0320 		orr	r0, r0, r3, lsl #8
  81:Core/Src/bno055.c **** }
 514              		.loc 1 81 1 view .LVU78
 515 0020 00B2     		sxth	r0, r0
 516 0022 03B0     		add	sp, sp, #12
 517              	.LCFI23:
 518              		.cfi_def_cfa_offset 4
 519              		@ sp needed
 520 0024 5DF804FB 		ldr	pc, [sp], #4
 521              		.cfi_endproc
 522              	.LFE14:
 524              		.section	.text.bno055_getBootloaderRevision,"ax",%progbits
 525              		.align	1
 526              		.global	bno055_getBootloaderRevision
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 531              	bno055_getBootloaderRevision:
 532              	.LFB15:
  82:Core/Src/bno055.c **** 
  83:Core/Src/bno055.c **** uint8_t bno055_getBootloaderRevision() {
 533              		.loc 1 83 40 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 8
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537 0000 00B5     		push	{lr}
 538              	.LCFI24:
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 14, -4
 541 0002 83B0     		sub	sp, sp, #12
 542              	.LCFI25:
 543              		.cfi_def_cfa_offset 16
  84:Core/Src/bno055.c ****   bno055_setPage(0);
 544              		.loc 1 84 3 view .LVU80
 545 0004 0020     		movs	r0, #0
 546 0006 FFF7FEFF 		bl	bno055_setPage
 547              	.LVL32:
  85:Core/Src/bno055.c ****   uint8_t tmp;
 548              		.loc 1 85 3 view .LVU81
  86:Core/Src/bno055.c ****   bno055_readData(BNO055_BL_REV_ID, &tmp, 1);
 549              		.loc 1 86 3 view .LVU82
 550 000a 0122     		movs	r2, #1
 551 000c 0DF10701 		add	r1, sp, #7
 552 0010 0620     		movs	r0, #6
 553 0012 FFF7FEFF 		bl	bno055_readData
 554              	.LVL33:
  87:Core/Src/bno055.c ****   return tmp;
 555              		.loc 1 87 3 view .LVU83
  88:Core/Src/bno055.c **** }
 556              		.loc 1 88 1 is_stmt 0 view .LVU84
ARM GAS  /tmp/cc0vGqAu.s 			page 12


 557 0016 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 558 001a 03B0     		add	sp, sp, #12
 559              	.LCFI26:
 560              		.cfi_def_cfa_offset 4
 561              		@ sp needed
 562 001c 5DF804FB 		ldr	pc, [sp], #4
 563              		.cfi_endproc
 564              	.LFE15:
 566              		.section	.text.bno055_getSystemStatus,"ax",%progbits
 567              		.align	1
 568              		.global	bno055_getSystemStatus
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 573              	bno055_getSystemStatus:
 574              	.LFB16:
  89:Core/Src/bno055.c **** 
  90:Core/Src/bno055.c **** uint8_t bno055_getSystemStatus() {
 575              		.loc 1 90 34 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 8
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579 0000 00B5     		push	{lr}
 580              	.LCFI27:
 581              		.cfi_def_cfa_offset 4
 582              		.cfi_offset 14, -4
 583 0002 83B0     		sub	sp, sp, #12
 584              	.LCFI28:
 585              		.cfi_def_cfa_offset 16
  91:Core/Src/bno055.c ****   bno055_setPage(0);
 586              		.loc 1 91 3 view .LVU86
 587 0004 0020     		movs	r0, #0
 588 0006 FFF7FEFF 		bl	bno055_setPage
 589              	.LVL34:
  92:Core/Src/bno055.c ****   uint8_t tmp;
 590              		.loc 1 92 3 view .LVU87
  93:Core/Src/bno055.c ****   bno055_readData(BNO055_SYS_STATUS, &tmp, 1);
 591              		.loc 1 93 3 view .LVU88
 592 000a 0122     		movs	r2, #1
 593 000c 0DF10701 		add	r1, sp, #7
 594 0010 3920     		movs	r0, #57
 595 0012 FFF7FEFF 		bl	bno055_readData
 596              	.LVL35:
  94:Core/Src/bno055.c ****   return tmp;
 597              		.loc 1 94 3 view .LVU89
  95:Core/Src/bno055.c **** }
 598              		.loc 1 95 1 is_stmt 0 view .LVU90
 599 0016 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 600 001a 03B0     		add	sp, sp, #12
 601              	.LCFI29:
 602              		.cfi_def_cfa_offset 4
 603              		@ sp needed
 604 001c 5DF804FB 		ldr	pc, [sp], #4
 605              		.cfi_endproc
 606              	.LFE16:
 608              		.section	.text.bno055_getSelfTestResult,"ax",%progbits
 609              		.align	1
ARM GAS  /tmp/cc0vGqAu.s 			page 13


 610              		.global	bno055_getSelfTestResult
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 615              	bno055_getSelfTestResult:
 616              	.LFB17:
  96:Core/Src/bno055.c **** 
  97:Core/Src/bno055.c **** bno055_self_test_result_t bno055_getSelfTestResult() {
 617              		.loc 1 97 54 is_stmt 1 view -0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 16
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621 0000 10B5     		push	{r4, lr}
 622              	.LCFI30:
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 4, -8
 625              		.cfi_offset 14, -4
 626 0002 84B0     		sub	sp, sp, #16
 627              	.LCFI31:
 628              		.cfi_def_cfa_offset 24
  98:Core/Src/bno055.c ****   bno055_setPage(0);
 629              		.loc 1 98 3 view .LVU92
 630 0004 0020     		movs	r0, #0
 631 0006 FFF7FEFF 		bl	bno055_setPage
 632              	.LVL36:
  99:Core/Src/bno055.c ****   uint8_t tmp;
 633              		.loc 1 99 3 view .LVU93
 100:Core/Src/bno055.c ****   bno055_self_test_result_t res = {
 634              		.loc 1 100 3 view .LVU94
 635              		.loc 1 100 29 is_stmt 0 view .LVU95
 636 000a 0024     		movs	r4, #0
 637 000c 0194     		str	r4, [sp, #4]
 101:Core/Src/bno055.c ****       .mcuState = 0, .gyrState = 0, .magState = 0, .accState = 0};
 102:Core/Src/bno055.c ****   bno055_readData(BNO055_ST_RESULT, &tmp, 1);
 638              		.loc 1 102 3 is_stmt 1 view .LVU96
 639 000e 0122     		movs	r2, #1
 640 0010 0DF10B01 		add	r1, sp, #11
 641 0014 3620     		movs	r0, #54
 642 0016 FFF7FEFF 		bl	bno055_readData
 643              	.LVL37:
 103:Core/Src/bno055.c ****   res.mcuState = (tmp >> 3) & 0x01;
 644              		.loc 1 103 3 view .LVU97
 645              		.loc 1 103 29 is_stmt 0 view .LVU98
 646 001a 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2
 647 001e C3F3C002 		ubfx	r2, r3, #3, #1
 648              		.loc 1 103 16 view .LVU99
 649 0022 8DF80420 		strb	r2, [sp, #4]
 104:Core/Src/bno055.c ****   res.gyrState = (tmp >> 2) & 0x01;
 650              		.loc 1 104 3 is_stmt 1 view .LVU100
 651              		.loc 1 104 29 is_stmt 0 view .LVU101
 652 0026 C3F38002 		ubfx	r2, r3, #2, #1
 653              		.loc 1 104 16 view .LVU102
 654 002a 8DF80520 		strb	r2, [sp, #5]
 105:Core/Src/bno055.c ****   res.magState = (tmp >> 1) & 0x01;
 655              		.loc 1 105 3 is_stmt 1 view .LVU103
 656              		.loc 1 105 29 is_stmt 0 view .LVU104
 657 002e C3F34002 		ubfx	r2, r3, #1, #1
ARM GAS  /tmp/cc0vGqAu.s 			page 14


 658              		.loc 1 105 16 view .LVU105
 659 0032 8DF80620 		strb	r2, [sp, #6]
 106:Core/Src/bno055.c ****   res.accState = (tmp >> 0) & 0x01;
 660              		.loc 1 106 3 is_stmt 1 view .LVU106
 661              		.loc 1 106 29 is_stmt 0 view .LVU107
 662 0036 03F00103 		and	r3, r3, #1
 663              		.loc 1 106 16 view .LVU108
 664 003a 8DF80730 		strb	r3, [sp, #7]
 107:Core/Src/bno055.c ****   return res;
 665              		.loc 1 107 3 is_stmt 1 view .LVU109
 666              		.loc 1 107 10 is_stmt 0 view .LVU110
 667 003e 019B     		ldr	r3, [sp, #4]
 668 0040 0393     		str	r3, [sp, #12]
 669 0042 2046     		mov	r0, r4
 670 0044 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 671 0048 63F30700 		bfi	r0, r3, #0, #8
 672 004c 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 673 0050 63F30F20 		bfi	r0, r3, #8, #8
 674 0054 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
 675 0058 63F31740 		bfi	r0, r3, #16, #8
 676 005c 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 677 0060 63F31F60 		bfi	r0, r3, #24, #8
 108:Core/Src/bno055.c **** }
 678              		.loc 1 108 1 view .LVU111
 679 0064 04B0     		add	sp, sp, #16
 680              	.LCFI32:
 681              		.cfi_def_cfa_offset 8
 682              		@ sp needed
 683 0066 10BD     		pop	{r4, pc}
 684              		.cfi_endproc
 685              	.LFE17:
 687              		.section	.text.bno055_getSystemError,"ax",%progbits
 688              		.align	1
 689              		.global	bno055_getSystemError
 690              		.syntax unified
 691              		.thumb
 692              		.thumb_func
 694              	bno055_getSystemError:
 695              	.LFB18:
 109:Core/Src/bno055.c **** 
 110:Core/Src/bno055.c **** uint8_t bno055_getSystemError() {
 696              		.loc 1 110 33 is_stmt 1 view -0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 8
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700 0000 00B5     		push	{lr}
 701              	.LCFI33:
 702              		.cfi_def_cfa_offset 4
 703              		.cfi_offset 14, -4
 704 0002 83B0     		sub	sp, sp, #12
 705              	.LCFI34:
 706              		.cfi_def_cfa_offset 16
 111:Core/Src/bno055.c ****   bno055_setPage(0);
 707              		.loc 1 111 3 view .LVU113
 708 0004 0020     		movs	r0, #0
 709 0006 FFF7FEFF 		bl	bno055_setPage
 710              	.LVL38:
ARM GAS  /tmp/cc0vGqAu.s 			page 15


 112:Core/Src/bno055.c ****   uint8_t tmp;
 711              		.loc 1 112 3 view .LVU114
 113:Core/Src/bno055.c ****   bno055_readData(BNO055_SYS_ERR, &tmp, 1);
 712              		.loc 1 113 3 view .LVU115
 713 000a 0122     		movs	r2, #1
 714 000c 0DF10701 		add	r1, sp, #7
 715 0010 3A20     		movs	r0, #58
 716 0012 FFF7FEFF 		bl	bno055_readData
 717              	.LVL39:
 114:Core/Src/bno055.c ****   return tmp;
 718              		.loc 1 114 3 view .LVU116
 115:Core/Src/bno055.c **** }
 719              		.loc 1 115 1 is_stmt 0 view .LVU117
 720 0016 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 721 001a 03B0     		add	sp, sp, #12
 722              	.LCFI35:
 723              		.cfi_def_cfa_offset 4
 724              		@ sp needed
 725 001c 5DF804FB 		ldr	pc, [sp], #4
 726              		.cfi_endproc
 727              	.LFE18:
 729              		.section	.text.bno055_getCalibrationState,"ax",%progbits
 730              		.align	1
 731              		.global	bno055_getCalibrationState
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 736              	bno055_getCalibrationState:
 737              	.LFB19:
 116:Core/Src/bno055.c **** 
 117:Core/Src/bno055.c **** bno055_calibration_state_t bno055_getCalibrationState() {
 738              		.loc 1 117 57 is_stmt 1 view -0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 16
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742 0000 10B5     		push	{r4, lr}
 743              	.LCFI36:
 744              		.cfi_def_cfa_offset 8
 745              		.cfi_offset 4, -8
 746              		.cfi_offset 14, -4
 747 0002 84B0     		sub	sp, sp, #16
 748              	.LCFI37:
 749              		.cfi_def_cfa_offset 24
 118:Core/Src/bno055.c ****   bno055_setPage(0);
 750              		.loc 1 118 3 view .LVU119
 751 0004 0020     		movs	r0, #0
 752 0006 FFF7FEFF 		bl	bno055_setPage
 753              	.LVL40:
 119:Core/Src/bno055.c ****   bno055_calibration_state_t cal = {.sys = 0, .gyro = 0, .mag = 0, .accel = 0};
 754              		.loc 1 119 3 view .LVU120
 755              		.loc 1 119 30 is_stmt 0 view .LVU121
 756 000a 0024     		movs	r4, #0
 757 000c 0294     		str	r4, [sp, #8]
 120:Core/Src/bno055.c ****   uint8_t calState = 0;
 758              		.loc 1 120 3 is_stmt 1 view .LVU122
 759              		.loc 1 120 11 is_stmt 0 view .LVU123
 760 000e 8DF80740 		strb	r4, [sp, #7]
ARM GAS  /tmp/cc0vGqAu.s 			page 16


 121:Core/Src/bno055.c ****   bno055_readData(BNO055_CALIB_STAT, &calState, 1);
 761              		.loc 1 121 3 is_stmt 1 view .LVU124
 762 0012 0122     		movs	r2, #1
 763 0014 0DF10701 		add	r1, sp, #7
 764 0018 3520     		movs	r0, #53
 765 001a FFF7FEFF 		bl	bno055_readData
 766              	.LVL41:
 122:Core/Src/bno055.c ****   cal.sys = (calState >> 6) & 0x03;
 767              		.loc 1 122 3 view .LVU125
 768              		.loc 1 122 11 is_stmt 0 view .LVU126
 769 001e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 770 0022 9A09     		lsrs	r2, r3, #6
 771 0024 8DF80820 		strb	r2, [sp, #8]
 123:Core/Src/bno055.c ****   cal.gyro = (calState >> 4) & 0x03;
 772              		.loc 1 123 3 is_stmt 1 view .LVU127
 773              		.loc 1 123 30 is_stmt 0 view .LVU128
 774 0028 C3F30112 		ubfx	r2, r3, #4, #2
 775              		.loc 1 123 12 view .LVU129
 776 002c 8DF80920 		strb	r2, [sp, #9]
 124:Core/Src/bno055.c ****   cal.accel = (calState >> 2) & 0x03;
 777              		.loc 1 124 3 is_stmt 1 view .LVU130
 778              		.loc 1 124 31 is_stmt 0 view .LVU131
 779 0030 C3F38102 		ubfx	r2, r3, #2, #2
 780              		.loc 1 124 13 view .LVU132
 781 0034 8DF80B20 		strb	r2, [sp, #11]
 125:Core/Src/bno055.c ****   cal.mag = calState & 0x03;
 782              		.loc 1 125 3 is_stmt 1 view .LVU133
 783              		.loc 1 125 22 is_stmt 0 view .LVU134
 784 0038 03F00303 		and	r3, r3, #3
 785              		.loc 1 125 11 view .LVU135
 786 003c 8DF80A30 		strb	r3, [sp, #10]
 126:Core/Src/bno055.c ****   return cal;
 787              		.loc 1 126 3 is_stmt 1 view .LVU136
 788              		.loc 1 126 10 is_stmt 0 view .LVU137
 789 0040 029B     		ldr	r3, [sp, #8]
 790 0042 0393     		str	r3, [sp, #12]
 791 0044 2046     		mov	r0, r4
 792 0046 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 793 004a 63F30700 		bfi	r0, r3, #0, #8
 794 004e 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 795 0052 63F30F20 		bfi	r0, r3, #8, #8
 796 0056 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
 797 005a 63F31740 		bfi	r0, r3, #16, #8
 798 005e 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 799 0062 63F31F60 		bfi	r0, r3, #24, #8
 127:Core/Src/bno055.c **** }
 800              		.loc 1 127 1 view .LVU138
 801 0066 04B0     		add	sp, sp, #16
 802              	.LCFI38:
 803              		.cfi_def_cfa_offset 8
 804              		@ sp needed
 805 0068 10BD     		pop	{r4, pc}
 806              		.cfi_endproc
 807              	.LFE19:
 809              		.section	.text.bno055_getCalibrationData,"ax",%progbits
 810              		.align	1
 811              		.global	bno055_getCalibrationData
ARM GAS  /tmp/cc0vGqAu.s 			page 17


 812              		.syntax unified
 813              		.thumb
 814              		.thumb_func
 816              	bno055_getCalibrationData:
 817              	.LVL42:
 818              	.LFB20:
 128:Core/Src/bno055.c **** 
 129:Core/Src/bno055.c **** 
 130:Core/Src/bno055.c **** bno055_calibration_data_t bno055_getCalibrationData() {
 819              		.loc 1 130 55 is_stmt 1 view -0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 48
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823              		.loc 1 130 55 is_stmt 0 view .LVU140
 824 0000 70B5     		push	{r4, r5, r6, lr}
 825              	.LCFI39:
 826              		.cfi_def_cfa_offset 16
 827              		.cfi_offset 4, -16
 828              		.cfi_offset 5, -12
 829              		.cfi_offset 6, -8
 830              		.cfi_offset 14, -4
 831 0002 8CB0     		sub	sp, sp, #48
 832              	.LCFI40:
 833              		.cfi_def_cfa_offset 64
 834 0004 0446     		mov	r4, r0
 131:Core/Src/bno055.c ****   bno055_calibration_data_t calData;
 835              		.loc 1 131 3 is_stmt 1 view .LVU141
 132:Core/Src/bno055.c ****   uint8_t buffer[22];
 836              		.loc 1 132 3 view .LVU142
 133:Core/Src/bno055.c ****   bno055_opmode_t operationMode = bno055_getOperationMode();
 837              		.loc 1 133 3 view .LVU143
 838              		.loc 1 133 35 is_stmt 0 view .LVU144
 839 0006 FFF7FEFF 		bl	bno055_getOperationMode
 840              	.LVL43:
 841              		.loc 1 133 35 view .LVU145
 842 000a 0546     		mov	r5, r0
 843              	.LVL44:
 134:Core/Src/bno055.c ****   bno055_setOperationModeConfig();
 844              		.loc 1 134 3 is_stmt 1 view .LVU146
 845 000c FFF7FEFF 		bl	bno055_setOperationModeConfig
 846              	.LVL45:
 135:Core/Src/bno055.c ****   bno055_setPage(0);
 847              		.loc 1 135 3 view .LVU147
 848 0010 0020     		movs	r0, #0
 849 0012 FFF7FEFF 		bl	bno055_setPage
 850              	.LVL46:
 136:Core/Src/bno055.c **** 
 137:Core/Src/bno055.c ****   bno055_readData(BNO055_ACC_OFFSET_X_LSB, buffer, 22);
 851              		.loc 1 137 3 view .LVU148
 852 0016 6E46     		mov	r6, sp
 853 0018 1622     		movs	r2, #22
 854 001a 3146     		mov	r1, r6
 855 001c 5520     		movs	r0, #85
 856 001e FFF7FEFF 		bl	bno055_readData
 857              	.LVL47:
 138:Core/Src/bno055.c **** 
 139:Core/Src/bno055.c ****   // Assumes little endian processor
ARM GAS  /tmp/cc0vGqAu.s 			page 18


 140:Core/Src/bno055.c ****   memcpy(&calData.offset.accel, buffer, 6);
 858              		.loc 1 140 3 view .LVU149
 859 0022 96E80300 		ldm	r6, {r0, r1}
 860 0026 0990     		str	r0, [sp, #36]
 861 0028 ADF82810 		strh	r1, [sp, #40]	@ movhi
 141:Core/Src/bno055.c ****   memcpy(&calData.offset.mag, buffer + 6, 6);
 862              		.loc 1 141 3 view .LVU150
 863 002c DDF80630 		ldr	r3, [sp, #6]	@ unaligned
 864 0030 CDF81E30 		str	r3, [sp, #30]	@ unaligned
 865 0034 BDF80A30 		ldrh	r3, [sp, #10]	@ unaligned
 866 0038 ADF82230 		strh	r3, [sp, #34]	@ unaligned
 142:Core/Src/bno055.c ****   memcpy(&calData.offset.gyro, buffer + 12, 6);
 867              		.loc 1 142 3 view .LVU151
 868 003c 03AB     		add	r3, sp, #12
 869 003e 93E80300 		ldm	r3, {r0, r1}
 870 0042 0690     		str	r0, [sp, #24]
 871 0044 ADF81C10 		strh	r1, [sp, #28]	@ movhi
 143:Core/Src/bno055.c ****   memcpy(&calData.radius.accel, buffer + 18, 2);
 872              		.loc 1 143 3 view .LVU152
 873 0048 BDF81230 		ldrh	r3, [sp, #18]
 874 004c ADF82C30 		strh	r3, [sp, #44]	@ movhi
 144:Core/Src/bno055.c ****   memcpy(&calData.radius.mag, buffer + 20, 2);
 875              		.loc 1 144 3 view .LVU153
 876 0050 BDF81430 		ldrh	r3, [sp, #20]
 877 0054 ADF82A30 		strh	r3, [sp, #42]	@ movhi
 145:Core/Src/bno055.c **** 
 146:Core/Src/bno055.c ****   bno055_setOperationMode(operationMode);
 878              		.loc 1 146 3 view .LVU154
 879 0058 2846     		mov	r0, r5
 880 005a FFF7FEFF 		bl	bno055_setOperationMode
 881              	.LVL48:
 147:Core/Src/bno055.c **** 
 148:Core/Src/bno055.c ****   return calData;
 882              		.loc 1 148 3 view .LVU155
 883              		.loc 1 148 10 is_stmt 0 view .LVU156
 884 005e 0DF1180C 		add	ip, sp, #24
 885 0062 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 886 0066 2060     		str	r0, [r4]	@ unaligned
 887 0068 6160     		str	r1, [r4, #4]	@ unaligned
 888 006a A260     		str	r2, [r4, #8]	@ unaligned
 889 006c E360     		str	r3, [r4, #12]	@ unaligned
 890 006e DCF80000 		ldr	r0, [ip]
 891 0072 2061     		str	r0, [r4, #16]	@ unaligned
 892 0074 BCF80430 		ldrh	r3, [ip, #4]	@ unaligned
 893 0078 A382     		strh	r3, [r4, #20]	@ unaligned
 149:Core/Src/bno055.c **** }
 894              		.loc 1 149 1 view .LVU157
 895 007a 2046     		mov	r0, r4
 896 007c 0CB0     		add	sp, sp, #48
 897              	.LCFI41:
 898              		.cfi_def_cfa_offset 16
 899              		@ sp needed
 900 007e 70BD     		pop	{r4, r5, r6, pc}
 901              		.loc 1 149 1 view .LVU158
 902              		.cfi_endproc
 903              	.LFE20:
 905              		.section	.text.bno055_setCalibrationData,"ax",%progbits
ARM GAS  /tmp/cc0vGqAu.s 			page 19


 906              		.align	1
 907              		.global	bno055_setCalibrationData
 908              		.syntax unified
 909              		.thumb
 910              		.thumb_func
 912              	bno055_setCalibrationData:
 913              	.LFB21:
 150:Core/Src/bno055.c **** 
 151:Core/Src/bno055.c **** void bno055_setCalibrationData(bno055_calibration_data_t calData) {
 914              		.loc 1 151 67 is_stmt 1 view -0
 915              		.cfi_startproc
 916              		@ args = 24, pretend = 16, frame = 24
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918 0000 84B0     		sub	sp, sp, #16
 919              	.LCFI42:
 920              		.cfi_def_cfa_offset 16
 921 0002 30B5     		push	{r4, r5, lr}
 922              	.LCFI43:
 923              		.cfi_def_cfa_offset 28
 924              		.cfi_offset 4, -28
 925              		.cfi_offset 5, -24
 926              		.cfi_offset 14, -20
 927 0004 87B0     		sub	sp, sp, #28
 928              	.LCFI44:
 929              		.cfi_def_cfa_offset 56
 930 0006 0AAC     		add	r4, sp, #40
 931 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
 152:Core/Src/bno055.c ****   uint8_t buffer[22];
 932              		.loc 1 152 3 view .LVU160
 153:Core/Src/bno055.c ****   bno055_opmode_t operationMode = bno055_getOperationMode();
 933              		.loc 1 153 3 view .LVU161
 934              		.loc 1 153 35 is_stmt 0 view .LVU162
 935 000c FFF7FEFF 		bl	bno055_getOperationMode
 936              	.LVL49:
 937 0010 0546     		mov	r5, r0
 938              	.LVL50:
 154:Core/Src/bno055.c ****   bno055_setOperationModeConfig();
 939              		.loc 1 154 3 is_stmt 1 view .LVU163
 940 0012 FFF7FEFF 		bl	bno055_setOperationModeConfig
 941              	.LVL51:
 155:Core/Src/bno055.c ****   bno055_setPage(0);
 942              		.loc 1 155 3 view .LVU164
 943 0016 0020     		movs	r0, #0
 944 0018 FFF7FEFF 		bl	bno055_setPage
 945              	.LVL52:
 156:Core/Src/bno055.c **** 
 157:Core/Src/bno055.c ****   // Assumes litle endian processor
 158:Core/Src/bno055.c ****   memcpy(buffer, &calData.offset.accel, 6);
 946              		.loc 1 158 3 view .LVU165
 947 001c 0D98     		ldr	r0, [sp, #52]	@ unaligned
 948 001e 0090     		str	r0, [sp]
 949 0020 BDF83830 		ldrh	r3, [sp, #56]	@ unaligned
 950 0024 ADF80430 		strh	r3, [sp, #4]	@ unaligned
 159:Core/Src/bno055.c ****   memcpy(buffer + 6, &calData.offset.mag, 6);
 951              		.loc 1 159 3 view .LVU166
 952 0028 DDF82E30 		ldr	r3, [sp, #46]	@ unaligned
 953 002c CDF80630 		str	r3, [sp, #6]	@ unaligned
ARM GAS  /tmp/cc0vGqAu.s 			page 20


 954 0030 BDF83230 		ldrh	r3, [sp, #50]	@ unaligned
 955 0034 ADF80A30 		strh	r3, [sp, #10]	@ unaligned
 160:Core/Src/bno055.c ****   memcpy(buffer + 12, &calData.offset.gyro, 6);
 956              		.loc 1 160 3 view .LVU167
 957 0038 0A98     		ldr	r0, [sp, #40]	@ unaligned
 958 003a 0390     		str	r0, [sp, #12]
 959 003c BDF82C30 		ldrh	r3, [sp, #44]	@ unaligned
 960 0040 ADF81030 		strh	r3, [sp, #16]	@ unaligned
 161:Core/Src/bno055.c ****   memcpy(buffer + 18, &calData.radius.accel, 2);
 961              		.loc 1 161 3 view .LVU168
 962 0044 BDF83C30 		ldrh	r3, [sp, #60]
 963 0048 ADF81230 		strh	r3, [sp, #18]	@ movhi
 162:Core/Src/bno055.c ****   memcpy(buffer + 20, &calData.radius.mag, 2);
 964              		.loc 1 162 3 view .LVU169
 965 004c BDF83A30 		ldrh	r3, [sp, #58]
 966 0050 ADF81430 		strh	r3, [sp, #20]	@ movhi
 163:Core/Src/bno055.c **** 
 164:Core/Src/bno055.c ****   for (uint8_t i=0; i < 22; i++) {
 967              		.loc 1 164 3 view .LVU170
 968              	.LBB2:
 969              		.loc 1 164 8 view .LVU171
 970              	.LVL53:
 971              		.loc 1 164 16 is_stmt 0 view .LVU172
 972 0054 0024     		movs	r4, #0
 973              		.loc 1 164 3 view .LVU173
 974 0056 0BE0     		b	.L46
 975              	.LVL54:
 976              	.L47:
 165:Core/Src/bno055.c ****     // TODO(oliv4945): create multibytes write
 166:Core/Src/bno055.c ****     bno055_writeData(BNO055_ACC_OFFSET_X_LSB+i, buffer[i]);
 977              		.loc 1 166 5 is_stmt 1 discriminator 3 view .LVU174
 978 0058 04F11803 		add	r3, r4, #24
 979 005c 6B44     		add	r3, sp, r3
 980 005e 04F15500 		add	r0, r4, #85
 981 0062 13F8181C 		ldrb	r1, [r3, #-24]	@ zero_extendqisi2
 982 0066 C0B2     		uxtb	r0, r0
 983 0068 FFF7FEFF 		bl	bno055_writeData
 984              	.LVL55:
 164:Core/Src/bno055.c ****     // TODO(oliv4945): create multibytes write
 985              		.loc 1 164 30 discriminator 3 view .LVU175
 986 006c 0134     		adds	r4, r4, #1
 987              	.LVL56:
 164:Core/Src/bno055.c ****     // TODO(oliv4945): create multibytes write
 988              		.loc 1 164 30 is_stmt 0 discriminator 3 view .LVU176
 989 006e E4B2     		uxtb	r4, r4
 990              	.LVL57:
 991              	.L46:
 164:Core/Src/bno055.c ****     // TODO(oliv4945): create multibytes write
 992              		.loc 1 164 23 is_stmt 1 discriminator 1 view .LVU177
 993 0070 152C     		cmp	r4, #21
 994 0072 F1D9     		bls	.L47
 995              	.LBE2:
 167:Core/Src/bno055.c ****   }
 168:Core/Src/bno055.c **** 
 169:Core/Src/bno055.c ****   bno055_setOperationMode(operationMode);
 996              		.loc 1 169 3 view .LVU178
 997 0074 2846     		mov	r0, r5
ARM GAS  /tmp/cc0vGqAu.s 			page 21


 998 0076 FFF7FEFF 		bl	bno055_setOperationMode
 999              	.LVL58:
 170:Core/Src/bno055.c **** }
 1000              		.loc 1 170 1 is_stmt 0 view .LVU179
 1001 007a 07B0     		add	sp, sp, #28
 1002              	.LCFI45:
 1003              		.cfi_def_cfa_offset 28
 1004              		@ sp needed
 1005 007c BDE83040 		pop	{r4, r5, lr}
 1006              	.LCFI46:
 1007              		.cfi_restore 14
 1008              		.cfi_restore 5
 1009              		.cfi_restore 4
 1010              		.cfi_def_cfa_offset 16
 1011              	.LVL59:
 1012              		.loc 1 170 1 view .LVU180
 1013 0080 04B0     		add	sp, sp, #16
 1014              	.LCFI47:
 1015              		.cfi_def_cfa_offset 0
 1016 0082 7047     		bx	lr
 1017              		.cfi_endproc
 1018              	.LFE21:
 1020              		.global	__aeabi_ui2d
 1021              		.global	__aeabi_i2d
 1022              		.global	__aeabi_ddiv
 1023              		.section	.text.bno055_getVector,"ax",%progbits
 1024              		.align	1
 1025              		.global	bno055_getVector
 1026              		.syntax unified
 1027              		.thumb
 1028              		.thumb_func
 1030              	bno055_getVector:
 1031              	.LVL60:
 1032              	.LFB22:
 171:Core/Src/bno055.c **** 
 172:Core/Src/bno055.c **** bno055_vector_t bno055_getVector(uint8_t vec) {
 1033              		.loc 1 172 47 is_stmt 1 view -0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 104
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              		.loc 1 172 47 is_stmt 0 view .LVU182
 1038 0000 D0B5     		push	{r4, r6, r7, lr}
 1039              	.LCFI48:
 1040              		.cfi_def_cfa_offset 16
 1041              		.cfi_offset 4, -16
 1042              		.cfi_offset 6, -12
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 14, -4
 1045 0002 9AB0     		sub	sp, sp, #104
 1046              	.LCFI49:
 1047              		.cfi_def_cfa_offset 120
 1048 0004 0446     		mov	r4, r0
 173:Core/Src/bno055.c ****   bno055_setPage(0);
 1049              		.loc 1 173 3 is_stmt 1 view .LVU183
 1050 0006 0020     		movs	r0, #0
 1051              	.LVL61:
 1052              		.loc 1 173 3 is_stmt 0 view .LVU184
ARM GAS  /tmp/cc0vGqAu.s 			page 22


 1053 0008 FFF7FEFF 		bl	bno055_setPage
 1054              	.LVL62:
 174:Core/Src/bno055.c ****   uint8_t buffer[8];    // Quaternion need 8 bytes
 1055              		.loc 1 174 3 is_stmt 1 view .LVU185
 175:Core/Src/bno055.c **** 
 176:Core/Src/bno055.c ****   if (vec == BNO055_VECTOR_QUATERNION)
 1056              		.loc 1 176 3 view .LVU186
 1057              		.loc 1 176 6 is_stmt 0 view .LVU187
 1058 000c 202C     		cmp	r4, #32
 1059 000e 20D0     		beq	.L63
 177:Core/Src/bno055.c ****     bno055_readData(vec, buffer, 8);
 178:Core/Src/bno055.c ****   else
 179:Core/Src/bno055.c ****     bno055_readData(vec, buffer, 6);
 1060              		.loc 1 179 5 is_stmt 1 view .LVU188
 1061 0010 0622     		movs	r2, #6
 1062 0012 18A9     		add	r1, sp, #96
 1063 0014 2046     		mov	r0, r4
 1064 0016 FFF7FEFF 		bl	bno055_readData
 1065              	.LVL63:
 1066              	.L51:
 180:Core/Src/bno055.c **** 
 181:Core/Src/bno055.c ****   double scale = 1;
 1067              		.loc 1 181 3 view .LVU189
 182:Core/Src/bno055.c **** 
 183:Core/Src/bno055.c ****   if (vec == BNO055_VECTOR_MAGNETOMETER) {
 1068              		.loc 1 183 3 view .LVU190
 1069              		.loc 1 183 6 is_stmt 0 view .LVU191
 1070 001a 0E2C     		cmp	r4, #14
 1071 001c 1FD0     		beq	.L64
 184:Core/Src/bno055.c ****     scale = magScale;
 185:Core/Src/bno055.c ****   } else if (vec == BNO055_VECTOR_ACCELEROMETER ||
 1072              		.loc 1 185 10 is_stmt 1 view .LVU192
 1073 001e A4F10803 		sub	r3, r4, #8
 1074 0022 262B     		cmp	r3, #38
 1075 0024 3ED8     		bhi	.L61
 1076 0026 DFE803F0 		tbb	[pc, r3]
 1077              	.L55:
 1078 002a 21       		.byte	(.L54-.L55)/2
 1079 002b 3D       		.byte	(.L61-.L55)/2
 1080 002c 3D       		.byte	(.L61-.L55)/2
 1081 002d 3D       		.byte	(.L61-.L55)/2
 1082 002e 3D       		.byte	(.L61-.L55)/2
 1083 002f 3D       		.byte	(.L61-.L55)/2
 1084 0030 3D       		.byte	(.L61-.L55)/2
 1085 0031 3D       		.byte	(.L61-.L55)/2
 1086 0032 3D       		.byte	(.L61-.L55)/2
 1087 0033 3D       		.byte	(.L61-.L55)/2
 1088 0034 3D       		.byte	(.L61-.L55)/2
 1089 0035 3D       		.byte	(.L61-.L55)/2
 1090 0036 28       		.byte	(.L58-.L55)/2
 1091 0037 3D       		.byte	(.L61-.L55)/2
 1092 0038 3D       		.byte	(.L61-.L55)/2
 1093 0039 3D       		.byte	(.L61-.L55)/2
 1094 003a 3D       		.byte	(.L61-.L55)/2
 1095 003b 3D       		.byte	(.L61-.L55)/2
 1096 003c 2F       		.byte	(.L57-.L55)/2
 1097 003d 3D       		.byte	(.L61-.L55)/2
ARM GAS  /tmp/cc0vGqAu.s 			page 23


 1098 003e 3D       		.byte	(.L61-.L55)/2
 1099 003f 3D       		.byte	(.L61-.L55)/2
 1100 0040 3D       		.byte	(.L61-.L55)/2
 1101 0041 3D       		.byte	(.L61-.L55)/2
 1102 0042 36       		.byte	(.L56-.L55)/2
 1103 0043 3D       		.byte	(.L61-.L55)/2
 1104 0044 3D       		.byte	(.L61-.L55)/2
 1105 0045 3D       		.byte	(.L61-.L55)/2
 1106 0046 3D       		.byte	(.L61-.L55)/2
 1107 0047 3D       		.byte	(.L61-.L55)/2
 1108 0048 3D       		.byte	(.L61-.L55)/2
 1109 0049 3D       		.byte	(.L61-.L55)/2
 1110 004a 21       		.byte	(.L54-.L55)/2
 1111 004b 3D       		.byte	(.L61-.L55)/2
 1112 004c 3D       		.byte	(.L61-.L55)/2
 1113 004d 3D       		.byte	(.L61-.L55)/2
 1114 004e 3D       		.byte	(.L61-.L55)/2
 1115 004f 3D       		.byte	(.L61-.L55)/2
 1116 0050 21       		.byte	(.L54-.L55)/2
 1117              	.LVL64:
 1118 0051 00       		.p2align 1
 1119              	.L63:
 177:Core/Src/bno055.c ****   else
 1120              		.loc 1 177 5 view .LVU193
 1121 0052 0822     		movs	r2, #8
 1122 0054 18A9     		add	r1, sp, #96
 1123 0056 2046     		mov	r0, r4
 1124 0058 FFF7FEFF 		bl	bno055_readData
 1125              	.LVL65:
 1126 005c DDE7     		b	.L51
 1127              	.LVL66:
 1128              	.L64:
 184:Core/Src/bno055.c ****     scale = magScale;
 1129              		.loc 1 184 5 view .LVU194
 184:Core/Src/bno055.c ****     scale = magScale;
 1130              		.loc 1 184 11 is_stmt 0 view .LVU195
 1131 005e 564B     		ldr	r3, .L66
 1132 0060 1888     		ldrh	r0, [r3]
 1133 0062 FFF7FEFF 		bl	__aeabi_ui2d
 1134              	.LVL67:
 1135 0066 0646     		mov	r6, r0
 1136 0068 0F46     		mov	r7, r1
 1137              	.LVL68:
 184:Core/Src/bno055.c ****     scale = magScale;
 1138              		.loc 1 184 11 view .LVU196
 1139 006a 1DE0     		b	.L53
 1140              	.LVL69:
 1141              	.L54:
 186:Core/Src/bno055.c ****            vec == BNO055_VECTOR_LINEARACCEL || vec == BNO055_VECTOR_GRAVITY) {
 187:Core/Src/bno055.c ****     scale = accelScale;
 1142              		.loc 1 187 5 is_stmt 1 view .LVU197
 1143              		.loc 1 187 11 is_stmt 0 view .LVU198
 1144 006c 534B     		ldr	r3, .L66+4
 1145 006e 1888     		ldrh	r0, [r3]
 1146 0070 FFF7FEFF 		bl	__aeabi_ui2d
 1147              	.LVL70:
 1148 0074 0646     		mov	r6, r0
ARM GAS  /tmp/cc0vGqAu.s 			page 24


 1149 0076 0F46     		mov	r7, r1
 1150              	.LVL71:
 1151              		.loc 1 187 11 view .LVU199
 1152 0078 16E0     		b	.L53
 1153              	.LVL72:
 1154              	.L58:
 188:Core/Src/bno055.c ****   } else if (vec == BNO055_VECTOR_GYROSCOPE) {
 189:Core/Src/bno055.c ****     scale = angularRateScale;
 1155              		.loc 1 189 5 is_stmt 1 view .LVU200
 1156              		.loc 1 189 11 is_stmt 0 view .LVU201
 1157 007a 514B     		ldr	r3, .L66+8
 1158 007c 1888     		ldrh	r0, [r3]
 1159 007e FFF7FEFF 		bl	__aeabi_ui2d
 1160              	.LVL73:
 1161 0082 0646     		mov	r6, r0
 1162 0084 0F46     		mov	r7, r1
 1163              	.LVL74:
 1164              		.loc 1 189 11 view .LVU202
 1165 0086 0FE0     		b	.L53
 1166              	.LVL75:
 1167              	.L57:
 190:Core/Src/bno055.c ****   } else if (vec == BNO055_VECTOR_EULER) {
 191:Core/Src/bno055.c ****     scale = eulerScale;
 1168              		.loc 1 191 5 is_stmt 1 view .LVU203
 1169              		.loc 1 191 11 is_stmt 0 view .LVU204
 1170 0088 4E4B     		ldr	r3, .L66+12
 1171 008a 1888     		ldrh	r0, [r3]
 1172 008c FFF7FEFF 		bl	__aeabi_ui2d
 1173              	.LVL76:
 1174 0090 0646     		mov	r6, r0
 1175 0092 0F46     		mov	r7, r1
 1176              	.LVL77:
 1177              		.loc 1 191 11 view .LVU205
 1178 0094 08E0     		b	.L53
 1179              	.LVL78:
 1180              	.L56:
 192:Core/Src/bno055.c ****   } else if (vec == BNO055_VECTOR_QUATERNION) {
 193:Core/Src/bno055.c ****     scale = quaScale;
 1181              		.loc 1 193 5 is_stmt 1 view .LVU206
 1182              		.loc 1 193 11 is_stmt 0 view .LVU207
 1183 0096 4C4B     		ldr	r3, .L66+16
 1184 0098 1888     		ldrh	r0, [r3]
 1185 009a FFF7FEFF 		bl	__aeabi_ui2d
 1186              	.LVL79:
 1187 009e 0646     		mov	r6, r0
 1188 00a0 0F46     		mov	r7, r1
 1189              	.LVL80:
 1190              		.loc 1 193 11 view .LVU208
 1191 00a2 01E0     		b	.L53
 1192              	.LVL81:
 1193              	.L61:
 183:Core/Src/bno055.c ****     scale = magScale;
 1194              		.loc 1 183 6 view .LVU209
 1195 00a4 0026     		movs	r6, #0
 1196 00a6 494F     		ldr	r7, .L66+20
 1197              	.LVL82:
 1198              	.L53:
ARM GAS  /tmp/cc0vGqAu.s 			page 25


 194:Core/Src/bno055.c ****   }
 195:Core/Src/bno055.c **** 
 196:Core/Src/bno055.c ****   bno055_vector_t xyz = {.w = 0, .x = 0, .y = 0, .z = 0};
 1199              		.loc 1 196 3 is_stmt 1 view .LVU210
 1200              		.loc 1 196 19 is_stmt 0 view .LVU211
 1201 00a8 2022     		movs	r2, #32
 1202 00aa 0021     		movs	r1, #0
 1203 00ac 10A8     		add	r0, sp, #64
 1204 00ae FFF7FEFF 		bl	memset
 1205              	.LVL83:
 197:Core/Src/bno055.c ****   if (vec == BNO055_VECTOR_QUATERNION) {
 1206              		.loc 1 197 3 is_stmt 1 view .LVU212
 1207              		.loc 1 197 6 is_stmt 0 view .LVU213
 1208 00b2 202C     		cmp	r4, #32
 1209 00b4 42D0     		beq	.L65
 198:Core/Src/bno055.c ****     xyz.w = (int16_t)((buffer[1] << 8) | buffer[0]) / scale;
 199:Core/Src/bno055.c ****     xyz.x = (int16_t)((buffer[3] << 8) | buffer[2]) / scale;
 200:Core/Src/bno055.c ****     xyz.y = (int16_t)((buffer[5] << 8) | buffer[4]) / scale;
 201:Core/Src/bno055.c ****     xyz.z = (int16_t)((buffer[7] << 8) | buffer[6]) / scale;
 202:Core/Src/bno055.c ****   } else {
 203:Core/Src/bno055.c ****     xyz.x = (int16_t)((buffer[1] << 8) | buffer[0]) / scale;
 1210              		.loc 1 203 5 is_stmt 1 view .LVU214
 1211              		.loc 1 203 30 is_stmt 0 view .LVU215
 1212 00b6 9DF86130 		ldrb	r3, [sp, #97]	@ zero_extendqisi2
 1213              		.loc 1 203 48 view .LVU216
 1214 00ba 9DF86000 		ldrb	r0, [sp, #96]	@ zero_extendqisi2
 1215              		.loc 1 203 13 view .LVU217
 1216 00be 40EA0320 		orr	r0, r0, r3, lsl #8
 1217              		.loc 1 203 53 view .LVU218
 1218 00c2 00B2     		sxth	r0, r0
 1219 00c4 FFF7FEFF 		bl	__aeabi_i2d
 1220              	.LVL84:
 1221 00c8 3246     		mov	r2, r6
 1222 00ca 3B46     		mov	r3, r7
 1223 00cc FFF7FEFF 		bl	__aeabi_ddiv
 1224              	.LVL85:
 1225              		.loc 1 203 11 view .LVU219
 1226 00d0 CDE91201 		strd	r0, [sp, #72]
 204:Core/Src/bno055.c ****     xyz.y = (int16_t)((buffer[3] << 8) | buffer[2]) / scale;
 1227              		.loc 1 204 5 is_stmt 1 view .LVU220
 1228              		.loc 1 204 30 is_stmt 0 view .LVU221
 1229 00d4 9DF86330 		ldrb	r3, [sp, #99]	@ zero_extendqisi2
 1230              		.loc 1 204 48 view .LVU222
 1231 00d8 9DF86200 		ldrb	r0, [sp, #98]	@ zero_extendqisi2
 1232              		.loc 1 204 13 view .LVU223
 1233 00dc 40EA0320 		orr	r0, r0, r3, lsl #8
 1234              		.loc 1 204 53 view .LVU224
 1235 00e0 00B2     		sxth	r0, r0
 1236 00e2 FFF7FEFF 		bl	__aeabi_i2d
 1237              	.LVL86:
 1238 00e6 3246     		mov	r2, r6
 1239 00e8 3B46     		mov	r3, r7
 1240 00ea FFF7FEFF 		bl	__aeabi_ddiv
 1241              	.LVL87:
 1242              		.loc 1 204 11 view .LVU225
 1243 00ee CDE91401 		strd	r0, [sp, #80]
 205:Core/Src/bno055.c ****     xyz.z = (int16_t)((buffer[5] << 8) | buffer[4]) / scale;
ARM GAS  /tmp/cc0vGqAu.s 			page 26


 1244              		.loc 1 205 5 is_stmt 1 view .LVU226
 1245              		.loc 1 205 30 is_stmt 0 view .LVU227
 1246 00f2 9DF86530 		ldrb	r3, [sp, #101]	@ zero_extendqisi2
 1247              		.loc 1 205 48 view .LVU228
 1248 00f6 9DF86400 		ldrb	r0, [sp, #100]	@ zero_extendqisi2
 1249              		.loc 1 205 13 view .LVU229
 1250 00fa 40EA0320 		orr	r0, r0, r3, lsl #8
 1251              		.loc 1 205 53 view .LVU230
 1252 00fe 00B2     		sxth	r0, r0
 1253 0100 FFF7FEFF 		bl	__aeabi_i2d
 1254              	.LVL88:
 1255 0104 3246     		mov	r2, r6
 1256 0106 3B46     		mov	r3, r7
 1257 0108 FFF7FEFF 		bl	__aeabi_ddiv
 1258              	.LVL89:
 1259              		.loc 1 205 11 view .LVU231
 1260 010c CDE91601 		strd	r0, [sp, #88]
 1261              	.L60:
 206:Core/Src/bno055.c ****   }
 207:Core/Src/bno055.c **** 
 208:Core/Src/bno055.c ****   return xyz;
 1262              		.loc 1 208 3 is_stmt 1 view .LVU232
 1263              		.loc 1 208 10 is_stmt 0 view .LVU233
 1264 0110 0DF1200C 		add	ip, sp, #32
 1265 0114 0DF1400E 		add	lr, sp, #64
 1266 0118 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1267 011c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1268 0120 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 1269 0124 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 209:Core/Src/bno055.c **** }
 1270              		.loc 1 209 1 view .LVU234
 1271 0128 9DED080B 		vldr.64	d0, [sp, #32]
 1272 012c 9DED0A1B 		vldr.64	d1, [sp, #40]
 1273 0130 9DED0C2B 		vldr.64	d2, [sp, #48]
 1274 0134 9DED0E3B 		vldr.64	d3, [sp, #56]
 1275 0138 1AB0     		add	sp, sp, #104
 1276              	.LCFI50:
 1277              		.cfi_remember_state
 1278              		.cfi_def_cfa_offset 16
 1279              		@ sp needed
 1280 013a D0BD     		pop	{r4, r6, r7, pc}
 1281              	.LVL90:
 1282              	.L65:
 1283              	.LCFI51:
 1284              		.cfi_restore_state
 198:Core/Src/bno055.c ****     xyz.x = (int16_t)((buffer[3] << 8) | buffer[2]) / scale;
 1285              		.loc 1 198 5 is_stmt 1 view .LVU235
 198:Core/Src/bno055.c ****     xyz.x = (int16_t)((buffer[3] << 8) | buffer[2]) / scale;
 1286              		.loc 1 198 30 is_stmt 0 view .LVU236
 1287 013c 9DF86130 		ldrb	r3, [sp, #97]	@ zero_extendqisi2
 198:Core/Src/bno055.c ****     xyz.x = (int16_t)((buffer[3] << 8) | buffer[2]) / scale;
 1288              		.loc 1 198 48 view .LVU237
 1289 0140 9DF86000 		ldrb	r0, [sp, #96]	@ zero_extendqisi2
 198:Core/Src/bno055.c ****     xyz.x = (int16_t)((buffer[3] << 8) | buffer[2]) / scale;
 1290              		.loc 1 198 13 view .LVU238
 1291 0144 40EA0320 		orr	r0, r0, r3, lsl #8
 198:Core/Src/bno055.c ****     xyz.x = (int16_t)((buffer[3] << 8) | buffer[2]) / scale;
ARM GAS  /tmp/cc0vGqAu.s 			page 27


 1292              		.loc 1 198 53 view .LVU239
 1293 0148 00B2     		sxth	r0, r0
 1294 014a FFF7FEFF 		bl	__aeabi_i2d
 1295              	.LVL91:
 1296 014e 3246     		mov	r2, r6
 1297 0150 3B46     		mov	r3, r7
 1298 0152 FFF7FEFF 		bl	__aeabi_ddiv
 1299              	.LVL92:
 198:Core/Src/bno055.c ****     xyz.x = (int16_t)((buffer[3] << 8) | buffer[2]) / scale;
 1300              		.loc 1 198 11 view .LVU240
 1301 0156 CDE91001 		strd	r0, [sp, #64]
 199:Core/Src/bno055.c ****     xyz.y = (int16_t)((buffer[5] << 8) | buffer[4]) / scale;
 1302              		.loc 1 199 5 is_stmt 1 view .LVU241
 199:Core/Src/bno055.c ****     xyz.y = (int16_t)((buffer[5] << 8) | buffer[4]) / scale;
 1303              		.loc 1 199 30 is_stmt 0 view .LVU242
 1304 015a 9DF86330 		ldrb	r3, [sp, #99]	@ zero_extendqisi2
 199:Core/Src/bno055.c ****     xyz.y = (int16_t)((buffer[5] << 8) | buffer[4]) / scale;
 1305              		.loc 1 199 48 view .LVU243
 1306 015e 9DF86200 		ldrb	r0, [sp, #98]	@ zero_extendqisi2
 199:Core/Src/bno055.c ****     xyz.y = (int16_t)((buffer[5] << 8) | buffer[4]) / scale;
 1307              		.loc 1 199 13 view .LVU244
 1308 0162 40EA0320 		orr	r0, r0, r3, lsl #8
 199:Core/Src/bno055.c ****     xyz.y = (int16_t)((buffer[5] << 8) | buffer[4]) / scale;
 1309              		.loc 1 199 53 view .LVU245
 1310 0166 00B2     		sxth	r0, r0
 1311 0168 FFF7FEFF 		bl	__aeabi_i2d
 1312              	.LVL93:
 1313 016c 3246     		mov	r2, r6
 1314 016e 3B46     		mov	r3, r7
 1315 0170 FFF7FEFF 		bl	__aeabi_ddiv
 1316              	.LVL94:
 199:Core/Src/bno055.c ****     xyz.y = (int16_t)((buffer[5] << 8) | buffer[4]) / scale;
 1317              		.loc 1 199 11 view .LVU246
 1318 0174 CDE91201 		strd	r0, [sp, #72]
 200:Core/Src/bno055.c ****     xyz.z = (int16_t)((buffer[7] << 8) | buffer[6]) / scale;
 1319              		.loc 1 200 5 is_stmt 1 view .LVU247
 200:Core/Src/bno055.c ****     xyz.z = (int16_t)((buffer[7] << 8) | buffer[6]) / scale;
 1320              		.loc 1 200 30 is_stmt 0 view .LVU248
 1321 0178 9DF86530 		ldrb	r3, [sp, #101]	@ zero_extendqisi2
 200:Core/Src/bno055.c ****     xyz.z = (int16_t)((buffer[7] << 8) | buffer[6]) / scale;
 1322              		.loc 1 200 48 view .LVU249
 1323 017c 9DF86400 		ldrb	r0, [sp, #100]	@ zero_extendqisi2
 200:Core/Src/bno055.c ****     xyz.z = (int16_t)((buffer[7] << 8) | buffer[6]) / scale;
 1324              		.loc 1 200 13 view .LVU250
 1325 0180 40EA0320 		orr	r0, r0, r3, lsl #8
 200:Core/Src/bno055.c ****     xyz.z = (int16_t)((buffer[7] << 8) | buffer[6]) / scale;
 1326              		.loc 1 200 53 view .LVU251
 1327 0184 00B2     		sxth	r0, r0
 1328 0186 FFF7FEFF 		bl	__aeabi_i2d
 1329              	.LVL95:
 1330 018a 3246     		mov	r2, r6
 1331 018c 3B46     		mov	r3, r7
 1332 018e FFF7FEFF 		bl	__aeabi_ddiv
 1333              	.LVL96:
 200:Core/Src/bno055.c ****     xyz.z = (int16_t)((buffer[7] << 8) | buffer[6]) / scale;
 1334              		.loc 1 200 11 view .LVU252
 1335 0192 CDE91401 		strd	r0, [sp, #80]
ARM GAS  /tmp/cc0vGqAu.s 			page 28


 201:Core/Src/bno055.c ****   } else {
 1336              		.loc 1 201 5 is_stmt 1 view .LVU253
 201:Core/Src/bno055.c ****   } else {
 1337              		.loc 1 201 30 is_stmt 0 view .LVU254
 1338 0196 9DF86730 		ldrb	r3, [sp, #103]	@ zero_extendqisi2
 201:Core/Src/bno055.c ****   } else {
 1339              		.loc 1 201 48 view .LVU255
 1340 019a 9DF86600 		ldrb	r0, [sp, #102]	@ zero_extendqisi2
 201:Core/Src/bno055.c ****   } else {
 1341              		.loc 1 201 13 view .LVU256
 1342 019e 40EA0320 		orr	r0, r0, r3, lsl #8
 201:Core/Src/bno055.c ****   } else {
 1343              		.loc 1 201 53 view .LVU257
 1344 01a2 00B2     		sxth	r0, r0
 1345 01a4 FFF7FEFF 		bl	__aeabi_i2d
 1346              	.LVL97:
 1347 01a8 3246     		mov	r2, r6
 1348 01aa 3B46     		mov	r3, r7
 1349 01ac FFF7FEFF 		bl	__aeabi_ddiv
 1350              	.LVL98:
 201:Core/Src/bno055.c ****   } else {
 1351              		.loc 1 201 11 view .LVU258
 1352 01b0 CDE91601 		strd	r0, [sp, #88]
 1353 01b4 ACE7     		b	.L60
 1354              	.L67:
 1355 01b6 00BF     		.align	2
 1356              	.L66:
 1357 01b8 00000000 		.word	magScale
 1358 01bc 00000000 		.word	accelScale
 1359 01c0 00000000 		.word	angularRateScale
 1360 01c4 00000000 		.word	eulerScale
 1361 01c8 00000000 		.word	quaScale
 1362 01cc 0000F03F 		.word	1072693248
 1363              		.cfi_endproc
 1364              	.LFE22:
 1366              		.section	.text.bno055_getVectorAccelerometer,"ax",%progbits
 1367              		.align	1
 1368              		.global	bno055_getVectorAccelerometer
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
 1373              	bno055_getVectorAccelerometer:
 1374              	.LFB23:
 210:Core/Src/bno055.c **** 
 211:Core/Src/bno055.c **** bno055_vector_t bno055_getVectorAccelerometer() {
 1375              		.loc 1 211 49 is_stmt 1 view -0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 64
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379 0000 00B5     		push	{lr}
 1380              	.LCFI52:
 1381              		.cfi_def_cfa_offset 4
 1382              		.cfi_offset 14, -4
 1383 0002 91B0     		sub	sp, sp, #68
 1384              	.LCFI53:
 1385              		.cfi_def_cfa_offset 72
 212:Core/Src/bno055.c ****   return bno055_getVector(BNO055_VECTOR_ACCELEROMETER);
ARM GAS  /tmp/cc0vGqAu.s 			page 29


 1386              		.loc 1 212 3 view .LVU260
 1387              		.loc 1 212 10 is_stmt 0 view .LVU261
 1388 0004 0820     		movs	r0, #8
 1389 0006 FFF7FEFF 		bl	bno055_getVector
 1390              	.LVL99:
 1391 000a 8DED080B 		vstr.64	d0, [sp, #32]
 1392 000e 8DED0A1B 		vstr.64	d1, [sp, #40]
 1393 0012 8DED0C2B 		vstr.64	d2, [sp, #48]
 1394 0016 8DED0E3B 		vstr.64	d3, [sp, #56]
 213:Core/Src/bno055.c **** }
 1395              		.loc 1 213 1 view .LVU262
 1396 001a 11B0     		add	sp, sp, #68
 1397              	.LCFI54:
 1398              		.cfi_def_cfa_offset 4
 1399              		@ sp needed
 1400 001c 5DF804FB 		ldr	pc, [sp], #4
 1401              		.cfi_endproc
 1402              	.LFE23:
 1404              		.section	.text.bno055_getVectorMagnetometer,"ax",%progbits
 1405              		.align	1
 1406              		.global	bno055_getVectorMagnetometer
 1407              		.syntax unified
 1408              		.thumb
 1409              		.thumb_func
 1411              	bno055_getVectorMagnetometer:
 1412              	.LFB24:
 214:Core/Src/bno055.c **** bno055_vector_t bno055_getVectorMagnetometer() {
 1413              		.loc 1 214 48 is_stmt 1 view -0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 64
 1416              		@ frame_needed = 0, uses_anonymous_args = 0
 1417 0000 00B5     		push	{lr}
 1418              	.LCFI55:
 1419              		.cfi_def_cfa_offset 4
 1420              		.cfi_offset 14, -4
 1421 0002 91B0     		sub	sp, sp, #68
 1422              	.LCFI56:
 1423              		.cfi_def_cfa_offset 72
 215:Core/Src/bno055.c ****   return bno055_getVector(BNO055_VECTOR_MAGNETOMETER);
 1424              		.loc 1 215 3 view .LVU264
 1425              		.loc 1 215 10 is_stmt 0 view .LVU265
 1426 0004 0E20     		movs	r0, #14
 1427 0006 FFF7FEFF 		bl	bno055_getVector
 1428              	.LVL100:
 1429 000a 8DED080B 		vstr.64	d0, [sp, #32]
 1430 000e 8DED0A1B 		vstr.64	d1, [sp, #40]
 1431 0012 8DED0C2B 		vstr.64	d2, [sp, #48]
 1432 0016 8DED0E3B 		vstr.64	d3, [sp, #56]
 216:Core/Src/bno055.c **** }
 1433              		.loc 1 216 1 view .LVU266
 1434 001a 11B0     		add	sp, sp, #68
 1435              	.LCFI57:
 1436              		.cfi_def_cfa_offset 4
 1437              		@ sp needed
 1438 001c 5DF804FB 		ldr	pc, [sp], #4
 1439              		.cfi_endproc
 1440              	.LFE24:
ARM GAS  /tmp/cc0vGqAu.s 			page 30


 1442              		.section	.text.bno055_getVectorGyroscope,"ax",%progbits
 1443              		.align	1
 1444              		.global	bno055_getVectorGyroscope
 1445              		.syntax unified
 1446              		.thumb
 1447              		.thumb_func
 1449              	bno055_getVectorGyroscope:
 1450              	.LFB25:
 217:Core/Src/bno055.c **** bno055_vector_t bno055_getVectorGyroscope() {
 1451              		.loc 1 217 45 is_stmt 1 view -0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 64
 1454              		@ frame_needed = 0, uses_anonymous_args = 0
 1455 0000 00B5     		push	{lr}
 1456              	.LCFI58:
 1457              		.cfi_def_cfa_offset 4
 1458              		.cfi_offset 14, -4
 1459 0002 91B0     		sub	sp, sp, #68
 1460              	.LCFI59:
 1461              		.cfi_def_cfa_offset 72
 218:Core/Src/bno055.c ****   return bno055_getVector(BNO055_VECTOR_GYROSCOPE);
 1462              		.loc 1 218 3 view .LVU268
 1463              		.loc 1 218 10 is_stmt 0 view .LVU269
 1464 0004 1420     		movs	r0, #20
 1465 0006 FFF7FEFF 		bl	bno055_getVector
 1466              	.LVL101:
 1467 000a 8DED080B 		vstr.64	d0, [sp, #32]
 1468 000e 8DED0A1B 		vstr.64	d1, [sp, #40]
 1469 0012 8DED0C2B 		vstr.64	d2, [sp, #48]
 1470 0016 8DED0E3B 		vstr.64	d3, [sp, #56]
 219:Core/Src/bno055.c **** }
 1471              		.loc 1 219 1 view .LVU270
 1472 001a 11B0     		add	sp, sp, #68
 1473              	.LCFI60:
 1474              		.cfi_def_cfa_offset 4
 1475              		@ sp needed
 1476 001c 5DF804FB 		ldr	pc, [sp], #4
 1477              		.cfi_endproc
 1478              	.LFE25:
 1480              		.section	.text.bno055_getVectorEuler,"ax",%progbits
 1481              		.align	1
 1482              		.global	bno055_getVectorEuler
 1483              		.syntax unified
 1484              		.thumb
 1485              		.thumb_func
 1487              	bno055_getVectorEuler:
 1488              	.LFB26:
 220:Core/Src/bno055.c **** bno055_vector_t bno055_getVectorEuler() {
 1489              		.loc 1 220 41 is_stmt 1 view -0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 64
 1492              		@ frame_needed = 0, uses_anonymous_args = 0
 1493 0000 00B5     		push	{lr}
 1494              	.LCFI61:
 1495              		.cfi_def_cfa_offset 4
 1496              		.cfi_offset 14, -4
 1497 0002 91B0     		sub	sp, sp, #68
ARM GAS  /tmp/cc0vGqAu.s 			page 31


 1498              	.LCFI62:
 1499              		.cfi_def_cfa_offset 72
 221:Core/Src/bno055.c ****   return bno055_getVector(BNO055_VECTOR_EULER);
 1500              		.loc 1 221 3 view .LVU272
 1501              		.loc 1 221 10 is_stmt 0 view .LVU273
 1502 0004 1A20     		movs	r0, #26
 1503 0006 FFF7FEFF 		bl	bno055_getVector
 1504              	.LVL102:
 1505 000a 8DED080B 		vstr.64	d0, [sp, #32]
 1506 000e 8DED0A1B 		vstr.64	d1, [sp, #40]
 1507 0012 8DED0C2B 		vstr.64	d2, [sp, #48]
 1508 0016 8DED0E3B 		vstr.64	d3, [sp, #56]
 222:Core/Src/bno055.c **** }
 1509              		.loc 1 222 1 view .LVU274
 1510 001a 11B0     		add	sp, sp, #68
 1511              	.LCFI63:
 1512              		.cfi_def_cfa_offset 4
 1513              		@ sp needed
 1514 001c 5DF804FB 		ldr	pc, [sp], #4
 1515              		.cfi_endproc
 1516              	.LFE26:
 1518              		.section	.text.bno055_getVectorLinearAccel,"ax",%progbits
 1519              		.align	1
 1520              		.global	bno055_getVectorLinearAccel
 1521              		.syntax unified
 1522              		.thumb
 1523              		.thumb_func
 1525              	bno055_getVectorLinearAccel:
 1526              	.LFB27:
 223:Core/Src/bno055.c **** bno055_vector_t bno055_getVectorLinearAccel() {
 1527              		.loc 1 223 47 is_stmt 1 view -0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 64
 1530              		@ frame_needed = 0, uses_anonymous_args = 0
 1531 0000 00B5     		push	{lr}
 1532              	.LCFI64:
 1533              		.cfi_def_cfa_offset 4
 1534              		.cfi_offset 14, -4
 1535 0002 91B0     		sub	sp, sp, #68
 1536              	.LCFI65:
 1537              		.cfi_def_cfa_offset 72
 224:Core/Src/bno055.c ****   return bno055_getVector(BNO055_VECTOR_LINEARACCEL);
 1538              		.loc 1 224 3 view .LVU276
 1539              		.loc 1 224 10 is_stmt 0 view .LVU277
 1540 0004 2820     		movs	r0, #40
 1541 0006 FFF7FEFF 		bl	bno055_getVector
 1542              	.LVL103:
 1543 000a 8DED080B 		vstr.64	d0, [sp, #32]
 1544 000e 8DED0A1B 		vstr.64	d1, [sp, #40]
 1545 0012 8DED0C2B 		vstr.64	d2, [sp, #48]
 1546 0016 8DED0E3B 		vstr.64	d3, [sp, #56]
 225:Core/Src/bno055.c **** }
 1547              		.loc 1 225 1 view .LVU278
 1548 001a 11B0     		add	sp, sp, #68
 1549              	.LCFI66:
 1550              		.cfi_def_cfa_offset 4
 1551              		@ sp needed
ARM GAS  /tmp/cc0vGqAu.s 			page 32


 1552 001c 5DF804FB 		ldr	pc, [sp], #4
 1553              		.cfi_endproc
 1554              	.LFE27:
 1556              		.section	.text.bno055_getVectorGravity,"ax",%progbits
 1557              		.align	1
 1558              		.global	bno055_getVectorGravity
 1559              		.syntax unified
 1560              		.thumb
 1561              		.thumb_func
 1563              	bno055_getVectorGravity:
 1564              	.LFB28:
 226:Core/Src/bno055.c **** bno055_vector_t bno055_getVectorGravity() {
 1565              		.loc 1 226 43 is_stmt 1 view -0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 64
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569 0000 00B5     		push	{lr}
 1570              	.LCFI67:
 1571              		.cfi_def_cfa_offset 4
 1572              		.cfi_offset 14, -4
 1573 0002 91B0     		sub	sp, sp, #68
 1574              	.LCFI68:
 1575              		.cfi_def_cfa_offset 72
 227:Core/Src/bno055.c ****   return bno055_getVector(BNO055_VECTOR_GRAVITY);
 1576              		.loc 1 227 3 view .LVU280
 1577              		.loc 1 227 10 is_stmt 0 view .LVU281
 1578 0004 2E20     		movs	r0, #46
 1579 0006 FFF7FEFF 		bl	bno055_getVector
 1580              	.LVL104:
 1581 000a 8DED080B 		vstr.64	d0, [sp, #32]
 1582 000e 8DED0A1B 		vstr.64	d1, [sp, #40]
 1583 0012 8DED0C2B 		vstr.64	d2, [sp, #48]
 1584 0016 8DED0E3B 		vstr.64	d3, [sp, #56]
 228:Core/Src/bno055.c **** }
 1585              		.loc 1 228 1 view .LVU282
 1586 001a 11B0     		add	sp, sp, #68
 1587              	.LCFI69:
 1588              		.cfi_def_cfa_offset 4
 1589              		@ sp needed
 1590 001c 5DF804FB 		ldr	pc, [sp], #4
 1591              		.cfi_endproc
 1592              	.LFE28:
 1594              		.section	.text.bno055_getVectorQuaternion,"ax",%progbits
 1595              		.align	1
 1596              		.global	bno055_getVectorQuaternion
 1597              		.syntax unified
 1598              		.thumb
 1599              		.thumb_func
 1601              	bno055_getVectorQuaternion:
 1602              	.LFB29:
 229:Core/Src/bno055.c **** bno055_vector_t bno055_getVectorQuaternion() {
 1603              		.loc 1 229 46 is_stmt 1 view -0
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 64
 1606              		@ frame_needed = 0, uses_anonymous_args = 0
 1607 0000 00B5     		push	{lr}
 1608              	.LCFI70:
ARM GAS  /tmp/cc0vGqAu.s 			page 33


 1609              		.cfi_def_cfa_offset 4
 1610              		.cfi_offset 14, -4
 1611 0002 91B0     		sub	sp, sp, #68
 1612              	.LCFI71:
 1613              		.cfi_def_cfa_offset 72
 230:Core/Src/bno055.c ****   return bno055_getVector(BNO055_VECTOR_QUATERNION);
 1614              		.loc 1 230 3 view .LVU284
 1615              		.loc 1 230 10 is_stmt 0 view .LVU285
 1616 0004 2020     		movs	r0, #32
 1617 0006 FFF7FEFF 		bl	bno055_getVector
 1618              	.LVL105:
 1619 000a 8DED080B 		vstr.64	d0, [sp, #32]
 1620 000e 8DED0A1B 		vstr.64	d1, [sp, #40]
 1621 0012 8DED0C2B 		vstr.64	d2, [sp, #48]
 1622 0016 8DED0E3B 		vstr.64	d3, [sp, #56]
 231:Core/Src/bno055.c **** }
 1623              		.loc 1 231 1 view .LVU286
 1624 001a 11B0     		add	sp, sp, #68
 1625              	.LCFI72:
 1626              		.cfi_def_cfa_offset 4
 1627              		@ sp needed
 1628 001c 5DF804FB 		ldr	pc, [sp], #4
 1629              		.cfi_endproc
 1630              	.LFE29:
 1632              		.section	.text.bno055_setAxisMap,"ax",%progbits
 1633              		.align	1
 1634              		.global	bno055_setAxisMap
 1635              		.syntax unified
 1636              		.thumb
 1637              		.thumb_func
 1639              	bno055_setAxisMap:
 1640              	.LFB30:
 232:Core/Src/bno055.c **** 
 233:Core/Src/bno055.c **** void bno055_setAxisMap(bno055_axis_map_t axis) {
 1641              		.loc 1 233 48 is_stmt 1 view -0
 1642              		.cfi_startproc
 1643              		@ args = 0, pretend = 0, frame = 8
 1644              		@ frame_needed = 0, uses_anonymous_args = 0
 1645 0000 10B5     		push	{r4, lr}
 1646              	.LCFI73:
 1647              		.cfi_def_cfa_offset 8
 1648              		.cfi_offset 4, -8
 1649              		.cfi_offset 14, -4
 1650 0002 82B0     		sub	sp, sp, #8
 1651              	.LCFI74:
 1652              		.cfi_def_cfa_offset 16
 1653 0004 02AB     		add	r3, sp, #8
 1654 0006 03E90300 		stmdb	r3, {r0, r1}
 234:Core/Src/bno055.c ****   uint8_t axisRemap = (axis.z << 4) | (axis.y << 2) | (axis.x);
 1655              		.loc 1 234 3 view .LVU288
 1656              		.loc 1 234 28 is_stmt 0 view .LVU289
 1657 000a 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 1658              		.loc 1 234 44 view .LVU290
 1659 000e 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 1660              		.loc 1 234 47 view .LVU291
 1661 0012 9B00     		lsls	r3, r3, #2
 1662              		.loc 1 234 37 view .LVU292
ARM GAS  /tmp/cc0vGqAu.s 			page 34


 1663 0014 43EA0213 		orr	r3, r3, r2, lsl #4
 1664 0018 5BB2     		sxtb	r3, r3
 1665              		.loc 1 234 60 view .LVU293
 1666 001a 9DF80010 		ldrb	r1, [sp]	@ zero_extendqisi2
 1667              		.loc 1 234 11 view .LVU294
 1668 001e 1943     		orrs	r1, r1, r3
 1669              	.LVL106:
 235:Core/Src/bno055.c ****   uint8_t axisMapSign = (axis.x_sign << 2) | (axis.y_sign << 1) | (axis.z_sign);
 1670              		.loc 1 235 3 is_stmt 1 view .LVU295
 1671              		.loc 1 235 30 is_stmt 0 view .LVU296
 1672 0020 9DF80120 		ldrb	r2, [sp, #1]	@ zero_extendqisi2
 1673              		.loc 1 235 51 view .LVU297
 1674 0024 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 1675              		.loc 1 235 59 view .LVU298
 1676 0028 5B00     		lsls	r3, r3, #1
 1677              		.loc 1 235 44 view .LVU299
 1678 002a 43EA8203 		orr	r3, r3, r2, lsl #2
 1679 002e 5BB2     		sxtb	r3, r3
 1680              		.loc 1 235 72 view .LVU300
 1681 0030 9DF80540 		ldrb	r4, [sp, #5]	@ zero_extendqisi2
 1682              		.loc 1 235 11 view .LVU301
 1683 0034 1C43     		orrs	r4, r4, r3
 1684 0036 E4B2     		uxtb	r4, r4
 1685              	.LVL107:
 236:Core/Src/bno055.c ****   bno055_writeData(BNO055_AXIS_MAP_CONFIG, axisRemap);
 1686              		.loc 1 236 3 is_stmt 1 view .LVU302
 1687 0038 C9B2     		uxtb	r1, r1
 1688              		.loc 1 236 3 is_stmt 0 view .LVU303
 1689 003a 4120     		movs	r0, #65
 1690 003c FFF7FEFF 		bl	bno055_writeData
 1691              	.LVL108:
 237:Core/Src/bno055.c ****   bno055_writeData(BNO055_AXIS_MAP_SIGN, axisMapSign);
 1692              		.loc 1 237 3 is_stmt 1 view .LVU304
 1693 0040 2146     		mov	r1, r4
 1694 0042 4220     		movs	r0, #66
 1695 0044 FFF7FEFF 		bl	bno055_writeData
 1696              	.LVL109:
 238:Core/Src/bno055.c **** }
 1697              		.loc 1 238 1 is_stmt 0 view .LVU305
 1698 0048 02B0     		add	sp, sp, #8
 1699              	.LCFI75:
 1700              		.cfi_def_cfa_offset 8
 1701              	.LVL110:
 1702              		.loc 1 238 1 view .LVU306
 1703              		@ sp needed
 1704 004a 10BD     		pop	{r4, pc}
 1705              		.loc 1 238 1 view .LVU307
 1706              		.cfi_endproc
 1707              	.LFE30:
 1709              		.global	quaScale
 1710              		.section	.data.quaScale,"aw"
 1711              		.align	1
 1714              	quaScale:
 1715 0000 0040     		.short	16384
 1716              		.global	magScale
 1717              		.section	.data.magScale,"aw"
 1718              		.align	1
ARM GAS  /tmp/cc0vGqAu.s 			page 35


 1721              	magScale:
 1722 0000 1000     		.short	16
 1723              		.global	eulerScale
 1724              		.section	.data.eulerScale,"aw"
 1725              		.align	1
 1728              	eulerScale:
 1729 0000 1000     		.short	16
 1730              		.global	angularRateScale
 1731              		.section	.data.angularRateScale,"aw"
 1732              		.align	1
 1735              	angularRateScale:
 1736 0000 1000     		.short	16
 1737              		.global	tempScale
 1738              		.section	.data.tempScale,"aw"
 1739              		.align	1
 1742              	tempScale:
 1743 0000 0100     		.short	1
 1744              		.global	accelScale
 1745              		.section	.data.accelScale,"aw"
 1746              		.align	1
 1749              	accelScale:
 1750 0000 6400     		.short	100
 1751              		.text
 1752              	.Letext0:
 1753              		.file 2 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_ty
 1754              		.file 3 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 1755              		.file 4 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/lib/gcc/arm-none-eabi/12.3.1/include/stdd
 1756              		.file 5 "Core/Inc/bno055.h"
 1757              		.file 6 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/string.h"
 1758              		.file 7 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/stdio.h"
 1759              		.file 8 "<built-in>"
ARM GAS  /tmp/cc0vGqAu.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 bno055.c
     /tmp/cc0vGqAu.s:21     .text.bno055_setPage:00000000 $t
     /tmp/cc0vGqAu.s:27     .text.bno055_setPage:00000000 bno055_setPage
     /tmp/cc0vGqAu.s:53     .text.bno055_getOperationMode:00000000 $t
     /tmp/cc0vGqAu.s:59     .text.bno055_getOperationMode:00000000 bno055_getOperationMode
     /tmp/cc0vGqAu.s:91     .text.bno055_setOperationMode:00000000 $t
     /tmp/cc0vGqAu.s:97     .text.bno055_setOperationMode:00000000 bno055_setOperationMode
     /tmp/cc0vGqAu.s:139    .text.bno055_setOperationModeConfig:00000000 $t
     /tmp/cc0vGqAu.s:145    .text.bno055_setOperationModeConfig:00000000 bno055_setOperationModeConfig
     /tmp/cc0vGqAu.s:166    .text.bno055_setOperationModeNDOF:00000000 $t
     /tmp/cc0vGqAu.s:172    .text.bno055_setOperationModeNDOF:00000000 bno055_setOperationModeNDOF
     /tmp/cc0vGqAu.s:193    .text.bno055_setExternalCrystalUse:00000000 $t
     /tmp/cc0vGqAu.s:199    .text.bno055_setExternalCrystalUse:00000000 bno055_setExternalCrystalUse
     /tmp/cc0vGqAu.s:267    .text.bno055_enableExternalCrystal:00000000 $t
     /tmp/cc0vGqAu.s:273    .text.bno055_enableExternalCrystal:00000000 bno055_enableExternalCrystal
     /tmp/cc0vGqAu.s:294    .text.bno055_disableExternalCrystal:00000000 $t
     /tmp/cc0vGqAu.s:300    .text.bno055_disableExternalCrystal:00000000 bno055_disableExternalCrystal
     /tmp/cc0vGqAu.s:321    .text.bno055_reset:00000000 $t
     /tmp/cc0vGqAu.s:327    .text.bno055_reset:00000000 bno055_reset
     /tmp/cc0vGqAu.s:353    .text.bno055_getTemp:00000000 $t
     /tmp/cc0vGqAu.s:359    .text.bno055_getTemp:00000000 bno055_getTemp
     /tmp/cc0vGqAu.s:395    .rodata.bno055_setup.str1.4:00000000 $d
     /tmp/cc0vGqAu.s:400    .text.bno055_setup:00000000 $t
     /tmp/cc0vGqAu.s:406    .text.bno055_setup:00000000 bno055_setup
     /tmp/cc0vGqAu.s:472    .text.bno055_setup:00000048 $d
     /tmp/cc0vGqAu.s:477    .text.bno055_getSWRevision:00000000 $t
     /tmp/cc0vGqAu.s:483    .text.bno055_getSWRevision:00000000 bno055_getSWRevision
     /tmp/cc0vGqAu.s:525    .text.bno055_getBootloaderRevision:00000000 $t
     /tmp/cc0vGqAu.s:531    .text.bno055_getBootloaderRevision:00000000 bno055_getBootloaderRevision
     /tmp/cc0vGqAu.s:567    .text.bno055_getSystemStatus:00000000 $t
     /tmp/cc0vGqAu.s:573    .text.bno055_getSystemStatus:00000000 bno055_getSystemStatus
     /tmp/cc0vGqAu.s:609    .text.bno055_getSelfTestResult:00000000 $t
     /tmp/cc0vGqAu.s:615    .text.bno055_getSelfTestResult:00000000 bno055_getSelfTestResult
     /tmp/cc0vGqAu.s:688    .text.bno055_getSystemError:00000000 $t
     /tmp/cc0vGqAu.s:694    .text.bno055_getSystemError:00000000 bno055_getSystemError
     /tmp/cc0vGqAu.s:730    .text.bno055_getCalibrationState:00000000 $t
     /tmp/cc0vGqAu.s:736    .text.bno055_getCalibrationState:00000000 bno055_getCalibrationState
     /tmp/cc0vGqAu.s:810    .text.bno055_getCalibrationData:00000000 $t
     /tmp/cc0vGqAu.s:816    .text.bno055_getCalibrationData:00000000 bno055_getCalibrationData
     /tmp/cc0vGqAu.s:906    .text.bno055_setCalibrationData:00000000 $t
     /tmp/cc0vGqAu.s:912    .text.bno055_setCalibrationData:00000000 bno055_setCalibrationData
     /tmp/cc0vGqAu.s:1024   .text.bno055_getVector:00000000 $t
     /tmp/cc0vGqAu.s:1030   .text.bno055_getVector:00000000 bno055_getVector
     /tmp/cc0vGqAu.s:1078   .text.bno055_getVector:0000002a $d
     /tmp/cc0vGqAu.s:1357   .text.bno055_getVector:000001b8 $d
     /tmp/cc0vGqAu.s:1721   .data.magScale:00000000 magScale
     /tmp/cc0vGqAu.s:1749   .data.accelScale:00000000 accelScale
     /tmp/cc0vGqAu.s:1735   .data.angularRateScale:00000000 angularRateScale
     /tmp/cc0vGqAu.s:1728   .data.eulerScale:00000000 eulerScale
     /tmp/cc0vGqAu.s:1714   .data.quaScale:00000000 quaScale
     /tmp/cc0vGqAu.s:1367   .text.bno055_getVectorAccelerometer:00000000 $t
     /tmp/cc0vGqAu.s:1373   .text.bno055_getVectorAccelerometer:00000000 bno055_getVectorAccelerometer
     /tmp/cc0vGqAu.s:1405   .text.bno055_getVectorMagnetometer:00000000 $t
     /tmp/cc0vGqAu.s:1411   .text.bno055_getVectorMagnetometer:00000000 bno055_getVectorMagnetometer
     /tmp/cc0vGqAu.s:1443   .text.bno055_getVectorGyroscope:00000000 $t
     /tmp/cc0vGqAu.s:1449   .text.bno055_getVectorGyroscope:00000000 bno055_getVectorGyroscope
ARM GAS  /tmp/cc0vGqAu.s 			page 37


     /tmp/cc0vGqAu.s:1481   .text.bno055_getVectorEuler:00000000 $t
     /tmp/cc0vGqAu.s:1487   .text.bno055_getVectorEuler:00000000 bno055_getVectorEuler
     /tmp/cc0vGqAu.s:1519   .text.bno055_getVectorLinearAccel:00000000 $t
     /tmp/cc0vGqAu.s:1525   .text.bno055_getVectorLinearAccel:00000000 bno055_getVectorLinearAccel
     /tmp/cc0vGqAu.s:1557   .text.bno055_getVectorGravity:00000000 $t
     /tmp/cc0vGqAu.s:1563   .text.bno055_getVectorGravity:00000000 bno055_getVectorGravity
     /tmp/cc0vGqAu.s:1595   .text.bno055_getVectorQuaternion:00000000 $t
     /tmp/cc0vGqAu.s:1601   .text.bno055_getVectorQuaternion:00000000 bno055_getVectorQuaternion
     /tmp/cc0vGqAu.s:1633   .text.bno055_setAxisMap:00000000 $t
     /tmp/cc0vGqAu.s:1639   .text.bno055_setAxisMap:00000000 bno055_setAxisMap
     /tmp/cc0vGqAu.s:1711   .data.quaScale:00000000 $d
     /tmp/cc0vGqAu.s:1718   .data.magScale:00000000 $d
     /tmp/cc0vGqAu.s:1725   .data.eulerScale:00000000 $d
     /tmp/cc0vGqAu.s:1732   .data.angularRateScale:00000000 $d
     /tmp/cc0vGqAu.s:1742   .data.tempScale:00000000 tempScale
     /tmp/cc0vGqAu.s:1739   .data.tempScale:00000000 $d
     /tmp/cc0vGqAu.s:1746   .data.accelScale:00000000 $d
     /tmp/cc0vGqAu.s:1118   .text.bno055_getVector:00000051 $d
     /tmp/cc0vGqAu.s:1118   .text.bno055_getVector:00000052 $t

UNDEFINED SYMBOLS
bno055_writeData
bno055_readData
bno055_delay
printf
__aeabi_ui2d
__aeabi_i2d
__aeabi_ddiv
memset
