ARM GAS  /tmp/ccLP3BzJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bmp581.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/bmp581.c"
  20              		.section	.text.writeRegisters,"ax",%progbits
  21              		.align	1
  22              		.global	writeRegisters
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	writeRegisters:
  28              	.LVL0:
  29              	.LFB135:
   1:Core/Src/bmp581.c **** /*
   2:Core/Src/bmp581.c ****  * bmp581.c
   3:Core/Src/bmp581.c ****  *
   4:Core/Src/bmp581.c ****  *  Created on: Jun 14, 2024
   5:Core/Src/bmp581.c ****  *      Author: Administrator
   6:Core/Src/bmp581.c ****  */
   7:Core/Src/bmp581.c **** #include "stm32f4xx_hal.h"
   8:Core/Src/bmp581.c **** #include "bmp581.h"
   9:Core/Src/bmp581.c **** #include "string.h"
  10:Core/Src/bmp581.c **** 
  11:Core/Src/bmp581.c **** extern SPI_HandleTypeDef hspi1;
  12:Core/Src/bmp581.c **** #define BMP5_SPI &hspi1
  13:Core/Src/bmp581.c **** 
  14:Core/Src/bmp581.c **** // Reference to the sensor
  15:Core/Src/bmp581.c **** struct bmp5_dev sensor;
  16:Core/Src/bmp581.c **** 
  17:Core/Src/bmp581.c **** // Place to store OSR/ODR config values
  18:Core/Src/bmp581.c **** struct bmp5_osr_odr_press_config osrOdrConfig;
  19:Core/Src/bmp581.c **** 
  20:Core/Src/bmp581.c **** // Place to store FIFO config values
  21:Core/Src/bmp581.c **** struct bmp5_fifo fifo;
  22:Core/Src/bmp581.c **** 
  23:Core/Src/bmp581.c **** HAL_StatusTypeDef bmp5_hal_result;
  24:Core/Src/bmp581.c **** 
  25:Core/Src/bmp581.c **** 
  26:Core/Src/bmp581.c **** BMP5_INTF_RET_TYPE readRegisters(uint8_t regAddress, uint8_t* dataBuffer, uint32_t numBytes, void* 
  27:Core/Src/bmp581.c **** {
  28:Core/Src/bmp581.c ****     // Make sure the number of bytes is valid
  29:Core/Src/bmp581.c ****     if(numBytes == 0)
ARM GAS  /tmp/ccLP3BzJ.s 			page 2


  30:Core/Src/bmp581.c ****     {
  31:Core/Src/bmp581.c ****         return BMP5_E_COM_FAIL;
  32:Core/Src/bmp581.c ****     }
  33:Core/Src/bmp581.c **** 
  34:Core/Src/bmp581.c ****     // Start transmission
  35:Core/Src/bmp581.c ****     HAL_GPIO_WritePin(BMP581_CSN_PORT, BMP581_CSN_PIN, GPIO_PIN_RESET);
  36:Core/Src/bmp581.c **** 
  37:Core/Src/bmp581.c ****     // Read all requested bytes
  38:Core/Src/bmp581.c ****     bmp5_hal_result = HAL_SPI_Transmit(BMP5_SPI, &regAddress, 1, 100);
  39:Core/Src/bmp581.c ****     bmp5_hal_result = HAL_SPI_Receive(BMP5_SPI, dataBuffer, numBytes, 1000);
  40:Core/Src/bmp581.c **** 
  41:Core/Src/bmp581.c ****     // End transmission
  42:Core/Src/bmp581.c ****     HAL_GPIO_WritePin(BMP581_CSN_PORT, BMP581_CSN_PIN, GPIO_PIN_SET);
  43:Core/Src/bmp581.c **** 
  44:Core/Src/bmp581.c ****     return BMP5_OK;
  45:Core/Src/bmp581.c **** }
  46:Core/Src/bmp581.c **** 
  47:Core/Src/bmp581.c **** BMP5_INTF_RET_TYPE writeRegisters(uint8_t regAddress, const uint8_t* dataBuffer, uint32_t numBytes,
  48:Core/Src/bmp581.c **** {
  30              		.loc 1 48 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 48 1 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 20
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 83B0     		sub	sp, sp, #12
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 32
  46 0004 8DF80700 		strb	r0, [sp, #7]
  49:Core/Src/bmp581.c ****     // Make sure the number of bytes is valid
  50:Core/Src/bmp581.c ****     if(numBytes == 0)
  47              		.loc 1 50 5 is_stmt 1 view .LVU2
  48              		.loc 1 50 7 is_stmt 0 view .LVU3
  49 0008 F2B1     		cbz	r2, .L3
  50 000a 0C46     		mov	r4, r1
  51 000c 1746     		mov	r7, r2
  51:Core/Src/bmp581.c ****     {
  52:Core/Src/bmp581.c ****         return BMP5_E_COM_FAIL;
  53:Core/Src/bmp581.c ****     }
  54:Core/Src/bmp581.c **** 
  55:Core/Src/bmp581.c ****     // Begin transmission
  56:Core/Src/bmp581.c ****     HAL_GPIO_WritePin(BMP581_CSN_PORT, BMP581_CSN_PIN, GPIO_PIN_RESET);
  52              		.loc 1 56 5 is_stmt 1 view .LVU4
  53 000e 104D     		ldr	r5, .L5
  54 0010 0022     		movs	r2, #0
  55              	.LVL1:
  56              		.loc 1 56 5 is_stmt 0 view .LVU5
  57 0012 1021     		movs	r1, #16
  58              	.LVL2:
  59              		.loc 1 56 5 view .LVU6
ARM GAS  /tmp/ccLP3BzJ.s 			page 3


  60 0014 2846     		mov	r0, r5
  61              	.LVL3:
  62              		.loc 1 56 5 view .LVU7
  63 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
  64              	.LVL4:
  57:Core/Src/bmp581.c **** 
  58:Core/Src/bmp581.c ****     // Write all the data
  59:Core/Src/bmp581.c ****     HAL_SPI_Transmit(BMP5_SPI, &regAddress, 1, 100);
  65              		.loc 1 59 5 is_stmt 1 view .LVU8
  66 001a 0E4E     		ldr	r6, .L5+4
  67 001c 6423     		movs	r3, #100
  68 001e 0122     		movs	r2, #1
  69 0020 0DF10701 		add	r1, sp, #7
  70 0024 3046     		mov	r0, r6
  71 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
  72              	.LVL5:
  60:Core/Src/bmp581.c ****     HAL_SPI_Transmit(BMP5_SPI, dataBuffer, numBytes, 1000);
  73              		.loc 1 60 5 view .LVU9
  74 002a 4FF47A73 		mov	r3, #1000
  75 002e BAB2     		uxth	r2, r7
  76 0030 2146     		mov	r1, r4
  77 0032 3046     		mov	r0, r6
  78 0034 FFF7FEFF 		bl	HAL_SPI_Transmit
  79              	.LVL6:
  61:Core/Src/bmp581.c **** 
  62:Core/Src/bmp581.c ****     // End transmission
  63:Core/Src/bmp581.c ****     HAL_GPIO_WritePin(BMP581_CSN_PORT, BMP581_CSN_PIN, GPIO_PIN_SET);
  80              		.loc 1 63 5 view .LVU10
  81 0038 0122     		movs	r2, #1
  82 003a 1021     		movs	r1, #16
  83 003c 2846     		mov	r0, r5
  84 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  85              	.LVL7:
  64:Core/Src/bmp581.c **** 
  65:Core/Src/bmp581.c ****     return BMP5_OK;
  86              		.loc 1 65 5 view .LVU11
  87              		.loc 1 65 12 is_stmt 0 view .LVU12
  88 0042 0020     		movs	r0, #0
  89              	.LVL8:
  90              	.L2:
  66:Core/Src/bmp581.c **** }
  91              		.loc 1 66 1 view .LVU13
  92 0044 03B0     		add	sp, sp, #12
  93              	.LCFI2:
  94              		.cfi_remember_state
  95              		.cfi_def_cfa_offset 20
  96              		@ sp needed
  97 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
  98              	.LVL9:
  99              	.L3:
 100              	.LCFI3:
 101              		.cfi_restore_state
  52:Core/Src/bmp581.c ****     }
 102              		.loc 1 52 16 view .LVU14
 103 0048 6FF00100 		mvn	r0, #1
 104              	.LVL10:
  52:Core/Src/bmp581.c ****     }
ARM GAS  /tmp/ccLP3BzJ.s 			page 4


 105              		.loc 1 52 16 view .LVU15
 106 004c FAE7     		b	.L2
 107              	.L6:
 108 004e 00BF     		.align	2
 109              	.L5:
 110 0050 00080240 		.word	1073874944
 111 0054 00000000 		.word	hspi1
 112              		.cfi_endproc
 113              	.LFE135:
 115              		.section	.text.readRegisters,"ax",%progbits
 116              		.align	1
 117              		.global	readRegisters
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	readRegisters:
 123              	.LVL11:
 124              	.LFB134:
  27:Core/Src/bmp581.c ****     // Make sure the number of bytes is valid
 125              		.loc 1 27 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 8
 128              		@ frame_needed = 0, uses_anonymous_args = 0
  27:Core/Src/bmp581.c ****     // Make sure the number of bytes is valid
 129              		.loc 1 27 1 is_stmt 0 view .LVU17
 130 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 131              	.LCFI4:
 132              		.cfi_def_cfa_offset 24
 133              		.cfi_offset 4, -24
 134              		.cfi_offset 5, -20
 135              		.cfi_offset 6, -16
 136              		.cfi_offset 7, -12
 137              		.cfi_offset 8, -8
 138              		.cfi_offset 14, -4
 139 0004 82B0     		sub	sp, sp, #8
 140              	.LCFI5:
 141              		.cfi_def_cfa_offset 32
 142 0006 8DF80700 		strb	r0, [sp, #7]
  29:Core/Src/bmp581.c ****     {
 143              		.loc 1 29 5 is_stmt 1 view .LVU18
  29:Core/Src/bmp581.c ****     {
 144              		.loc 1 29 7 is_stmt 0 view .LVU19
 145 000a 1AB3     		cbz	r2, .L9
 146 000c 0C46     		mov	r4, r1
 147 000e 9046     		mov	r8, r2
  35:Core/Src/bmp581.c **** 
 148              		.loc 1 35 5 is_stmt 1 view .LVU20
 149 0010 124D     		ldr	r5, .L11
 150 0012 0022     		movs	r2, #0
 151              	.LVL12:
  35:Core/Src/bmp581.c **** 
 152              		.loc 1 35 5 is_stmt 0 view .LVU21
 153 0014 1021     		movs	r1, #16
 154              	.LVL13:
  35:Core/Src/bmp581.c **** 
 155              		.loc 1 35 5 view .LVU22
 156 0016 2846     		mov	r0, r5
ARM GAS  /tmp/ccLP3BzJ.s 			page 5


 157              	.LVL14:
  35:Core/Src/bmp581.c **** 
 158              		.loc 1 35 5 view .LVU23
 159 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL15:
  38:Core/Src/bmp581.c ****     bmp5_hal_result = HAL_SPI_Receive(BMP5_SPI, dataBuffer, numBytes, 1000);
 161              		.loc 1 38 5 is_stmt 1 view .LVU24
  38:Core/Src/bmp581.c ****     bmp5_hal_result = HAL_SPI_Receive(BMP5_SPI, dataBuffer, numBytes, 1000);
 162              		.loc 1 38 23 is_stmt 0 view .LVU25
 163 001c 104F     		ldr	r7, .L11+4
 164 001e 6423     		movs	r3, #100
 165 0020 0122     		movs	r2, #1
 166 0022 0DF10701 		add	r1, sp, #7
 167 0026 3846     		mov	r0, r7
 168 0028 FFF7FEFF 		bl	HAL_SPI_Transmit
 169              	.LVL16:
  38:Core/Src/bmp581.c ****     bmp5_hal_result = HAL_SPI_Receive(BMP5_SPI, dataBuffer, numBytes, 1000);
 170              		.loc 1 38 21 view .LVU26
 171 002c 0D4E     		ldr	r6, .L11+8
 172 002e 3070     		strb	r0, [r6]
  39:Core/Src/bmp581.c **** 
 173              		.loc 1 39 5 is_stmt 1 view .LVU27
  39:Core/Src/bmp581.c **** 
 174              		.loc 1 39 23 is_stmt 0 view .LVU28
 175 0030 4FF47A73 		mov	r3, #1000
 176 0034 1FFA88F2 		uxth	r2, r8
 177 0038 2146     		mov	r1, r4
 178 003a 3846     		mov	r0, r7
 179 003c FFF7FEFF 		bl	HAL_SPI_Receive
 180              	.LVL17:
  39:Core/Src/bmp581.c **** 
 181              		.loc 1 39 21 view .LVU29
 182 0040 3070     		strb	r0, [r6]
  42:Core/Src/bmp581.c **** 
 183              		.loc 1 42 5 is_stmt 1 view .LVU30
 184 0042 0122     		movs	r2, #1
 185 0044 1021     		movs	r1, #16
 186 0046 2846     		mov	r0, r5
 187 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 188              	.LVL18:
  44:Core/Src/bmp581.c **** }
 189              		.loc 1 44 5 view .LVU31
  44:Core/Src/bmp581.c **** }
 190              		.loc 1 44 12 is_stmt 0 view .LVU32
 191 004c 0020     		movs	r0, #0
 192              	.LVL19:
 193              	.L8:
  45:Core/Src/bmp581.c **** 
 194              		.loc 1 45 1 view .LVU33
 195 004e 02B0     		add	sp, sp, #8
 196              	.LCFI6:
 197              		.cfi_remember_state
 198              		.cfi_def_cfa_offset 24
 199              		@ sp needed
 200 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 201              	.LVL20:
 202              	.L9:
ARM GAS  /tmp/ccLP3BzJ.s 			page 6


 203              	.LCFI7:
 204              		.cfi_restore_state
  31:Core/Src/bmp581.c ****     }
 205              		.loc 1 31 16 view .LVU34
 206 0054 6FF00100 		mvn	r0, #1
 207              	.LVL21:
  31:Core/Src/bmp581.c ****     }
 208              		.loc 1 31 16 view .LVU35
 209 0058 F9E7     		b	.L8
 210              	.L12:
 211 005a 00BF     		.align	2
 212              	.L11:
 213 005c 00080240 		.word	1073874944
 214 0060 00000000 		.word	hspi1
 215 0064 00000000 		.word	bmp5_hal_result
 216              		.cfi_endproc
 217              	.LFE134:
 219              		.section	.text.usDelay,"ax",%progbits
 220              		.align	1
 221              		.global	usDelay
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	usDelay:
 227              	.LVL22:
 228              	.LFB136:
  67:Core/Src/bmp581.c **** 
  68:Core/Src/bmp581.c **** void usDelay(uint32_t period, void* interfacePtr)
  69:Core/Src/bmp581.c **** {
 229              		.loc 1 69 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		.loc 1 69 1 is_stmt 0 view .LVU37
 234 0000 08B5     		push	{r3, lr}
 235              	.LCFI8:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
  70:Core/Src/bmp581.c ****     HAL_Delay(period);
 239              		.loc 1 70 5 is_stmt 1 view .LVU38
 240 0002 FFF7FEFF 		bl	HAL_Delay
 241              	.LVL23:
  71:Core/Src/bmp581.c **** }
 242              		.loc 1 71 1 is_stmt 0 view .LVU39
 243 0006 08BD     		pop	{r3, pc}
 244              		.cfi_endproc
 245              	.LFE136:
 247              		.section	.text.init,"ax",%progbits
 248              		.align	1
 249              		.global	init
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	init:
 255              	.LFB139:
  72:Core/Src/bmp581.c **** 
ARM GAS  /tmp/ccLP3BzJ.s 			page 7


  73:Core/Src/bmp581.c **** int8_t begin()
  74:Core/Src/bmp581.c **** {
  75:Core/Src/bmp581.c ****     // Variable to track errors returned by API calls
  76:Core/Src/bmp581.c ****     int8_t err = BMP5_OK;
  77:Core/Src/bmp581.c **** 
  78:Core/Src/bmp581.c ****     // Initialize the sensor
  79:Core/Src/bmp581.c ****     err = init();
  80:Core/Src/bmp581.c ****     if(err != BMP5_OK)
  81:Core/Src/bmp581.c ****     {
  82:Core/Src/bmp581.c ****         return err;
  83:Core/Src/bmp581.c ****     }
  84:Core/Src/bmp581.c **** 
  85:Core/Src/bmp581.c ****     // Enable both pressure and temperature sensors
  86:Core/Src/bmp581.c ****     err = enablePress(BMP5_ENABLE);
  87:Core/Src/bmp581.c ****     if(err != BMP5_OK)
  88:Core/Src/bmp581.c ****     {
  89:Core/Src/bmp581.c ****         return err;
  90:Core/Src/bmp581.c ****     }
  91:Core/Src/bmp581.c **** 
  92:Core/Src/bmp581.c ****     // Set to normal mode
  93:Core/Src/bmp581.c ****     return setMode(BMP5_POWERMODE_NORMAL);
  94:Core/Src/bmp581.c **** }
  95:Core/Src/bmp581.c **** 
  96:Core/Src/bmp581.c **** int8_t beginSPI()
  97:Core/Src/bmp581.c **** {
  98:Core/Src/bmp581.c ****     // Set up chip select pin
  99:Core/Src/bmp581.c ****     HAL_GPIO_WritePin(BMP581_CSN_PORT, BMP581_CSN_PIN, GPIO_PIN_SET);
 100:Core/Src/bmp581.c **** 
 101:Core/Src/bmp581.c ****     // Initialize sensor
 102:Core/Src/bmp581.c ****     return begin();
 103:Core/Src/bmp581.c **** }
 104:Core/Src/bmp581.c **** 
 105:Core/Src/bmp581.c **** int8_t init()
 106:Core/Src/bmp581.c **** {
 256              		.loc 1 106 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI9:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 107:Core/Src/bmp581.c ****     // Variable to track errors returned by API calls
 108:Core/Src/bmp581.c ****     int8_t err = BMP5_OK;
 265              		.loc 1 108 5 view .LVU41
 266              	.LVL24:
 109:Core/Src/bmp581.c **** 
 110:Core/Src/bmp581.c ****     // Initialize config values
 111:Core/Src/bmp581.c ****     osrOdrConfig = (struct bmp5_osr_odr_press_config){0,0,0,0};
 267              		.loc 1 111 5 view .LVU42
 268              		.loc 1 111 18 is_stmt 0 view .LVU43
 269 0002 0023     		movs	r3, #0
 270 0004 0A4A     		ldr	r2, .L19
 271 0006 1360     		str	r3, [r2]
 112:Core/Src/bmp581.c ****     fifo = (struct bmp5_fifo){0,0,0,0,0,0,0,0,0};
 272              		.loc 1 112 5 is_stmt 1 view .LVU44
ARM GAS  /tmp/ccLP3BzJ.s 			page 8


 273              		.loc 1 112 10 is_stmt 0 view .LVU45
 274 0008 0A4A     		ldr	r2, .L19+4
 275 000a 1360     		str	r3, [r2]
 276 000c 5360     		str	r3, [r2, #4]
 277 000e 9360     		str	r3, [r2, #8]
 278 0010 D360     		str	r3, [r2, #12]
 113:Core/Src/bmp581.c **** 
 114:Core/Src/bmp581.c ****     // Set helper function pointers
 115:Core/Src/bmp581.c ****     sensor.read = readRegisters;
 279              		.loc 1 115 5 is_stmt 1 view .LVU46
 280              		.loc 1 115 17 is_stmt 0 view .LVU47
 281 0012 0948     		ldr	r0, .L19+8
 282 0014 094B     		ldr	r3, .L19+12
 283 0016 8360     		str	r3, [r0, #8]
 116:Core/Src/bmp581.c ****     sensor.write = writeRegisters;
 284              		.loc 1 116 5 is_stmt 1 view .LVU48
 285              		.loc 1 116 18 is_stmt 0 view .LVU49
 286 0018 094B     		ldr	r3, .L19+16
 287 001a C360     		str	r3, [r0, #12]
 117:Core/Src/bmp581.c ****     sensor.delay_us = usDelay;
 288              		.loc 1 117 5 is_stmt 1 view .LVU50
 289              		.loc 1 117 21 is_stmt 0 view .LVU51
 290 001c 094B     		ldr	r3, .L19+20
 291 001e 0361     		str	r3, [r0, #16]
 118:Core/Src/bmp581.c ****     //sensor.intf_ptr = &interfaceData;
 119:Core/Src/bmp581.c **** 
 120:Core/Src/bmp581.c ****     // Reset the sensor
 121:Core/Src/bmp581.c ****     err = bmp5_soft_reset(&sensor);
 292              		.loc 1 121 5 is_stmt 1 view .LVU52
 293              		.loc 1 121 11 is_stmt 0 view .LVU53
 294 0020 FFF7FEFF 		bl	bmp5_soft_reset
 295              	.LVL25:
 122:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 296              		.loc 1 122 5 is_stmt 1 view .LVU54
 297              		.loc 1 122 7 is_stmt 0 view .LVU55
 298 0024 00B1     		cbz	r0, .L18
 299              	.L16:
 123:Core/Src/bmp581.c ****     {
 124:Core/Src/bmp581.c ****         return err;
 125:Core/Src/bmp581.c ****     }
 126:Core/Src/bmp581.c **** 
 127:Core/Src/bmp581.c ****     // Initialize the sensor
 128:Core/Src/bmp581.c ****     return bmp5_init(&sensor);
 129:Core/Src/bmp581.c **** }
 300              		.loc 1 129 1 view .LVU56
 301 0026 08BD     		pop	{r3, pc}
 302              	.L18:
 128:Core/Src/bmp581.c **** }
 303              		.loc 1 128 5 is_stmt 1 view .LVU57
 128:Core/Src/bmp581.c **** }
 304              		.loc 1 128 12 is_stmt 0 view .LVU58
 305 0028 0348     		ldr	r0, .L19+8
 306 002a FFF7FEFF 		bl	bmp5_init
 307              	.LVL26:
 308 002e FAE7     		b	.L16
 309              	.L20:
 310              		.align	2
ARM GAS  /tmp/ccLP3BzJ.s 			page 9


 311              	.L19:
 312 0030 00000000 		.word	osrOdrConfig
 313 0034 00000000 		.word	fifo
 314 0038 00000000 		.word	sensor
 315 003c 00000000 		.word	readRegisters
 316 0040 00000000 		.word	writeRegisters
 317 0044 00000000 		.word	usDelay
 318              		.cfi_endproc
 319              	.LFE139:
 321              		.section	.text.setMode,"ax",%progbits
 322              		.align	1
 323              		.global	setMode
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	setMode:
 329              	.LVL27:
 330              	.LFB140:
 130:Core/Src/bmp581.c **** 
 131:Core/Src/bmp581.c **** int8_t setMode(enum bmp5_powermode mode)
 132:Core/Src/bmp581.c **** {
 331              		.loc 1 132 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		.loc 1 132 1 is_stmt 0 view .LVU60
 336 0000 08B5     		push	{r3, lr}
 337              	.LCFI10:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 133:Core/Src/bmp581.c ****     return bmp5_set_power_mode(mode, &sensor);
 341              		.loc 1 133 5 is_stmt 1 view .LVU61
 342              		.loc 1 133 12 is_stmt 0 view .LVU62
 343 0002 0249     		ldr	r1, .L23
 344 0004 FFF7FEFF 		bl	bmp5_set_power_mode
 345              	.LVL28:
 134:Core/Src/bmp581.c **** }
 346              		.loc 1 134 1 view .LVU63
 347 0008 08BD     		pop	{r3, pc}
 348              	.L24:
 349 000a 00BF     		.align	2
 350              	.L23:
 351 000c 00000000 		.word	sensor
 352              		.cfi_endproc
 353              	.LFE140:
 355              		.section	.text.getMode,"ax",%progbits
 356              		.align	1
 357              		.global	getMode
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 362              	getMode:
 363              	.LVL29:
 364              	.LFB141:
 135:Core/Src/bmp581.c **** 
 136:Core/Src/bmp581.c **** int8_t getMode(enum bmp5_powermode* mode)
ARM GAS  /tmp/ccLP3BzJ.s 			page 10


 137:Core/Src/bmp581.c **** {
 365              		.loc 1 137 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		.loc 1 137 1 is_stmt 0 view .LVU65
 370 0000 08B5     		push	{r3, lr}
 371              	.LCFI11:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 3, -8
 374              		.cfi_offset 14, -4
 138:Core/Src/bmp581.c ****     return bmp5_get_power_mode(mode, &sensor);
 375              		.loc 1 138 5 is_stmt 1 view .LVU66
 376              		.loc 1 138 12 is_stmt 0 view .LVU67
 377 0002 0249     		ldr	r1, .L27
 378 0004 FFF7FEFF 		bl	bmp5_get_power_mode
 379              	.LVL30:
 139:Core/Src/bmp581.c **** }
 380              		.loc 1 139 1 view .LVU68
 381 0008 08BD     		pop	{r3, pc}
 382              	.L28:
 383 000a 00BF     		.align	2
 384              	.L27:
 385 000c 00000000 		.word	sensor
 386              		.cfi_endproc
 387              	.LFE141:
 389              		.section	.text.enablePress,"ax",%progbits
 390              		.align	1
 391              		.global	enablePress
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	enablePress:
 397              	.LVL31:
 398              	.LFB142:
 140:Core/Src/bmp581.c **** 
 141:Core/Src/bmp581.c **** int8_t enablePress(uint8_t pressEnable)
 142:Core/Src/bmp581.c **** {
 399              		.loc 1 142 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		.loc 1 142 1 is_stmt 0 view .LVU70
 404 0000 08B5     		push	{r3, lr}
 405              	.LCFI12:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
 143:Core/Src/bmp581.c ****     osrOdrConfig.press_en = pressEnable;
 409              		.loc 1 143 5 is_stmt 1 view .LVU71
 410              		.loc 1 143 27 is_stmt 0 view .LVU72
 411 0002 034B     		ldr	r3, .L31
 412 0004 9870     		strb	r0, [r3, #2]
 144:Core/Src/bmp581.c ****     return bmp5_set_osr_odr_press_config(&osrOdrConfig, &sensor);
 413              		.loc 1 144 5 is_stmt 1 view .LVU73
 414              		.loc 1 144 12 is_stmt 0 view .LVU74
 415 0006 0349     		ldr	r1, .L31+4
ARM GAS  /tmp/ccLP3BzJ.s 			page 11


 416 0008 1846     		mov	r0, r3
 417              	.LVL32:
 418              		.loc 1 144 12 view .LVU75
 419 000a FFF7FEFF 		bl	bmp5_set_osr_odr_press_config
 420              	.LVL33:
 145:Core/Src/bmp581.c **** }
 421              		.loc 1 145 1 view .LVU76
 422 000e 08BD     		pop	{r3, pc}
 423              	.L32:
 424              		.align	2
 425              	.L31:
 426 0010 00000000 		.word	osrOdrConfig
 427 0014 00000000 		.word	sensor
 428              		.cfi_endproc
 429              	.LFE142:
 431              		.section	.text.begin,"ax",%progbits
 432              		.align	1
 433              		.global	begin
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 438              	begin:
 439              	.LFB137:
  74:Core/Src/bmp581.c ****     // Variable to track errors returned by API calls
 440              		.loc 1 74 1 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              	.LCFI13:
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 3, -8
 448              		.cfi_offset 14, -4
  76:Core/Src/bmp581.c **** 
 449              		.loc 1 76 5 view .LVU78
 450              	.LVL34:
  79:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 451              		.loc 1 79 5 view .LVU79
  79:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 452              		.loc 1 79 11 is_stmt 0 view .LVU80
 453 0002 FFF7FEFF 		bl	init
 454              	.LVL35:
  80:Core/Src/bmp581.c ****     {
 455              		.loc 1 80 5 is_stmt 1 view .LVU81
  80:Core/Src/bmp581.c ****     {
 456              		.loc 1 80 7 is_stmt 0 view .LVU82
 457 0006 0346     		mov	r3, r0
 458 0008 08B1     		cbz	r0, .L36
 459              	.LVL36:
 460              	.L34:
  94:Core/Src/bmp581.c **** 
 461              		.loc 1 94 1 view .LVU83
 462 000a 1846     		mov	r0, r3
 463 000c 08BD     		pop	{r3, pc}
 464              	.LVL37:
 465              	.L36:
  86:Core/Src/bmp581.c ****     if(err != BMP5_OK)
ARM GAS  /tmp/ccLP3BzJ.s 			page 12


 466              		.loc 1 86 5 is_stmt 1 view .LVU84
  86:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 467              		.loc 1 86 11 is_stmt 0 view .LVU85
 468 000e 0120     		movs	r0, #1
 469              	.LVL38:
  86:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 470              		.loc 1 86 11 view .LVU86
 471 0010 FFF7FEFF 		bl	enablePress
 472              	.LVL39:
  87:Core/Src/bmp581.c ****     {
 473              		.loc 1 87 5 is_stmt 1 view .LVU87
  87:Core/Src/bmp581.c ****     {
 474              		.loc 1 87 7 is_stmt 0 view .LVU88
 475 0014 0346     		mov	r3, r0
 476 0016 0028     		cmp	r0, #0
 477 0018 F7D1     		bne	.L34
  93:Core/Src/bmp581.c **** }
 478              		.loc 1 93 5 is_stmt 1 view .LVU89
  93:Core/Src/bmp581.c **** }
 479              		.loc 1 93 12 is_stmt 0 view .LVU90
 480 001a 0120     		movs	r0, #1
 481              	.LVL40:
  93:Core/Src/bmp581.c **** }
 482              		.loc 1 93 12 view .LVU91
 483 001c FFF7FEFF 		bl	setMode
 484              	.LVL41:
 485 0020 0346     		mov	r3, r0
 486 0022 F2E7     		b	.L34
 487              		.cfi_endproc
 488              	.LFE137:
 490              		.section	.text.beginSPI,"ax",%progbits
 491              		.align	1
 492              		.global	beginSPI
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 497              	beginSPI:
 498              	.LFB138:
  97:Core/Src/bmp581.c ****     // Set up chip select pin
 499              		.loc 1 97 1 is_stmt 1 view -0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503 0000 08B5     		push	{r3, lr}
 504              	.LCFI14:
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 3, -8
 507              		.cfi_offset 14, -4
  99:Core/Src/bmp581.c **** 
 508              		.loc 1 99 5 view .LVU93
 509 0002 0122     		movs	r2, #1
 510 0004 1021     		movs	r1, #16
 511 0006 0348     		ldr	r0, .L39
 512 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 513              	.LVL42:
 102:Core/Src/bmp581.c **** }
 514              		.loc 1 102 5 view .LVU94
ARM GAS  /tmp/ccLP3BzJ.s 			page 13


 102:Core/Src/bmp581.c **** }
 515              		.loc 1 102 12 is_stmt 0 view .LVU95
 516 000c FFF7FEFF 		bl	begin
 517              	.LVL43:
 103:Core/Src/bmp581.c **** 
 518              		.loc 1 103 1 view .LVU96
 519 0010 08BD     		pop	{r3, pc}
 520              	.L40:
 521 0012 00BF     		.align	2
 522              	.L39:
 523 0014 00080240 		.word	1073874944
 524              		.cfi_endproc
 525              	.LFE138:
 527              		.section	.text.getSensorData,"ax",%progbits
 528              		.align	1
 529              		.global	getSensorData
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 534              	getSensorData:
 535              	.LVL44:
 536              	.LFB143:
 146:Core/Src/bmp581.c **** 
 147:Core/Src/bmp581.c **** int8_t getSensorData(struct bmp5_sensor_data* data)
 148:Core/Src/bmp581.c **** {
 537              		.loc 1 148 1 is_stmt 1 view -0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		.loc 1 148 1 is_stmt 0 view .LVU98
 542 0000 08B5     		push	{r3, lr}
 543              	.LCFI15:
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 3, -8
 546              		.cfi_offset 14, -4
 149:Core/Src/bmp581.c ****     return bmp5_get_sensor_data(data, &osrOdrConfig, &sensor);
 547              		.loc 1 149 5 is_stmt 1 view .LVU99
 548              		.loc 1 149 12 is_stmt 0 view .LVU100
 549 0002 024A     		ldr	r2, .L43
 550 0004 0249     		ldr	r1, .L43+4
 551 0006 FFF7FEFF 		bl	bmp5_get_sensor_data
 552              	.LVL45:
 150:Core/Src/bmp581.c **** }
 553              		.loc 1 150 1 view .LVU101
 554 000a 08BD     		pop	{r3, pc}
 555              	.L44:
 556              		.align	2
 557              	.L43:
 558 000c 00000000 		.word	sensor
 559 0010 00000000 		.word	osrOdrConfig
 560              		.cfi_endproc
 561              	.LFE143:
 563              		.section	.text.kalman_filter,"ax",%progbits
 564              		.align	1
 565              		.global	kalman_filter
 566              		.syntax unified
 567              		.thumb
ARM GAS  /tmp/ccLP3BzJ.s 			page 14


 568              		.thumb_func
 570              	kalman_filter:
 571              	.LVL46:
 572              	.LFB144:
 151:Core/Src/bmp581.c **** 
 152:Core/Src/bmp581.c **** float kalman_filter(float inputValue)
 153:Core/Src/bmp581.c **** {
 573              		.loc 1 153 1 is_stmt 1 view -0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 154:Core/Src/bmp581.c ****     float x_k1_k1,x_k_k1;
 578              		.loc 1 154 5 view .LVU103
 155:Core/Src/bmp581.c ****     float Z_k;
 579              		.loc 1 155 5 view .LVU104
 156:Core/Src/bmp581.c ****     static float P_k1_k1;
 580              		.loc 1 156 5 view .LVU105
 157:Core/Src/bmp581.c **** 
 158:Core/Src/bmp581.c ****     static float Q = 0.0001;//Q: Regulation noise, Q increases, dynamic response becomes faster, an
 581              		.loc 1 158 5 view .LVU106
 159:Core/Src/bmp581.c ****     static float R = 0.005; //R: Test noise, R increases, dynamic response becomes slower, converge
 582              		.loc 1 159 5 view .LVU107
 160:Core/Src/bmp581.c ****     static float Kg = 0;
 583              		.loc 1 160 5 view .LVU108
 161:Core/Src/bmp581.c ****     static float P_k_k1 = 1;
 584              		.loc 1 161 5 view .LVU109
 162:Core/Src/bmp581.c **** 
 163:Core/Src/bmp581.c ****     float kalman_value;
 585              		.loc 1 163 5 view .LVU110
 164:Core/Src/bmp581.c ****     static float kalman_old=0;
 586              		.loc 1 164 5 view .LVU111
 165:Core/Src/bmp581.c ****     Z_k = inputValue;
 587              		.loc 1 165 5 view .LVU112
 166:Core/Src/bmp581.c ****     x_k1_k1 = kalman_old;
 588              		.loc 1 166 5 view .LVU113
 589              		.loc 1 166 13 is_stmt 0 view .LVU114
 590 0000 144B     		ldr	r3, .L46
 591 0002 93ED006A 		vldr.32	s12, [r3]
 592              	.LVL47:
 167:Core/Src/bmp581.c **** 
 168:Core/Src/bmp581.c ****     x_k_k1 = x_k1_k1;
 593              		.loc 1 168 5 is_stmt 1 view .LVU115
 169:Core/Src/bmp581.c ****     P_k_k1 = P_k1_k1 + Q;
 594              		.loc 1 169 5 view .LVU116
 595              		.loc 1 169 22 is_stmt 0 view .LVU117
 596 0006 1449     		ldr	r1, .L46+4
 597 0008 D1ED007A 		vldr.32	s15, [r1]
 598 000c 9FED137A 		vldr.32	s14, .L46+8
 599 0010 77EE877A 		vadd.f32	s15, s15, s14
 600              		.loc 1 169 12 view .LVU118
 601 0014 124A     		ldr	r2, .L46+12
 602 0016 C2ED007A 		vstr.32	s15, [r2]
 170:Core/Src/bmp581.c **** 
 171:Core/Src/bmp581.c ****     Kg = P_k_k1/(P_k_k1 + R);
 603              		.loc 1 171 5 is_stmt 1 view .LVU119
 604              		.loc 1 171 25 is_stmt 0 view .LVU120
ARM GAS  /tmp/ccLP3BzJ.s 			page 15


 605 001a 9FED127A 		vldr.32	s14, .L46+16
 606 001e 37EE877A 		vadd.f32	s14, s15, s14
 607              		.loc 1 171 16 view .LVU121
 608 0022 C7EE876A 		vdiv.f32	s13, s15, s14
 609              		.loc 1 171 8 view .LVU122
 610 0026 1048     		ldr	r0, .L46+20
 611 0028 C0ED006A 		vstr.32	s13, [r0]
 172:Core/Src/bmp581.c **** 
 173:Core/Src/bmp581.c ****     kalman_value = x_k_k1 + Kg * (Z_k - kalman_old);
 612              		.loc 1 173 5 is_stmt 1 view .LVU123
 613              		.loc 1 173 39 is_stmt 0 view .LVU124
 614 002c 30EE460A 		vsub.f32	s0, s0, s12
 615              	.LVL48:
 616              		.loc 1 173 32 view .LVU125
 617 0030 26EE800A 		vmul.f32	s0, s13, s0
 618              		.loc 1 173 18 view .LVU126
 619 0034 30EE060A 		vadd.f32	s0, s0, s12
 620              	.LVL49:
 174:Core/Src/bmp581.c ****     P_k1_k1 = (1 - Kg)*P_k_k1;
 621              		.loc 1 174 5 is_stmt 1 view .LVU127
 622              		.loc 1 174 18 is_stmt 0 view .LVU128
 623 0038 B7EE007A 		vmov.f32	s14, #1.0e+0
 624 003c 37EE667A 		vsub.f32	s14, s14, s13
 625              		.loc 1 174 23 view .LVU129
 626 0040 67EE877A 		vmul.f32	s15, s15, s14
 627              		.loc 1 174 13 view .LVU130
 628 0044 C1ED007A 		vstr.32	s15, [r1]
 175:Core/Src/bmp581.c ****     P_k_k1 = P_k1_k1;
 629              		.loc 1 175 5 is_stmt 1 view .LVU131
 630              		.loc 1 175 12 is_stmt 0 view .LVU132
 631 0048 C2ED007A 		vstr.32	s15, [r2]
 176:Core/Src/bmp581.c **** 
 177:Core/Src/bmp581.c ****     kalman_old = kalman_value;
 632              		.loc 1 177 5 is_stmt 1 view .LVU133
 633              		.loc 1 177 16 is_stmt 0 view .LVU134
 634 004c 83ED000A 		vstr.32	s0, [r3]
 178:Core/Src/bmp581.c **** 
 179:Core/Src/bmp581.c ****     return kalman_value;
 635              		.loc 1 179 5 is_stmt 1 view .LVU135
 180:Core/Src/bmp581.c **** }
 636              		.loc 1 180 1 is_stmt 0 view .LVU136
 637 0050 7047     		bx	lr
 638              	.L47:
 639 0052 00BF     		.align	2
 640              	.L46:
 641 0054 00000000 		.word	kalman_old.5
 642 0058 00000000 		.word	P_k1_k1.4
 643 005c 17B7D138 		.word	953267991
 644 0060 00000000 		.word	P_k_k1.2
 645 0064 0AD7A33B 		.word	1000593162
 646 0068 00000000 		.word	Kg.0
 647              		.cfi_endproc
 648              	.LFE144:
 650              		.global	__aeabi_f2d
 651              		.global	__aeabi_d2f
 652              		.global	__aeabi_ddiv
 653              		.section	.text.calcAltitude,"ax",%progbits
ARM GAS  /tmp/ccLP3BzJ.s 			page 16


 654              		.align	1
 655              		.global	calcAltitude
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 660              	calcAltitude:
 661              	.LVL50:
 662              	.LFB145:
 181:Core/Src/bmp581.c **** 
 182:Core/Src/bmp581.c **** float calcAltitude(float pressure) {
 663              		.loc 1 182 36 is_stmt 1 view -0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              		.loc 1 182 36 is_stmt 0 view .LVU138
 668 0000 08B5     		push	{r3, lr}
 669              	.LCFI16:
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 3, -8
 672              		.cfi_offset 14, -4
 183:Core/Src/bmp581.c ****     float A = pressure / 101325;
 673              		.loc 1 183 5 is_stmt 1 view .LVU139
 674              	.LVL51:
 184:Core/Src/bmp581.c ****     float B = 1 / 5.25588;
 675              		.loc 1 184 5 view .LVU140
 185:Core/Src/bmp581.c ****     float C = pow(A, B);
 676              		.loc 1 185 5 view .LVU141
 677              		.loc 1 185 15 is_stmt 0 view .LVU142
 678 0002 DFED177A 		vldr.32	s15, .L50+16
 679 0006 C0EE277A 		vdiv.f32	s15, s0, s15
 680              	.LVL52:
 681              		.loc 1 185 15 view .LVU143
 682 000a 17EE900A 		vmov	r0, s15
 683 000e FFF7FEFF 		bl	__aeabi_f2d
 684              	.LVL53:
 685              		.loc 1 185 15 view .LVU144
 686 0012 9FED0F1B 		vldr.64	d1, .L50
 687 0016 41EC100B 		vmov	d0, r0, r1
 688 001a FFF7FEFF 		bl	pow
 689              	.LVL54:
 690 001e 51EC100B 		vmov	r0, r1, d0
 691              		.loc 1 185 11 view .LVU145
 692 0022 FFF7FEFF 		bl	__aeabi_d2f
 693              	.LVL55:
 694 0026 07EE900A 		vmov	s15, r0
 695              	.LVL56:
 186:Core/Src/bmp581.c ****     C = 1.0 - C;
 696              		.loc 1 186 5 is_stmt 1 view .LVU146
 187:Core/Src/bmp581.c ****     C = C / 0.0000225577;
 697              		.loc 1 187 5 view .LVU147
 698              		.loc 1 187 11 is_stmt 0 view .LVU148
 699 002a B7EE007A 		vmov.f32	s14, #1.0e+0
 700 002e 77EE677A 		vsub.f32	s15, s14, s15
 701              	.LVL57:
 702              		.loc 1 187 11 view .LVU149
 703 0032 17EE900A 		vmov	r0, s15
 704 0036 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  /tmp/ccLP3BzJ.s 			page 17


 705              	.LVL58:
 706              		.loc 1 187 11 view .LVU150
 707 003a 07A3     		adr	r3, .L50+8
 708 003c D3E90023 		ldrd	r2, [r3]
 709 0040 FFF7FEFF 		bl	__aeabi_ddiv
 710              	.LVL59:
 711              		.loc 1 187 7 view .LVU151
 712 0044 FFF7FEFF 		bl	__aeabi_d2f
 713              	.LVL60:
 188:Core/Src/bmp581.c ****     return C;
 714              		.loc 1 188 5 is_stmt 1 view .LVU152
 189:Core/Src/bmp581.c **** }
 715              		.loc 1 189 1 is_stmt 0 view .LVU153
 716 0048 00EE100A 		vmov	s0, r0
 717 004c 08BD     		pop	{r3, pc}
 718              	.L51:
 719 004e 00BF     		.align	3
 720              	.L50:
 721 0050 00000080 		.word	-2147483648
 722 0054 8A5AC83F 		.word	1070094986
 723 0058 DF552257 		.word	1461867999
 724 005c 49A7F73E 		.word	1056417609
 725 0060 80E6C547 		.word	1204151936
 726              		.cfi_endproc
 727              	.LFE145:
 729              		.section	.text.setODRFrequency,"ax",%progbits
 730              		.align	1
 731              		.global	setODRFrequency
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 736              	setODRFrequency:
 737              	.LVL61:
 738              	.LFB146:
 190:Core/Src/bmp581.c **** 
 191:Core/Src/bmp581.c **** int8_t setODRFrequency(uint8_t odr)
 192:Core/Src/bmp581.c **** {
 739              		.loc 1 192 1 is_stmt 1 view -0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 193:Core/Src/bmp581.c ****     // Check whether ODR is valid
 194:Core/Src/bmp581.c ****     if(odr > BMP5_ODR_0_125_HZ)
 743              		.loc 1 194 5 view .LVU155
 744              		.loc 1 194 7 is_stmt 0 view .LVU156
 745 0000 1F28     		cmp	r0, #31
 746 0002 07D8     		bhi	.L54
 192:Core/Src/bmp581.c ****     // Check whether ODR is valid
 747              		.loc 1 192 1 view .LVU157
 748 0004 08B5     		push	{r3, lr}
 749              	.LCFI17:
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 3, -8
 752              		.cfi_offset 14, -4
 753 0006 0346     		mov	r3, r0
 195:Core/Src/bmp581.c ****     {
 196:Core/Src/bmp581.c ****         return BMP5_E_INVALID_SETTING;
ARM GAS  /tmp/ccLP3BzJ.s 			page 18


 197:Core/Src/bmp581.c ****     }
 198:Core/Src/bmp581.c **** 
 199:Core/Src/bmp581.c ****     osrOdrConfig.odr = odr;
 754              		.loc 1 199 5 is_stmt 1 view .LVU158
 755              		.loc 1 199 22 is_stmt 0 view .LVU159
 756 0008 0448     		ldr	r0, .L59
 757              	.LVL62:
 758              		.loc 1 199 22 view .LVU160
 759 000a C370     		strb	r3, [r0, #3]
 200:Core/Src/bmp581.c ****     return bmp5_set_osr_odr_press_config(&osrOdrConfig, &sensor);
 760              		.loc 1 200 5 is_stmt 1 view .LVU161
 761              		.loc 1 200 12 is_stmt 0 view .LVU162
 762 000c 0449     		ldr	r1, .L59+4
 763 000e FFF7FEFF 		bl	bmp5_set_osr_odr_press_config
 764              	.LVL63:
 201:Core/Src/bmp581.c **** }
 765              		.loc 1 201 1 view .LVU163
 766 0012 08BD     		pop	{r3, pc}
 767              	.LVL64:
 768              	.L54:
 769              	.LCFI18:
 770              		.cfi_def_cfa_offset 0
 771              		.cfi_restore 3
 772              		.cfi_restore 14
 196:Core/Src/bmp581.c ****     }
 773              		.loc 1 196 16 view .LVU164
 774 0014 6FF00B00 		mvn	r0, #11
 775              	.LVL65:
 776              		.loc 1 201 1 view .LVU165
 777 0018 7047     		bx	lr
 778              	.L60:
 779 001a 00BF     		.align	2
 780              	.L59:
 781 001c 00000000 		.word	osrOdrConfig
 782 0020 00000000 		.word	sensor
 783              		.cfi_endproc
 784              	.LFE146:
 786              		.section	.text.getODRFrequency,"ax",%progbits
 787              		.align	1
 788              		.global	getODRFrequency
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 793              	getODRFrequency:
 794              	.LVL66:
 795              	.LFB147:
 202:Core/Src/bmp581.c **** 
 203:Core/Src/bmp581.c **** int8_t getODRFrequency(uint8_t* odr)
 204:Core/Src/bmp581.c **** {
 796              		.loc 1 204 1 is_stmt 1 view -0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 205:Core/Src/bmp581.c ****     *odr = osrOdrConfig.odr;
 801              		.loc 1 205 5 view .LVU167
 802              		.loc 1 205 24 is_stmt 0 view .LVU168
ARM GAS  /tmp/ccLP3BzJ.s 			page 19


 803 0000 024B     		ldr	r3, .L62
 804 0002 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 805              		.loc 1 205 10 view .LVU169
 806 0004 0370     		strb	r3, [r0]
 206:Core/Src/bmp581.c ****     return BMP5_OK;
 807              		.loc 1 206 5 is_stmt 1 view .LVU170
 207:Core/Src/bmp581.c **** }
 808              		.loc 1 207 1 is_stmt 0 view .LVU171
 809 0006 0020     		movs	r0, #0
 810              	.LVL67:
 811              		.loc 1 207 1 view .LVU172
 812 0008 7047     		bx	lr
 813              	.L63:
 814 000a 00BF     		.align	2
 815              	.L62:
 816 000c 00000000 		.word	osrOdrConfig
 817              		.cfi_endproc
 818              	.LFE147:
 820              		.section	.text.setOSRMultipliers,"ax",%progbits
 821              		.align	1
 822              		.global	setOSRMultipliers
 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 827              	setOSRMultipliers:
 828              	.LVL68:
 829              	.LFB148:
 208:Core/Src/bmp581.c **** 
 209:Core/Src/bmp581.c **** int8_t setOSRMultipliers(struct bmp5_osr_odr_press_config* config)
 210:Core/Src/bmp581.c **** {
 830              		.loc 1 210 1 is_stmt 1 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		.loc 1 210 1 is_stmt 0 view .LVU174
 835 0000 08B5     		push	{r3, lr}
 836              	.LCFI19:
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 3, -8
 839              		.cfi_offset 14, -4
 211:Core/Src/bmp581.c ****     // Check whether OSR multipliers are valid
 212:Core/Src/bmp581.c ****     if(config->osr_t > BMP5_OVERSAMPLING_128X
 840              		.loc 1 212 5 is_stmt 1 view .LVU175
 841              		.loc 1 212 14 is_stmt 0 view .LVU176
 842 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 843              		.loc 1 212 7 view .LVU177
 844 0004 072B     		cmp	r3, #7
 845 0006 09D8     		bhi	.L66
 213:Core/Src/bmp581.c ****         || config->osr_p > BMP5_OVERSAMPLING_128X)
 846              		.loc 1 213 18 view .LVU178
 847 0008 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 848              		.loc 1 213 9 view .LVU179
 849 000a 072A     		cmp	r2, #7
 850 000c 09D8     		bhi	.L67
 214:Core/Src/bmp581.c ****     {
 215:Core/Src/bmp581.c ****         return BMP5_E_INVALID_SETTING;
 216:Core/Src/bmp581.c ****     }
ARM GAS  /tmp/ccLP3BzJ.s 			page 20


 217:Core/Src/bmp581.c **** 
 218:Core/Src/bmp581.c ****     // TODO - Check whether this OSR is compatible with current ODR
 219:Core/Src/bmp581.c **** 
 220:Core/Src/bmp581.c ****     osrOdrConfig.osr_t = config->osr_t;
 851              		.loc 1 220 5 is_stmt 1 view .LVU180
 852              		.loc 1 220 24 is_stmt 0 view .LVU181
 853 000e 0648     		ldr	r0, .L69
 854              	.LVL69:
 855              		.loc 1 220 24 view .LVU182
 856 0010 0370     		strb	r3, [r0]
 221:Core/Src/bmp581.c ****     osrOdrConfig.osr_p = config->osr_p;
 857              		.loc 1 221 5 is_stmt 1 view .LVU183
 858              		.loc 1 221 24 is_stmt 0 view .LVU184
 859 0012 4270     		strb	r2, [r0, #1]
 222:Core/Src/bmp581.c ****     return bmp5_set_osr_odr_press_config(&osrOdrConfig, &sensor);
 860              		.loc 1 222 5 is_stmt 1 view .LVU185
 861              		.loc 1 222 12 is_stmt 0 view .LVU186
 862 0014 0549     		ldr	r1, .L69+4
 863 0016 FFF7FEFF 		bl	bmp5_set_osr_odr_press_config
 864              	.LVL70:
 865              	.L65:
 223:Core/Src/bmp581.c **** }
 866              		.loc 1 223 1 view .LVU187
 867 001a 08BD     		pop	{r3, pc}
 868              	.LVL71:
 869              	.L66:
 215:Core/Src/bmp581.c ****     }
 870              		.loc 1 215 16 view .LVU188
 871 001c 6FF00B00 		mvn	r0, #11
 872              	.LVL72:
 215:Core/Src/bmp581.c ****     }
 873              		.loc 1 215 16 view .LVU189
 874 0020 FBE7     		b	.L65
 875              	.LVL73:
 876              	.L67:
 215:Core/Src/bmp581.c ****     }
 877              		.loc 1 215 16 view .LVU190
 878 0022 6FF00B00 		mvn	r0, #11
 879              	.LVL74:
 215:Core/Src/bmp581.c ****     }
 880              		.loc 1 215 16 view .LVU191
 881 0026 F8E7     		b	.L65
 882              	.L70:
 883              		.align	2
 884              	.L69:
 885 0028 00000000 		.word	osrOdrConfig
 886 002c 00000000 		.word	sensor
 887              		.cfi_endproc
 888              	.LFE148:
 890              		.section	.text.getOSRMultipliers,"ax",%progbits
 891              		.align	1
 892              		.global	getOSRMultipliers
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 897              	getOSRMultipliers:
 898              	.LVL75:
ARM GAS  /tmp/ccLP3BzJ.s 			page 21


 899              	.LFB149:
 224:Core/Src/bmp581.c **** 
 225:Core/Src/bmp581.c **** int8_t getOSRMultipliers(struct bmp5_osr_odr_press_config* config)
 226:Core/Src/bmp581.c **** {
 900              		.loc 1 226 1 is_stmt 1 view -0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 227:Core/Src/bmp581.c ****     config->osr_t = osrOdrConfig.osr_t;
 905              		.loc 1 227 5 view .LVU193
 906              		.loc 1 227 33 is_stmt 0 view .LVU194
 907 0000 034B     		ldr	r3, .L72
 908 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 909              		.loc 1 227 19 view .LVU195
 910 0004 0270     		strb	r2, [r0]
 228:Core/Src/bmp581.c ****     config->osr_p = osrOdrConfig.osr_p;
 911              		.loc 1 228 5 is_stmt 1 view .LVU196
 912              		.loc 1 228 33 is_stmt 0 view .LVU197
 913 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 914              		.loc 1 228 19 view .LVU198
 915 0008 4370     		strb	r3, [r0, #1]
 229:Core/Src/bmp581.c ****     return BMP5_OK;
 916              		.loc 1 229 5 is_stmt 1 view .LVU199
 230:Core/Src/bmp581.c **** }
 917              		.loc 1 230 1 is_stmt 0 view .LVU200
 918 000a 0020     		movs	r0, #0
 919              	.LVL76:
 920              		.loc 1 230 1 view .LVU201
 921 000c 7047     		bx	lr
 922              	.L73:
 923 000e 00BF     		.align	2
 924              	.L72:
 925 0010 00000000 		.word	osrOdrConfig
 926              		.cfi_endproc
 927              	.LFE149:
 929              		.section	.text.getOSREffective,"ax",%progbits
 930              		.align	1
 931              		.global	getOSREffective
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 936              	getOSREffective:
 937              	.LVL77:
 938              	.LFB150:
 231:Core/Src/bmp581.c **** 
 232:Core/Src/bmp581.c **** int8_t getOSREffective(struct bmp5_osr_odr_eff* osrOdrEffective)
 233:Core/Src/bmp581.c **** {
 939              		.loc 1 233 1 is_stmt 1 view -0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              		.loc 1 233 1 is_stmt 0 view .LVU203
 944 0000 08B5     		push	{r3, lr}
 945              	.LCFI20:
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 3, -8
ARM GAS  /tmp/ccLP3BzJ.s 			page 22


 948              		.cfi_offset 14, -4
 234:Core/Src/bmp581.c ****     return bmp5_get_osr_odr_eff(osrOdrEffective, &sensor);
 949              		.loc 1 234 5 is_stmt 1 view .LVU204
 950              		.loc 1 234 12 is_stmt 0 view .LVU205
 951 0002 0249     		ldr	r1, .L76
 952 0004 FFF7FEFF 		bl	bmp5_get_osr_odr_eff
 953              	.LVL78:
 235:Core/Src/bmp581.c **** }
 954              		.loc 1 235 1 view .LVU206
 955 0008 08BD     		pop	{r3, pc}
 956              	.L77:
 957 000a 00BF     		.align	2
 958              	.L76:
 959 000c 00000000 		.word	sensor
 960              		.cfi_endproc
 961              	.LFE150:
 963              		.section	.text.setFilterConfig,"ax",%progbits
 964              		.align	1
 965              		.global	setFilterConfig
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
 970              	setFilterConfig:
 971              	.LVL79:
 972              	.LFB151:
 236:Core/Src/bmp581.c **** 
 237:Core/Src/bmp581.c **** int8_t setFilterConfig(struct bmp5_iir_config* iirConfig)
 238:Core/Src/bmp581.c **** {
 973              		.loc 1 238 1 is_stmt 1 view -0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977              		.loc 1 238 1 is_stmt 0 view .LVU208
 978 0000 08B5     		push	{r3, lr}
 979              	.LCFI21:
 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 3, -8
 982              		.cfi_offset 14, -4
 239:Core/Src/bmp581.c ****     return bmp5_set_iir_config(iirConfig, &sensor);
 983              		.loc 1 239 5 is_stmt 1 view .LVU209
 984              		.loc 1 239 12 is_stmt 0 view .LVU210
 985 0002 0249     		ldr	r1, .L80
 986 0004 FFF7FEFF 		bl	bmp5_set_iir_config
 987              	.LVL80:
 240:Core/Src/bmp581.c **** }
 988              		.loc 1 240 1 view .LVU211
 989 0008 08BD     		pop	{r3, pc}
 990              	.L81:
 991 000a 00BF     		.align	2
 992              	.L80:
 993 000c 00000000 		.word	sensor
 994              		.cfi_endproc
 995              	.LFE151:
 997              		.section	.text.setOORConfig,"ax",%progbits
 998              		.align	1
 999              		.global	setOORConfig
 1000              		.syntax unified
ARM GAS  /tmp/ccLP3BzJ.s 			page 23


 1001              		.thumb
 1002              		.thumb_func
 1004              	setOORConfig:
 1005              	.LVL81:
 1006              	.LFB152:
 241:Core/Src/bmp581.c **** 
 242:Core/Src/bmp581.c **** int8_t setOORConfig(struct bmp5_oor_press_configuration* oorConfig)
 243:Core/Src/bmp581.c **** {
 1007              		.loc 1 243 1 is_stmt 1 view -0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011              		.loc 1 243 1 is_stmt 0 view .LVU213
 1012 0000 08B5     		push	{r3, lr}
 1013              	.LCFI22:
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 3, -8
 1016              		.cfi_offset 14, -4
 244:Core/Src/bmp581.c ****     return bmp5_set_oor_configuration(oorConfig, &sensor);
 1017              		.loc 1 244 5 is_stmt 1 view .LVU214
 1018              		.loc 1 244 12 is_stmt 0 view .LVU215
 1019 0002 0249     		ldr	r1, .L84
 1020 0004 FFF7FEFF 		bl	bmp5_set_oor_configuration
 1021              	.LVL82:
 245:Core/Src/bmp581.c **** }
 1022              		.loc 1 245 1 view .LVU216
 1023 0008 08BD     		pop	{r3, pc}
 1024              	.L85:
 1025 000a 00BF     		.align	2
 1026              	.L84:
 1027 000c 00000000 		.word	sensor
 1028              		.cfi_endproc
 1029              	.LFE152:
 1031              		.section	.text.setFIFOConfig,"ax",%progbits
 1032              		.align	1
 1033              		.global	setFIFOConfig
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1038              	setFIFOConfig:
 1039              	.LVL83:
 1040              	.LFB153:
 246:Core/Src/bmp581.c **** 
 247:Core/Src/bmp581.c **** int8_t setFIFOConfig(struct bmp5_fifo* fifoConfig)
 248:Core/Src/bmp581.c **** {
 1041              		.loc 1 248 1 is_stmt 1 view -0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 8
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		.loc 1 248 1 is_stmt 0 view .LVU218
 1046 0000 10B5     		push	{r4, lr}
 1047              	.LCFI23:
 1048              		.cfi_def_cfa_offset 8
 1049              		.cfi_offset 4, -8
 1050              		.cfi_offset 14, -4
 1051 0002 82B0     		sub	sp, sp, #8
 1052              	.LCFI24:
ARM GAS  /tmp/ccLP3BzJ.s 			page 24


 1053              		.cfi_def_cfa_offset 16
 1054 0004 0346     		mov	r3, r0
 249:Core/Src/bmp581.c ****     // Variable to track errors returned by API calls
 250:Core/Src/bmp581.c ****     int8_t err = BMP5_OK;
 1055              		.loc 1 250 5 is_stmt 1 view .LVU219
 1056              	.LVL84:
 251:Core/Src/bmp581.c **** 
 252:Core/Src/bmp581.c ****     // Copy desired config
 253:Core/Src/bmp581.c ****     memcpy(&fifo, fifoConfig, sizeof(struct bmp5_fifo));
 1057              		.loc 1 253 5 view .LVU220
 1058 0006 114C     		ldr	r4, .L90
 1059 0008 0068     		ldr	r0, [r0]	@ unaligned
 1060              	.LVL85:
 1061              		.loc 1 253 5 is_stmt 0 view .LVU221
 1062 000a 5968     		ldr	r1, [r3, #4]	@ unaligned
 1063 000c 9A68     		ldr	r2, [r3, #8]	@ unaligned
 1064 000e DB68     		ldr	r3, [r3, #12]	@ unaligned
 1065              	.LVL86:
 1066              		.loc 1 253 5 view .LVU222
 1067 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 254:Core/Src/bmp581.c **** 
 255:Core/Src/bmp581.c ****     // The sensor must be in stanby mode for the FIFO config to
 256:Core/Src/bmp581.c ****     // be set, grab the current power mode
 257:Core/Src/bmp581.c ****     enum bmp5_powermode originalMode;
 1068              		.loc 1 257 5 is_stmt 1 view .LVU223
 258:Core/Src/bmp581.c ****     err = getMode(&originalMode);
 1069              		.loc 1 258 5 view .LVU224
 1070              		.loc 1 258 11 is_stmt 0 view .LVU225
 1071 0012 0DF10700 		add	r0, sp, #7
 1072 0016 FFF7FEFF 		bl	getMode
 1073              	.LVL87:
 259:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 1074              		.loc 1 259 5 is_stmt 1 view .LVU226
 1075              		.loc 1 259 7 is_stmt 0 view .LVU227
 1076 001a 0346     		mov	r3, r0
 1077 001c 10B1     		cbz	r0, .L89
 1078              	.LVL88:
 1079              	.L87:
 260:Core/Src/bmp581.c ****     {
 261:Core/Src/bmp581.c ****         return err;
 262:Core/Src/bmp581.c ****     }
 263:Core/Src/bmp581.c **** 
 264:Core/Src/bmp581.c ****     // Now set to standby
 265:Core/Src/bmp581.c ****     err = setMode(BMP5_POWERMODE_STANDBY);
 266:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 267:Core/Src/bmp581.c ****     {
 268:Core/Src/bmp581.c ****         return err;
 269:Core/Src/bmp581.c ****     }
 270:Core/Src/bmp581.c **** 
 271:Core/Src/bmp581.c ****     // Now we can set the FIFO config
 272:Core/Src/bmp581.c ****     err = bmp5_set_fifo_configuration(&fifo, &sensor);
 273:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 274:Core/Src/bmp581.c ****     {
 275:Core/Src/bmp581.c ****         return err;
 276:Core/Src/bmp581.c ****     }
 277:Core/Src/bmp581.c **** 
 278:Core/Src/bmp581.c ****     // Finally, set back to original power mode
ARM GAS  /tmp/ccLP3BzJ.s 			page 25


 279:Core/Src/bmp581.c ****     return setMode(originalMode);
 280:Core/Src/bmp581.c **** }
 1080              		.loc 1 280 1 view .LVU228
 1081 001e 1846     		mov	r0, r3
 1082 0020 02B0     		add	sp, sp, #8
 1083              	.LCFI25:
 1084              		.cfi_remember_state
 1085              		.cfi_def_cfa_offset 8
 1086              		@ sp needed
 1087 0022 10BD     		pop	{r4, pc}
 1088              	.LVL89:
 1089              	.L89:
 1090              	.LCFI26:
 1091              		.cfi_restore_state
 265:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 1092              		.loc 1 265 5 is_stmt 1 view .LVU229
 265:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 1093              		.loc 1 265 11 is_stmt 0 view .LVU230
 1094 0024 FFF7FEFF 		bl	setMode
 1095              	.LVL90:
 266:Core/Src/bmp581.c ****     {
 1096              		.loc 1 266 5 is_stmt 1 view .LVU231
 266:Core/Src/bmp581.c ****     {
 1097              		.loc 1 266 7 is_stmt 0 view .LVU232
 1098 0028 0346     		mov	r3, r0
 1099 002a 0028     		cmp	r0, #0
 1100 002c F7D1     		bne	.L87
 272:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 1101              		.loc 1 272 5 is_stmt 1 view .LVU233
 272:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 1102              		.loc 1 272 11 is_stmt 0 view .LVU234
 1103 002e 0849     		ldr	r1, .L90+4
 1104 0030 A4F11000 		sub	r0, r4, #16
 1105              	.LVL91:
 272:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 1106              		.loc 1 272 11 view .LVU235
 1107 0034 FFF7FEFF 		bl	bmp5_set_fifo_configuration
 1108              	.LVL92:
 273:Core/Src/bmp581.c ****     {
 1109              		.loc 1 273 5 is_stmt 1 view .LVU236
 273:Core/Src/bmp581.c ****     {
 1110              		.loc 1 273 7 is_stmt 0 view .LVU237
 1111 0038 0346     		mov	r3, r0
 1112 003a 0028     		cmp	r0, #0
 1113 003c EFD1     		bne	.L87
 279:Core/Src/bmp581.c **** }
 1114              		.loc 1 279 5 is_stmt 1 view .LVU238
 279:Core/Src/bmp581.c **** }
 1115              		.loc 1 279 12 is_stmt 0 view .LVU239
 1116 003e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1117              	.LVL93:
 279:Core/Src/bmp581.c **** }
 1118              		.loc 1 279 12 view .LVU240
 1119 0042 FFF7FEFF 		bl	setMode
 1120              	.LVL94:
 1121 0046 0346     		mov	r3, r0
 1122 0048 E9E7     		b	.L87
ARM GAS  /tmp/ccLP3BzJ.s 			page 26


 1123              	.L91:
 1124 004a 00BF     		.align	2
 1125              	.L90:
 1126 004c 00000000 		.word	fifo
 1127 0050 00000000 		.word	sensor
 1128              		.cfi_endproc
 1129              	.LFE153:
 1131              		.section	.text.getFIFOLength,"ax",%progbits
 1132              		.align	1
 1133              		.global	getFIFOLength
 1134              		.syntax unified
 1135              		.thumb
 1136              		.thumb_func
 1138              	getFIFOLength:
 1139              	.LVL95:
 1140              	.LFB154:
 281:Core/Src/bmp581.c **** 
 282:Core/Src/bmp581.c **** int8_t getFIFOLength(uint8_t* numData)
 283:Core/Src/bmp581.c **** {
 1141              		.loc 1 283 1 is_stmt 1 view -0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 8
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              		.loc 1 283 1 is_stmt 0 view .LVU242
 1146 0000 10B5     		push	{r4, lr}
 1147              	.LCFI27:
 1148              		.cfi_def_cfa_offset 8
 1149              		.cfi_offset 4, -8
 1150              		.cfi_offset 14, -4
 1151 0002 82B0     		sub	sp, sp, #8
 1152              	.LCFI28:
 1153              		.cfi_def_cfa_offset 16
 1154 0004 0446     		mov	r4, r0
 284:Core/Src/bmp581.c ****     // Variable to track errors returned by API calls
 285:Core/Src/bmp581.c ****     int8_t err = BMP5_OK;
 1155              		.loc 1 285 5 is_stmt 1 view .LVU243
 1156              	.LVL96:
 286:Core/Src/bmp581.c **** 
 287:Core/Src/bmp581.c ****     uint16_t numBytes = 0;
 1157              		.loc 1 287 5 view .LVU244
 1158              		.loc 1 287 14 is_stmt 0 view .LVU245
 1159 0006 0023     		movs	r3, #0
 1160 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
 288:Core/Src/bmp581.c ****     err = bmp5_get_fifo_len(&numBytes, &fifo, &sensor);
 1161              		.loc 1 288 5 is_stmt 1 view .LVU246
 1162              		.loc 1 288 11 is_stmt 0 view .LVU247
 1163 000c 0D4A     		ldr	r2, .L98
 1164 000e 0E49     		ldr	r1, .L98+4
 1165 0010 0DF10600 		add	r0, sp, #6
 1166              	.LVL97:
 1167              		.loc 1 288 11 view .LVU248
 1168 0014 FFF7FEFF 		bl	bmp5_get_fifo_len
 1169              	.LVL98:
 289:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 1170              		.loc 1 289 5 is_stmt 1 view .LVU249
 1171              		.loc 1 289 7 is_stmt 0 view .LVU250
 1172 0018 68B9     		cbnz	r0, .L93
ARM GAS  /tmp/ccLP3BzJ.s 			page 27


 290:Core/Src/bmp581.c ****     {
 291:Core/Src/bmp581.c ****         return err;
 292:Core/Src/bmp581.c ****     }
 293:Core/Src/bmp581.c **** 
 294:Core/Src/bmp581.c ****     // Determine number of bytes per sample
 295:Core/Src/bmp581.c ****     uint8_t bytesPerSample = 1;
 1173              		.loc 1 295 5 is_stmt 1 view .LVU251
 1174              	.LVL99:
 296:Core/Src/bmp581.c ****     if(fifo.frame_sel == BMP5_FIFO_PRESS_TEMP_DATA)
 1175              		.loc 1 296 5 view .LVU252
 1176              		.loc 1 296 12 is_stmt 0 view .LVU253
 1177 001a 0B4B     		ldr	r3, .L98+4
 1178 001c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1179              		.loc 1 296 7 view .LVU254
 1180 001e 032B     		cmp	r3, #3
 1181 0020 0BD0     		beq	.L95
 297:Core/Src/bmp581.c ****     {
 298:Core/Src/bmp581.c ****         bytesPerSample = 6;
 299:Core/Src/bmp581.c ****     }
 300:Core/Src/bmp581.c ****     else if((fifo.frame_sel == BMP5_FIFO_TEMPERATURE_DATA) || (fifo.frame_sel == BMP5_FIFO_PRESSURE
 1182              		.loc 1 300 10 is_stmt 1 view .LVU255
 1183              		.loc 1 300 60 is_stmt 0 view .LVU256
 1184 0022 013B     		subs	r3, r3, #1
 1185 0024 DBB2     		uxtb	r3, r3
 1186              		.loc 1 300 12 view .LVU257
 1187 0026 012B     		cmp	r3, #1
 1188 0028 09D9     		bls	.L96
 295:Core/Src/bmp581.c ****     if(fifo.frame_sel == BMP5_FIFO_PRESS_TEMP_DATA)
 1189              		.loc 1 295 13 view .LVU258
 1190 002a 0122     		movs	r2, #1
 1191              	.L94:
 1192              	.LVL100:
 301:Core/Src/bmp581.c ****     {
 302:Core/Src/bmp581.c ****         bytesPerSample = 3;
 303:Core/Src/bmp581.c ****     }
 304:Core/Src/bmp581.c **** 
 305:Core/Src/bmp581.c ****     // Compute number of samples in the FIFO buffer
 306:Core/Src/bmp581.c ****     *numData = numBytes / bytesPerSample;
 1193              		.loc 1 306 5 is_stmt 1 view .LVU259
 1194              		.loc 1 306 25 is_stmt 0 view .LVU260
 1195 002c BDF80630 		ldrh	r3, [sp, #6]
 1196 0030 93FBF2F3 		sdiv	r3, r3, r2
 1197              		.loc 1 306 14 view .LVU261
 1198 0034 2370     		strb	r3, [r4]
 307:Core/Src/bmp581.c **** 
 308:Core/Src/bmp581.c ****     return BMP5_OK;
 1199              		.loc 1 308 5 is_stmt 1 view .LVU262
 1200              	.LVL101:
 1201              	.L93:
 309:Core/Src/bmp581.c **** }
 1202              		.loc 1 309 1 is_stmt 0 view .LVU263
 1203 0036 02B0     		add	sp, sp, #8
 1204              	.LCFI29:
 1205              		.cfi_remember_state
 1206              		.cfi_def_cfa_offset 8
 1207              		@ sp needed
 1208 0038 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccLP3BzJ.s 			page 28


 1209              	.LVL102:
 1210              	.L95:
 1211              	.LCFI30:
 1212              		.cfi_restore_state
 298:Core/Src/bmp581.c ****     }
 1213              		.loc 1 298 24 view .LVU264
 1214 003a 0622     		movs	r2, #6
 1215 003c F6E7     		b	.L94
 1216              	.L96:
 302:Core/Src/bmp581.c ****     }
 1217              		.loc 1 302 24 view .LVU265
 1218 003e 0322     		movs	r2, #3
 1219 0040 F4E7     		b	.L94
 1220              	.L99:
 1221 0042 00BF     		.align	2
 1222              	.L98:
 1223 0044 00000000 		.word	sensor
 1224 0048 00000000 		.word	fifo
 1225              		.cfi_endproc
 1226              	.LFE154:
 1228              		.section	.text.getFIFOData,"ax",%progbits
 1229              		.align	1
 1230              		.global	getFIFOData
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
 1235              	getFIFOData:
 1236              	.LVL103:
 1237              	.LFB155:
 310:Core/Src/bmp581.c **** 
 311:Core/Src/bmp581.c **** int8_t getFIFOData(struct bmp5_sensor_data* data, uint8_t numData)
 312:Core/Src/bmp581.c **** {
 1238              		.loc 1 312 1 is_stmt 1 view -0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 1, uses_anonymous_args = 0
 1242              		.loc 1 312 1 is_stmt 0 view .LVU267
 1243 0000 98B5     		push	{r3, r4, r7, lr}
 1244              	.LCFI31:
 1245              		.cfi_def_cfa_offset 16
 1246              		.cfi_offset 3, -16
 1247              		.cfi_offset 4, -12
 1248              		.cfi_offset 7, -8
 1249              		.cfi_offset 14, -4
 1250 0002 00AF     		add	r7, sp, #0
 1251              	.LCFI32:
 1252              		.cfi_def_cfa_register 7
 1253 0004 0446     		mov	r4, r0
 313:Core/Src/bmp581.c ****     // Variable to track errors returned by API calls
 314:Core/Src/bmp581.c ****     int8_t err = BMP5_OK;
 1254              		.loc 1 314 5 is_stmt 1 view .LVU268
 1255              	.LVL104:
 315:Core/Src/bmp581.c **** 
 316:Core/Src/bmp581.c ****     // Determine the number of bytes per data frame, 3 bytes per sensor
 317:Core/Src/bmp581.c ****     uint8_t bytesPerFrame;
 1256              		.loc 1 317 5 view .LVU269
 318:Core/Src/bmp581.c ****     if(fifo.frame_sel == BMP5_FIFO_TEMPERATURE_DATA
ARM GAS  /tmp/ccLP3BzJ.s 			page 29


 1257              		.loc 1 318 5 view .LVU270
 1258              		.loc 1 318 12 is_stmt 0 view .LVU271
 1259 0006 104B     		ldr	r3, .L107
 1260 0008 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 319:Core/Src/bmp581.c ****         || fifo.frame_sel == BMP5_FIFO_PRESSURE_DATA)
 1261              		.loc 1 319 9 view .LVU272
 1262 000a 013B     		subs	r3, r3, #1
 1263 000c DBB2     		uxtb	r3, r3
 318:Core/Src/bmp581.c ****     if(fifo.frame_sel == BMP5_FIFO_TEMPERATURE_DATA
 1264              		.loc 1 318 7 view .LVU273
 1265 000e 012B     		cmp	r3, #1
 1266 0010 12D9     		bls	.L105
 320:Core/Src/bmp581.c ****     {
 321:Core/Src/bmp581.c ****         bytesPerFrame = 3;
 322:Core/Src/bmp581.c ****     }
 323:Core/Src/bmp581.c ****     else
 324:Core/Src/bmp581.c ****     {
 325:Core/Src/bmp581.c ****         bytesPerFrame = 6;
 1267              		.loc 1 325 23 view .LVU274
 1268 0012 0623     		movs	r3, #6
 1269              	.L101:
 1270              	.LVL105:
 326:Core/Src/bmp581.c ****     }
 327:Core/Src/bmp581.c **** 
 328:Core/Src/bmp581.c ****     // Set number of bytes to read based on user's buffer size. If this is larger
 329:Core/Src/bmp581.c ****     // than the number of bytes in the buffer, bmp5_get_fifo_data() will
 330:Core/Src/bmp581.c ****     // automatically limit it
 331:Core/Src/bmp581.c ****     fifo.length = numData * bytesPerFrame;
 1271              		.loc 1 331 5 is_stmt 1 view .LVU275
 1272              		.loc 1 331 27 is_stmt 0 view .LVU276
 1273 0014 03FB01F1 		mul	r1, r3, r1
 1274              	.LVL106:
 1275              		.loc 1 331 17 view .LVU277
 1276 0018 0B48     		ldr	r0, .L107
 1277              	.LVL107:
 1278              		.loc 1 331 17 view .LVU278
 1279 001a 8180     		strh	r1, [r0, #4]	@ movhi
 332:Core/Src/bmp581.c **** 
 333:Core/Src/bmp581.c ****     // Create buffer to hold all bytes of FIFO buffer
 334:Core/Src/bmp581.c ****     uint8_t byteBuffer[fifo.length];
 1280              		.loc 1 334 5 is_stmt 1 view .LVU279
 1281              	.LVL108:
 1282              		.loc 1 334 13 is_stmt 0 view .LVU280
 1283 001c CB1D     		adds	r3, r1, #7
 1284              	.LVL109:
 1285              		.loc 1 334 13 view .LVU281
 1286 001e DB08     		lsrs	r3, r3, #3
 1287 0020 6A46     		mov	r2, sp
 1288 0022 A2EBC303 		sub	r3, r2, r3, lsl #3
 1289 0026 9D46     		mov	sp, r3
 1290              	.LVL110:
 335:Core/Src/bmp581.c ****     fifo.data = byteBuffer;
 1291              		.loc 1 335 5 is_stmt 1 view .LVU282
 1292              		.loc 1 335 15 is_stmt 0 view .LVU283
 1293 0028 C0F800D0 		str	sp, [r0]
 336:Core/Src/bmp581.c **** 
 337:Core/Src/bmp581.c ****     // Get all bytes out of FIFO buffer
ARM GAS  /tmp/ccLP3BzJ.s 			page 30


 338:Core/Src/bmp581.c ****     err = bmp5_get_fifo_data(&fifo, &sensor);
 1294              		.loc 1 338 5 is_stmt 1 view .LVU284
 1295              		.loc 1 338 11 is_stmt 0 view .LVU285
 1296 002c 0749     		ldr	r1, .L107+4
 1297              	.LVL111:
 1298              		.loc 1 338 11 view .LVU286
 1299 002e FFF7FEFF 		bl	bmp5_get_fifo_data
 1300              	.LVL112:
 339:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 1301              		.loc 1 339 5 is_stmt 1 view .LVU287
 1302              		.loc 1 339 7 is_stmt 0 view .LVU288
 1303 0032 18B1     		cbz	r0, .L106
 1304              	.LVL113:
 1305              	.L102:
 340:Core/Src/bmp581.c ****     {
 341:Core/Src/bmp581.c ****         return err;
 342:Core/Src/bmp581.c ****     }
 343:Core/Src/bmp581.c **** 
 344:Core/Src/bmp581.c ****     // Parse raw data into temperature and pressure data
 345:Core/Src/bmp581.c ****     return bmp5_extract_fifo_data(&fifo, data);
 346:Core/Src/bmp581.c **** }
 1306              		.loc 1 346 1 view .LVU289
 1307 0034 BD46     		mov	sp, r7
 1308              	.LCFI33:
 1309              		.cfi_remember_state
 1310              		.cfi_def_cfa_register 13
 1311              	.LVL114:
 1312              		.loc 1 346 1 view .LVU290
 1313              		@ sp needed
 1314 0036 98BD     		pop	{r3, r4, r7, pc}
 1315              	.LVL115:
 1316              	.L105:
 1317              	.LCFI34:
 1318              		.cfi_restore_state
 321:Core/Src/bmp581.c ****     }
 1319              		.loc 1 321 23 view .LVU291
 1320 0038 0323     		movs	r3, #3
 1321 003a EBE7     		b	.L101
 1322              	.LVL116:
 1323              	.L106:
 345:Core/Src/bmp581.c **** }
 1324              		.loc 1 345 5 is_stmt 1 view .LVU292
 345:Core/Src/bmp581.c **** }
 1325              		.loc 1 345 12 is_stmt 0 view .LVU293
 1326 003c 2146     		mov	r1, r4
 1327 003e 0248     		ldr	r0, .L107
 1328              	.LVL117:
 345:Core/Src/bmp581.c **** }
 1329              		.loc 1 345 12 view .LVU294
 1330 0040 FFF7FEFF 		bl	bmp5_extract_fifo_data
 1331              	.LVL118:
 1332 0044 F6E7     		b	.L102
 1333              	.L108:
 1334 0046 00BF     		.align	2
 1335              	.L107:
 1336 0048 00000000 		.word	fifo
 1337 004c 00000000 		.word	sensor
ARM GAS  /tmp/ccLP3BzJ.s 			page 31


 1338              		.cfi_endproc
 1339              	.LFE155:
 1341              		.section	.text.flushFIFO,"ax",%progbits
 1342              		.align	1
 1343              		.global	flushFIFO
 1344              		.syntax unified
 1345              		.thumb
 1346              		.thumb_func
 1348              	flushFIFO:
 1349              	.LFB156:
 347:Core/Src/bmp581.c **** 
 348:Core/Src/bmp581.c **** int8_t flushFIFO()
 349:Core/Src/bmp581.c **** {
 1350              		.loc 1 349 1 is_stmt 1 view -0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 8
 1353              		@ frame_needed = 0, uses_anonymous_args = 0
 1354 0000 00B5     		push	{lr}
 1355              	.LCFI35:
 1356              		.cfi_def_cfa_offset 4
 1357              		.cfi_offset 14, -4
 1358 0002 83B0     		sub	sp, sp, #12
 1359              	.LCFI36:
 1360              		.cfi_def_cfa_offset 16
 350:Core/Src/bmp581.c ****     // Variable to track errors returned by API calls
 351:Core/Src/bmp581.c ****     int8_t err = BMP5_OK;
 1361              		.loc 1 351 5 view .LVU296
 1362              	.LVL119:
 352:Core/Src/bmp581.c **** 
 353:Core/Src/bmp581.c ****     // There isn't a simple way to flush the FIFO buffer unfortunately. However the
 354:Core/Src/bmp581.c ****     // FIFO is automatically flushed when certain config settings change, such as
 355:Core/Src/bmp581.c ****     // the power mode. We can simply change the power mode twice to flush the buffer
 356:Core/Src/bmp581.c **** 
 357:Core/Src/bmp581.c ****     // Grab the current power mode
 358:Core/Src/bmp581.c ****     enum bmp5_powermode originalMode;
 1363              		.loc 1 358 5 view .LVU297
 359:Core/Src/bmp581.c ****     err = getMode(&originalMode);
 1364              		.loc 1 359 5 view .LVU298
 1365              		.loc 1 359 11 is_stmt 0 view .LVU299
 1366 0004 0DF10700 		add	r0, sp, #7
 1367 0008 FFF7FEFF 		bl	getMode
 1368              	.LVL120:
 360:Core/Src/bmp581.c ****     if(err != BMP5_OK)
 1369              		.loc 1 360 5 is_stmt 1 view .LVU300
 1370              		.loc 1 360 7 is_stmt 0 view .LVU301
 1371 000c 0346     		mov	r3, r0
 1372 000e 58B9     		cbnz	r0, .L110
 361:Core/Src/bmp581.c ****     {
 362:Core/Src/bmp581.c ****         return err;
 363:Core/Src/bmp581.c ****     }
 364:Core/Src/bmp581.c **** 
 365:Core/Src/bmp581.c ****     // Change the power mode to something else
 366:Core/Src/bmp581.c ****     if(originalMode != BMP5_POWERMODE_STANDBY)
 1373              		.loc 1 366 5 is_stmt 1 view .LVU302
 1374              		.loc 1 366 21 is_stmt 0 view .LVU303
 1375 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1376              		.loc 1 366 7 view .LVU304
ARM GAS  /tmp/ccLP3BzJ.s 			page 32


 1377 0014 63B1     		cbz	r3, .L111
 367:Core/Src/bmp581.c ****     {
 368:Core/Src/bmp581.c ****         // Sensor is not in standby mode, so default to that
 369:Core/Src/bmp581.c ****         err = setMode(BMP5_POWERMODE_STANDBY);
 1378              		.loc 1 369 9 is_stmt 1 view .LVU305
 1379              		.loc 1 369 15 is_stmt 0 view .LVU306
 1380 0016 FFF7FEFF 		bl	setMode
 1381              	.LVL121:
 370:Core/Src/bmp581.c ****         if(err != BMP5_OK)
 1382              		.loc 1 370 9 is_stmt 1 view .LVU307
 1383              		.loc 1 370 11 is_stmt 0 view .LVU308
 1384 001a 0346     		mov	r3, r0
 1385 001c 20B9     		cbnz	r0, .L110
 1386              	.L112:
 371:Core/Src/bmp581.c ****         {
 372:Core/Src/bmp581.c ****             return err;
 373:Core/Src/bmp581.c ****         }
 374:Core/Src/bmp581.c ****     }
 375:Core/Src/bmp581.c ****     else
 376:Core/Src/bmp581.c ****     {
 377:Core/Src/bmp581.c ****         // Already in standby, switch to forced instead
 378:Core/Src/bmp581.c ****         err = setMode(BMP5_POWERMODE_FORCED);
 379:Core/Src/bmp581.c ****         if(err != BMP5_OK)
 380:Core/Src/bmp581.c ****         {
 381:Core/Src/bmp581.c ****             return err;
 382:Core/Src/bmp581.c ****         }
 383:Core/Src/bmp581.c ****     }
 384:Core/Src/bmp581.c **** 
 385:Core/Src/bmp581.c ****     // Finally, set back to original power mode
 386:Core/Src/bmp581.c ****     return setMode(originalMode);
 1387              		.loc 1 386 5 is_stmt 1 view .LVU309
 1388              		.loc 1 386 12 is_stmt 0 view .LVU310
 1389 001e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 1390              	.LVL122:
 1391              		.loc 1 386 12 view .LVU311
 1392 0022 FFF7FEFF 		bl	setMode
 1393              	.LVL123:
 1394 0026 0346     		mov	r3, r0
 1395              	.LVL124:
 1396              	.L110:
 387:Core/Src/bmp581.c **** }
 1397              		.loc 1 387 1 view .LVU312
 1398 0028 1846     		mov	r0, r3
 1399 002a 03B0     		add	sp, sp, #12
 1400              	.LCFI37:
 1401              		.cfi_remember_state
 1402              		.cfi_def_cfa_offset 4
 1403              		@ sp needed
 1404 002c 5DF804FB 		ldr	pc, [sp], #4
 1405              	.LVL125:
 1406              	.L111:
 1407              	.LCFI38:
 1408              		.cfi_restore_state
 378:Core/Src/bmp581.c ****         if(err != BMP5_OK)
 1409              		.loc 1 378 9 is_stmt 1 view .LVU313
 378:Core/Src/bmp581.c ****         if(err != BMP5_OK)
 1410              		.loc 1 378 15 is_stmt 0 view .LVU314
ARM GAS  /tmp/ccLP3BzJ.s 			page 33


 1411 0030 0220     		movs	r0, #2
 1412              	.LVL126:
 378:Core/Src/bmp581.c ****         if(err != BMP5_OK)
 1413              		.loc 1 378 15 view .LVU315
 1414 0032 FFF7FEFF 		bl	setMode
 1415              	.LVL127:
 379:Core/Src/bmp581.c ****         {
 1416              		.loc 1 379 9 is_stmt 1 view .LVU316
 379:Core/Src/bmp581.c ****         {
 1417              		.loc 1 379 11 is_stmt 0 view .LVU317
 1418 0036 0346     		mov	r3, r0
 1419 0038 0028     		cmp	r0, #0
 1420 003a F0D0     		beq	.L112
 1421 003c F4E7     		b	.L110
 1422              		.cfi_endproc
 1423              	.LFE156:
 1425              		.section	.text.readNVM,"ax",%progbits
 1426              		.align	1
 1427              		.global	readNVM
 1428              		.syntax unified
 1429              		.thumb
 1430              		.thumb_func
 1432              	readNVM:
 1433              	.LVL128:
 1434              	.LFB157:
 388:Core/Src/bmp581.c **** 
 389:Core/Src/bmp581.c **** int8_t readNVM(uint8_t addr, uint16_t* data)
 390:Core/Src/bmp581.c **** {
 1435              		.loc 1 390 1 is_stmt 1 view -0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
 1439              		.loc 1 390 1 is_stmt 0 view .LVU319
 1440 0000 08B5     		push	{r3, lr}
 1441              	.LCFI39:
 1442              		.cfi_def_cfa_offset 8
 1443              		.cfi_offset 3, -8
 1444              		.cfi_offset 14, -4
 391:Core/Src/bmp581.c ****     return bmp5_nvm_read(addr, data, &sensor);
 1445              		.loc 1 391 5 is_stmt 1 view .LVU320
 1446              		.loc 1 391 12 is_stmt 0 view .LVU321
 1447 0002 024A     		ldr	r2, .L116
 1448 0004 FFF7FEFF 		bl	bmp5_nvm_read
 1449              	.LVL129:
 392:Core/Src/bmp581.c **** }
 1450              		.loc 1 392 1 view .LVU322
 1451 0008 08BD     		pop	{r3, pc}
 1452              	.L117:
 1453 000a 00BF     		.align	2
 1454              	.L116:
 1455 000c 00000000 		.word	sensor
 1456              		.cfi_endproc
 1457              	.LFE157:
 1459              		.section	.text.writeNVM,"ax",%progbits
 1460              		.align	1
 1461              		.global	writeNVM
 1462              		.syntax unified
ARM GAS  /tmp/ccLP3BzJ.s 			page 34


 1463              		.thumb
 1464              		.thumb_func
 1466              	writeNVM:
 1467              	.LVL130:
 1468              	.LFB158:
 393:Core/Src/bmp581.c **** 
 394:Core/Src/bmp581.c **** int8_t writeNVM(uint8_t addr, uint16_t data)
 395:Core/Src/bmp581.c **** {
 1469              		.loc 1 395 1 is_stmt 1 view -0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 8
 1472              		@ frame_needed = 0, uses_anonymous_args = 0
 1473              		.loc 1 395 1 is_stmt 0 view .LVU324
 1474 0000 00B5     		push	{lr}
 1475              	.LCFI40:
 1476              		.cfi_def_cfa_offset 4
 1477              		.cfi_offset 14, -4
 1478 0002 83B0     		sub	sp, sp, #12
 1479              	.LCFI41:
 1480              		.cfi_def_cfa_offset 16
 1481 0004 ADF80610 		strh	r1, [sp, #6]	@ movhi
 396:Core/Src/bmp581.c ****     return bmp5_nvm_write(addr, &data, &sensor);
 1482              		.loc 1 396 5 is_stmt 1 view .LVU325
 1483              		.loc 1 396 12 is_stmt 0 view .LVU326
 1484 0008 034A     		ldr	r2, .L120
 1485 000a 0DF10601 		add	r1, sp, #6
 1486              	.LVL131:
 1487              		.loc 1 396 12 view .LVU327
 1488 000e FFF7FEFF 		bl	bmp5_nvm_write
 1489              	.LVL132:
 397:Core/Src/bmp581.c **** }
 1490              		.loc 1 397 1 view .LVU328
 1491 0012 03B0     		add	sp, sp, #12
 1492              	.LCFI42:
 1493              		.cfi_def_cfa_offset 4
 1494              		@ sp needed
 1495 0014 5DF804FB 		ldr	pc, [sp], #4
 1496              	.L121:
 1497              		.align	2
 1498              	.L120:
 1499 0018 00000000 		.word	sensor
 1500              		.cfi_endproc
 1501              	.LFE158:
 1503              		.section	.bss.Kg.0,"aw",%nobits
 1504              		.align	2
 1507              	Kg.0:
 1508 0000 00000000 		.space	4
 1509              		.section	.bss.P_k_k1.2,"aw",%nobits
 1510              		.align	2
 1513              	P_k_k1.2:
 1514 0000 00000000 		.space	4
 1515              		.section	.bss.P_k1_k1.4,"aw",%nobits
 1516              		.align	2
 1519              	P_k1_k1.4:
 1520 0000 00000000 		.space	4
 1521              		.section	.bss.kalman_old.5,"aw",%nobits
 1522              		.align	2
ARM GAS  /tmp/ccLP3BzJ.s 			page 35


 1525              	kalman_old.5:
 1526 0000 00000000 		.space	4
 1527              		.global	bmp5_hal_result
 1528              		.section	.bss.bmp5_hal_result,"aw",%nobits
 1531              	bmp5_hal_result:
 1532 0000 00       		.space	1
 1533              		.global	fifo
 1534              		.section	.bss.fifo,"aw",%nobits
 1535              		.align	2
 1538              	fifo:
 1539 0000 00000000 		.space	16
 1539      00000000 
 1539      00000000 
 1539      00000000 
 1540              		.global	osrOdrConfig
 1541              		.section	.bss.osrOdrConfig,"aw",%nobits
 1542              		.align	2
 1545              	osrOdrConfig:
 1546 0000 00000000 		.space	4
 1547              		.global	sensor
 1548              		.section	.bss.sensor,"aw",%nobits
 1549              		.align	2
 1552              	sensor:
 1553 0000 00000000 		.space	24
 1553      00000000 
 1553      00000000 
 1553      00000000 
 1553      00000000 
 1554              		.text
 1555              	.Letext0:
 1556              		.file 2 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_ty
 1557              		.file 3 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 1558              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1559              		.file 5 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/lib/gcc/arm-none-eabi/12.3.1/include/stdd
 1560              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1561              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1562              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1563              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1564              		.file 10 "Drivers/bmp5_api/Inc/bmp5_defs.h"
 1565              		.file 11 "Drivers/bmp5_api/Inc/bmp5.h"
 1566              		.file 12 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/string.h"
 1567              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1568              		.file 14 "/opt/st/stm32cubeclt_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/math.h"
ARM GAS  /tmp/ccLP3BzJ.s 			page 36


DEFINED SYMBOLS
                            *ABS*:00000000 bmp581.c
     /tmp/ccLP3BzJ.s:21     .text.writeRegisters:00000000 $t
     /tmp/ccLP3BzJ.s:27     .text.writeRegisters:00000000 writeRegisters
     /tmp/ccLP3BzJ.s:110    .text.writeRegisters:00000050 $d
     /tmp/ccLP3BzJ.s:116    .text.readRegisters:00000000 $t
     /tmp/ccLP3BzJ.s:122    .text.readRegisters:00000000 readRegisters
     /tmp/ccLP3BzJ.s:213    .text.readRegisters:0000005c $d
     /tmp/ccLP3BzJ.s:1531   .bss.bmp5_hal_result:00000000 bmp5_hal_result
     /tmp/ccLP3BzJ.s:220    .text.usDelay:00000000 $t
     /tmp/ccLP3BzJ.s:226    .text.usDelay:00000000 usDelay
     /tmp/ccLP3BzJ.s:248    .text.init:00000000 $t
     /tmp/ccLP3BzJ.s:254    .text.init:00000000 init
     /tmp/ccLP3BzJ.s:312    .text.init:00000030 $d
     /tmp/ccLP3BzJ.s:1545   .bss.osrOdrConfig:00000000 osrOdrConfig
     /tmp/ccLP3BzJ.s:1538   .bss.fifo:00000000 fifo
     /tmp/ccLP3BzJ.s:1552   .bss.sensor:00000000 sensor
     /tmp/ccLP3BzJ.s:322    .text.setMode:00000000 $t
     /tmp/ccLP3BzJ.s:328    .text.setMode:00000000 setMode
     /tmp/ccLP3BzJ.s:351    .text.setMode:0000000c $d
     /tmp/ccLP3BzJ.s:356    .text.getMode:00000000 $t
     /tmp/ccLP3BzJ.s:362    .text.getMode:00000000 getMode
     /tmp/ccLP3BzJ.s:385    .text.getMode:0000000c $d
     /tmp/ccLP3BzJ.s:390    .text.enablePress:00000000 $t
     /tmp/ccLP3BzJ.s:396    .text.enablePress:00000000 enablePress
     /tmp/ccLP3BzJ.s:426    .text.enablePress:00000010 $d
     /tmp/ccLP3BzJ.s:432    .text.begin:00000000 $t
     /tmp/ccLP3BzJ.s:438    .text.begin:00000000 begin
     /tmp/ccLP3BzJ.s:491    .text.beginSPI:00000000 $t
     /tmp/ccLP3BzJ.s:497    .text.beginSPI:00000000 beginSPI
     /tmp/ccLP3BzJ.s:523    .text.beginSPI:00000014 $d
     /tmp/ccLP3BzJ.s:528    .text.getSensorData:00000000 $t
     /tmp/ccLP3BzJ.s:534    .text.getSensorData:00000000 getSensorData
     /tmp/ccLP3BzJ.s:558    .text.getSensorData:0000000c $d
     /tmp/ccLP3BzJ.s:564    .text.kalman_filter:00000000 $t
     /tmp/ccLP3BzJ.s:570    .text.kalman_filter:00000000 kalman_filter
     /tmp/ccLP3BzJ.s:641    .text.kalman_filter:00000054 $d
     /tmp/ccLP3BzJ.s:1525   .bss.kalman_old.5:00000000 kalman_old.5
     /tmp/ccLP3BzJ.s:1519   .bss.P_k1_k1.4:00000000 P_k1_k1.4
     /tmp/ccLP3BzJ.s:1513   .bss.P_k_k1.2:00000000 P_k_k1.2
     /tmp/ccLP3BzJ.s:1507   .bss.Kg.0:00000000 Kg.0
     /tmp/ccLP3BzJ.s:654    .text.calcAltitude:00000000 $t
     /tmp/ccLP3BzJ.s:660    .text.calcAltitude:00000000 calcAltitude
     /tmp/ccLP3BzJ.s:721    .text.calcAltitude:00000050 $d
     /tmp/ccLP3BzJ.s:730    .text.setODRFrequency:00000000 $t
     /tmp/ccLP3BzJ.s:736    .text.setODRFrequency:00000000 setODRFrequency
     /tmp/ccLP3BzJ.s:781    .text.setODRFrequency:0000001c $d
     /tmp/ccLP3BzJ.s:787    .text.getODRFrequency:00000000 $t
     /tmp/ccLP3BzJ.s:793    .text.getODRFrequency:00000000 getODRFrequency
     /tmp/ccLP3BzJ.s:816    .text.getODRFrequency:0000000c $d
     /tmp/ccLP3BzJ.s:821    .text.setOSRMultipliers:00000000 $t
     /tmp/ccLP3BzJ.s:827    .text.setOSRMultipliers:00000000 setOSRMultipliers
     /tmp/ccLP3BzJ.s:885    .text.setOSRMultipliers:00000028 $d
     /tmp/ccLP3BzJ.s:891    .text.getOSRMultipliers:00000000 $t
     /tmp/ccLP3BzJ.s:897    .text.getOSRMultipliers:00000000 getOSRMultipliers
     /tmp/ccLP3BzJ.s:925    .text.getOSRMultipliers:00000010 $d
     /tmp/ccLP3BzJ.s:930    .text.getOSREffective:00000000 $t
ARM GAS  /tmp/ccLP3BzJ.s 			page 37


     /tmp/ccLP3BzJ.s:936    .text.getOSREffective:00000000 getOSREffective
     /tmp/ccLP3BzJ.s:959    .text.getOSREffective:0000000c $d
     /tmp/ccLP3BzJ.s:964    .text.setFilterConfig:00000000 $t
     /tmp/ccLP3BzJ.s:970    .text.setFilterConfig:00000000 setFilterConfig
     /tmp/ccLP3BzJ.s:993    .text.setFilterConfig:0000000c $d
     /tmp/ccLP3BzJ.s:998    .text.setOORConfig:00000000 $t
     /tmp/ccLP3BzJ.s:1004   .text.setOORConfig:00000000 setOORConfig
     /tmp/ccLP3BzJ.s:1027   .text.setOORConfig:0000000c $d
     /tmp/ccLP3BzJ.s:1032   .text.setFIFOConfig:00000000 $t
     /tmp/ccLP3BzJ.s:1038   .text.setFIFOConfig:00000000 setFIFOConfig
     /tmp/ccLP3BzJ.s:1126   .text.setFIFOConfig:0000004c $d
     /tmp/ccLP3BzJ.s:1132   .text.getFIFOLength:00000000 $t
     /tmp/ccLP3BzJ.s:1138   .text.getFIFOLength:00000000 getFIFOLength
     /tmp/ccLP3BzJ.s:1223   .text.getFIFOLength:00000044 $d
     /tmp/ccLP3BzJ.s:1229   .text.getFIFOData:00000000 $t
     /tmp/ccLP3BzJ.s:1235   .text.getFIFOData:00000000 getFIFOData
     /tmp/ccLP3BzJ.s:1336   .text.getFIFOData:00000048 $d
     /tmp/ccLP3BzJ.s:1342   .text.flushFIFO:00000000 $t
     /tmp/ccLP3BzJ.s:1348   .text.flushFIFO:00000000 flushFIFO
     /tmp/ccLP3BzJ.s:1426   .text.readNVM:00000000 $t
     /tmp/ccLP3BzJ.s:1432   .text.readNVM:00000000 readNVM
     /tmp/ccLP3BzJ.s:1455   .text.readNVM:0000000c $d
     /tmp/ccLP3BzJ.s:1460   .text.writeNVM:00000000 $t
     /tmp/ccLP3BzJ.s:1466   .text.writeNVM:00000000 writeNVM
     /tmp/ccLP3BzJ.s:1499   .text.writeNVM:00000018 $d
     /tmp/ccLP3BzJ.s:1504   .bss.Kg.0:00000000 $d
     /tmp/ccLP3BzJ.s:1510   .bss.P_k_k1.2:00000000 $d
     /tmp/ccLP3BzJ.s:1516   .bss.P_k1_k1.4:00000000 $d
     /tmp/ccLP3BzJ.s:1522   .bss.kalman_old.5:00000000 $d
     /tmp/ccLP3BzJ.s:1532   .bss.bmp5_hal_result:00000000 $d
     /tmp/ccLP3BzJ.s:1535   .bss.fifo:00000000 $d
     /tmp/ccLP3BzJ.s:1542   .bss.osrOdrConfig:00000000 $d
     /tmp/ccLP3BzJ.s:1549   .bss.sensor:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_SPI_Transmit
hspi1
HAL_SPI_Receive
HAL_Delay
bmp5_soft_reset
bmp5_init
bmp5_set_power_mode
bmp5_get_power_mode
bmp5_set_osr_odr_press_config
bmp5_get_sensor_data
__aeabi_f2d
__aeabi_d2f
__aeabi_ddiv
pow
bmp5_get_osr_odr_eff
bmp5_set_iir_config
bmp5_set_oor_configuration
bmp5_set_fifo_configuration
bmp5_get_fifo_len
bmp5_get_fifo_data
bmp5_extract_fifo_data
ARM GAS  /tmp/ccLP3BzJ.s 			page 38


bmp5_nvm_read
bmp5_nvm_write
